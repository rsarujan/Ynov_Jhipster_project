<?xml version="1.0" encoding="UTF-8"?>
<testsuites name="jest tests" tests="177" failures="0" time="31.845">
  <testsuite name="Service Tests" errors="0" failures="0" skipped="0" timestamp="2020-12-01T08:43:36" time="12.714" tests="13">
    <testcase classname="Service Tests Account Service authenticate authenticationState should emit null if input is null" name="Service Tests Account Service authenticate authenticationState should emit null if input is null" time="0.032">
    </testcase>
    <testcase classname="Service Tests Account Service authenticate authenticationState should emit the same account as was in input parameter" name="Service Tests Account Service authenticate authenticationState should emit the same account as was in input parameter" time="0.017">
    </testcase>
    <testcase classname="Service Tests Account Service identity should call /account if user is undefined" name="Service Tests Account Service identity should call /account if user is undefined" time="0.01">
    </testcase>
    <testcase classname="Service Tests Account Service identity should call /account only once if not logged out after first authentication and should call /account again if user has logged out" name="Service Tests Account Service identity should call /account only once if not logged out after first authentication and should call /account again if user has logged out" time="0.01">
    </testcase>
    <testcase classname="Service Tests Account Service identity navigateToStoredUrl should navigate to the previous stored url post successful authentication" name="Service Tests Account Service identity navigateToStoredUrl should navigate to the previous stored url post successful authentication" time="0.011">
    </testcase>
    <testcase classname="Service Tests Account Service identity navigateToStoredUrl should not navigate to the previous stored url when authentication fails" name="Service Tests Account Service identity navigateToStoredUrl should not navigate to the previous stored url when authentication fails" time="0.009">
    </testcase>
    <testcase classname="Service Tests Account Service identity navigateToStoredUrl should not navigate to the previous stored url when no such url exists post successful authentication" name="Service Tests Account Service identity navigateToStoredUrl should not navigate to the previous stored url when no such url exists post successful authentication" time="0.013">
    </testcase>
    <testcase classname="Service Tests Account Service hasAnyAuthority hasAnyAuthority string parameter should return false if user is not logged" name="Service Tests Account Service hasAnyAuthority hasAnyAuthority string parameter should return false if user is not logged" time="0.007">
    </testcase>
    <testcase classname="Service Tests Account Service hasAnyAuthority hasAnyAuthority string parameter should return false if user is logged and has not authority" name="Service Tests Account Service hasAnyAuthority hasAnyAuthority string parameter should return false if user is logged and has not authority" time="0.01">
    </testcase>
    <testcase classname="Service Tests Account Service hasAnyAuthority hasAnyAuthority string parameter should return true if user is logged and has authority" name="Service Tests Account Service hasAnyAuthority hasAnyAuthority string parameter should return true if user is logged and has authority" time="0.008">
    </testcase>
    <testcase classname="Service Tests Account Service hasAnyAuthority hasAnyAuthority array parameter should return false if user is not logged" name="Service Tests Account Service hasAnyAuthority hasAnyAuthority array parameter should return false if user is not logged" time="0.011">
    </testcase>
    <testcase classname="Service Tests Account Service hasAnyAuthority hasAnyAuthority array parameter should return false if user is logged and has not authority" name="Service Tests Account Service hasAnyAuthority hasAnyAuthority array parameter should return false if user is logged and has not authority" time="0.007">
    </testcase>
    <testcase classname="Service Tests Account Service hasAnyAuthority hasAnyAuthority array parameter should return true if user is logged and has authority" name="Service Tests Account Service hasAnyAuthority hasAnyAuthority array parameter should return true if user is logged and has authority" time="0.01">
    </testcase>
  </testsuite>
  <testsuite name="Component Tests" errors="0" failures="0" skipped="0" timestamp="2020-12-01T08:43:36" time="12.961" tests="10">
    <testcase classname="Component Tests MainComponent page title navigation end should set page title to default title if pageTitle is missing on routes" name="Component Tests MainComponent page title navigation end should set page title to default title if pageTitle is missing on routes" time="0.059">
    </testcase>
    <testcase classname="Component Tests MainComponent page title navigation end should set page title to root route pageTitle if there is no child routes" name="Component Tests MainComponent page title navigation end should set page title to root route pageTitle if there is no child routes" time="0.022">
    </testcase>
    <testcase classname="Component Tests MainComponent page title navigation end should set page title to child route pageTitle if child routes exist and pageTitle is set for child route" name="Component Tests MainComponent page title navigation end should set page title to child route pageTitle if child routes exist and pageTitle is set for child route" time="0.014">
    </testcase>
    <testcase classname="Component Tests MainComponent page title navigation end should set page title to parent route pageTitle if child routes exists but pageTitle is not set for child route data" name="Component Tests MainComponent page title navigation end should set page title to parent route pageTitle if child routes exists but pageTitle is not set for child route data" time="0.015">
    </testcase>
    <testcase classname="Component Tests MainComponent page title navigation end should set page title to parent route pageTitle if child routes exists but data is not set for child route" name="Component Tests MainComponent page title navigation end should set page title to parent route pageTitle if child routes exists but data is not set for child route" time="0.013">
    </testcase>
    <testcase classname="Component Tests MainComponent page title language change should set page title to default title if pageTitle is missing on routes" name="Component Tests MainComponent page title language change should set page title to default title if pageTitle is missing on routes" time="0.017">
    </testcase>
    <testcase classname="Component Tests MainComponent page title language change should set page title to root route pageTitle if there is no child routes" name="Component Tests MainComponent page title language change should set page title to root route pageTitle if there is no child routes" time="0.011">
    </testcase>
    <testcase classname="Component Tests MainComponent page title language change should set page title to child route pageTitle if child routes exist and pageTitle is set for child route" name="Component Tests MainComponent page title language change should set page title to child route pageTitle if child routes exist and pageTitle is set for child route" time="0.013">
    </testcase>
    <testcase classname="Component Tests MainComponent page title language change should set page title to parent route pageTitle if child routes exists but pageTitle is not set for child route data" name="Component Tests MainComponent page title language change should set page title to parent route pageTitle if child routes exists but pageTitle is not set for child route data" time="0.013">
    </testcase>
    <testcase classname="Component Tests MainComponent page title language change should set page title to parent route pageTitle if child routes exists but data is not set for child route" name="Component Tests MainComponent page title language change should set page title to parent route pageTitle if child routes exists but data is not set for child route" time="0.017">
    </testcase>
  </testsuite>
  <testsuite name="Component Tests" errors="0" failures="0" skipped="0" timestamp="2020-12-01T08:43:49" time="1.373" tests="12">
    <testcase classname="Component Tests AuditsComponent today function should set toDate to current date" name="Component Tests AuditsComponent today function should set toDate to current date" time="0.055">
    </testcase>
    <testcase classname="Component Tests AuditsComponent today function if current day is last day of month then should set toDate to first day of next month" name="Component Tests AuditsComponent today function if current day is last day of month then should set toDate to first day of next month" time="0.025">
    </testcase>
    <testcase classname="Component Tests AuditsComponent today function if current day is not last day of month then should set toDate to next day of current month" name="Component Tests AuditsComponent today function if current day is not last day of month then should set toDate to next day of current month" time="0.016">
    </testcase>
    <testcase classname="Component Tests AuditsComponent previousMonth function should set fromDate to previous month" name="Component Tests AuditsComponent previousMonth function should set fromDate to previous month" time="0.014">
    </testcase>
    <testcase classname="Component Tests AuditsComponent previousMonth function if current month is January then should set fromDate to previous year last month" name="Component Tests AuditsComponent previousMonth function if current month is January then should set fromDate to previous year last month" time="0.027">
    </testcase>
    <testcase classname="Component Tests AuditsComponent previousMonth function if current month is not January then should set fromDate to current year previous month" name="Component Tests AuditsComponent previousMonth function if current month is not January then should set fromDate to current year previous month" time="0.012">
    </testcase>
    <testcase classname="Component Tests AuditsComponent By default, on init should set all default values correctly" name="Component Tests AuditsComponent By default, on init should set all default values correctly" time="0.019">
    </testcase>
    <testcase classname="Component Tests AuditsComponent OnInit Should call load all on init" name="Component Tests AuditsComponent OnInit Should call load all on init" time="0.02">
    </testcase>
    <testcase classname="Component Tests AuditsComponent Create sort object Should sort only by id asc" name="Component Tests AuditsComponent Create sort object Should sort only by id asc" time="0.014">
    </testcase>
    <testcase classname="Component Tests AuditsComponent Create sort object Should sort by timestamp asc then by id" name="Component Tests AuditsComponent Create sort object Should sort by timestamp asc then by id" time="0.026">
    </testcase>
    <testcase classname="Component Tests AuditsComponent transition Should not query data if fromDate and toDate are empty" name="Component Tests AuditsComponent transition Should not query data if fromDate and toDate are empty" time="0.013">
    </testcase>
    <testcase classname="Component Tests AuditsComponent transition Should query data if fromDate and toDate are not empty" name="Component Tests AuditsComponent transition Should query data if fromDate and toDate are not empty" time="0.013">
    </testcase>
  </testsuite>
  <testsuite name="Component Tests" errors="0" failures="0" skipped="0" timestamp="2020-12-01T08:43:49" time="1.143" tests="7">
    <testcase classname="Component Tests Alert Error Component Error Handling Should display an alert on status 0" name="Component Tests Alert Error Component Error Handling Should display an alert on status 0" time="0.088">
    </testcase>
    <testcase classname="Component Tests Alert Error Component Error Handling Should display an alert on status 404" name="Component Tests Alert Error Component Error Handling Should display an alert on status 404" time="0.025">
    </testcase>
    <testcase classname="Component Tests Alert Error Component Error Handling Should display an alert on generic error" name="Component Tests Alert Error Component Error Handling Should display an alert on generic error" time="0.016">
    </testcase>
    <testcase classname="Component Tests Alert Error Component Error Handling Should display an alert on status 400 for generic error" name="Component Tests Alert Error Component Error Handling Should display an alert on status 400 for generic error" time="0.018">
    </testcase>
    <testcase classname="Component Tests Alert Error Component Error Handling Should display an alert on status 400 for generic error without message" name="Component Tests Alert Error Component Error Handling Should display an alert on status 400 for generic error without message" time="0.017">
    </testcase>
    <testcase classname="Component Tests Alert Error Component Error Handling Should display an alert on status 400 for invalid parameters" name="Component Tests Alert Error Component Error Handling Should display an alert on status 400 for invalid parameters" time="0.015">
    </testcase>
    <testcase classname="Component Tests Alert Error Component Error Handling Should display an alert on status 400 for error headers" name="Component Tests Alert Error Component Error Handling Should display an alert on status 400 for error headers" time="0.017">
    </testcase>
  </testsuite>
  <testsuite name="Component Tests" errors="0" failures="0" skipped="0" timestamp="2020-12-01T08:43:50" time="0.74" tests="5">
    <testcase classname="Component Tests RegisterComponent should ensure the two passwords entered match" name="Component Tests RegisterComponent should ensure the two passwords entered match" time="0.027">
    </testcase>
    <testcase classname="Component Tests RegisterComponent should update success to true after creating an account" name="Component Tests RegisterComponent should update success to true after creating an account" time="0.017">
    </testcase>
    <testcase classname="Component Tests RegisterComponent should notify of user existence upon 400/login already in use" name="Component Tests RegisterComponent should notify of user existence upon 400/login already in use" time="0.016">
    </testcase>
    <testcase classname="Component Tests RegisterComponent should notify of email existence upon 400/email address already in use" name="Component Tests RegisterComponent should notify of email existence upon 400/email address already in use" time="0.014">
    </testcase>
    <testcase classname="Component Tests RegisterComponent should notify of generic error" name="Component Tests RegisterComponent should notify of generic error" time="0.015">
    </testcase>
  </testsuite>
  <testsuite name="Service Tests" errors="0" failures="0" skipped="0" timestamp="2020-12-01T08:43:50" time="0.899" tests="5">
    <testcase classname="Service Tests Emprunt Service Service methods should find an element" name="Service Tests Emprunt Service Service methods should find an element" time="0.017">
    </testcase>
    <testcase classname="Service Tests Emprunt Service Service methods should create a Emprunt" name="Service Tests Emprunt Service Service methods should create a Emprunt" time="0.03">
    </testcase>
    <testcase classname="Service Tests Emprunt Service Service methods should update a Emprunt" name="Service Tests Emprunt Service Service methods should update a Emprunt" time="0.017">
    </testcase>
    <testcase classname="Service Tests Emprunt Service Service methods should return a list of Emprunt" name="Service Tests Emprunt Service Service methods should return a list of Emprunt" time="0.011">
    </testcase>
    <testcase classname="Service Tests Emprunt Service Service methods should delete a Emprunt" name="Service Tests Emprunt Service Service methods should delete a Emprunt" time="0.008">
    </testcase>
  </testsuite>
  <testsuite name="Component Tests" errors="0" failures="0" skipped="0" timestamp="2020-12-01T08:43:51" time="0.536" tests="4">
    <testcase classname="Component Tests LoginComponent should authenticate the user" name="Component Tests LoginComponent should authenticate the user" time="0.023">
    </testcase>
    <testcase classname="Component Tests LoginComponent should empty the credentials upon cancel" name="Component Tests LoginComponent should empty the credentials upon cancel" time="0.014">
    </testcase>
    <testcase classname="Component Tests LoginComponent should redirect user when register" name="Component Tests LoginComponent should redirect user when register" time="0.012">
    </testcase>
    <testcase classname="Component Tests LoginComponent should redirect user when request password" name="Component Tests LoginComponent should redirect user when request password" time="0.012">
    </testcase>
  </testsuite>
  <testsuite name="Service Tests" errors="0" failures="0" skipped="0" timestamp="2020-12-01T08:43:51" time="0.535" tests="5">
    <testcase classname="Service Tests Livre Service Service methods should find an element" name="Service Tests Livre Service Service methods should find an element" time="0.011">
    </testcase>
    <testcase classname="Service Tests Livre Service Service methods should create a Livre" name="Service Tests Livre Service Service methods should create a Livre" time="0.015">
    </testcase>
    <testcase classname="Service Tests Livre Service Service methods should update a Livre" name="Service Tests Livre Service Service methods should update a Livre" time="0.012">
    </testcase>
    <testcase classname="Service Tests Livre Service Service methods should return a list of Livre" name="Service Tests Livre Service Service methods should return a list of Livre" time="0.011">
    </testcase>
    <testcase classname="Service Tests Livre Service Service methods should delete a Livre" name="Service Tests Livre Service Service methods should delete a Livre" time="0.012">
    </testcase>
  </testsuite>
  <testsuite name="Component Tests" errors="0" failures="0" skipped="0" timestamp="2020-12-01T08:43:51" time="0.895" tests="3">
    <testcase classname="Component Tests User Management Update Component OnInit Should load authorities and language on init" name="Component Tests User Management Update Component OnInit Should load authorities and language on init" time="0.022">
    </testcase>
    <testcase classname="Component Tests User Management Update Component save Should call update service on save for existing user" name="Component Tests User Management Update Component save Should call update service on save for existing user" time="0.028">
    </testcase>
    <testcase classname="Component Tests User Management Update Component save Should call create service on save for new user" name="Component Tests User Management Update Component save Should call create service on save for new user" time="0.015">
    </testcase>
  </testsuite>
  <testsuite name="Component Tests" errors="0" failures="0" skipped="0" timestamp="2020-12-01T08:43:51" time="0.811" tests="5">
    <testcase classname="Component Tests PasswordResetFinishComponent should define its initial state" name="Component Tests PasswordResetFinishComponent should define its initial state" time="0.024">
    </testcase>
    <testcase classname="Component Tests PasswordResetFinishComponent sets focus after the view has been initialized" name="Component Tests PasswordResetFinishComponent sets focus after the view has been initialized" time="0.016">
    </testcase>
    <testcase classname="Component Tests PasswordResetFinishComponent should ensure the two passwords entered match" name="Component Tests PasswordResetFinishComponent should ensure the two passwords entered match" time="0.018">
    </testcase>
    <testcase classname="Component Tests PasswordResetFinishComponent should update success to true after resetting password" name="Component Tests PasswordResetFinishComponent should update success to true after resetting password" time="0.016">
    </testcase>
    <testcase classname="Component Tests PasswordResetFinishComponent should notify of generic error" name="Component Tests PasswordResetFinishComponent should notify of generic error" time="0.016">
    </testcase>
  </testsuite>
  <testsuite name="Service Tests" errors="0" failures="0" skipped="0" timestamp="2020-12-01T08:43:52" time="0.629" tests="5">
    <testcase classname="Service Tests Emplacement Service Service methods should find an element" name="Service Tests Emplacement Service Service methods should find an element" time="0.02">
    </testcase>
    <testcase classname="Service Tests Emplacement Service Service methods should create a Emplacement" name="Service Tests Emplacement Service Service methods should create a Emplacement" time="0.048">
    </testcase>
    <testcase classname="Service Tests Emplacement Service Service methods should update a Emplacement" name="Service Tests Emplacement Service Service methods should update a Emplacement" time="0.016">
    </testcase>
    <testcase classname="Service Tests Emplacement Service Service methods should return a list of Emplacement" name="Service Tests Emplacement Service Service methods should return a list of Emplacement" time="0.013">
    </testcase>
    <testcase classname="Service Tests Emplacement Service Service methods should delete a Emplacement" name="Service Tests Emplacement Service Service methods should delete a Emplacement" time="0.017">
    </testcase>
  </testsuite>
  <testsuite name="Service Tests" errors="0" failures="0" skipped="0" timestamp="2020-12-01T08:43:52" time="0.597" tests="5">
    <testcase classname="Service Tests Exemplaire Service Service methods should find an element" name="Service Tests Exemplaire Service Service methods should find an element" time="0.016">
    </testcase>
    <testcase classname="Service Tests Exemplaire Service Service methods should create a Exemplaire" name="Service Tests Exemplaire Service Service methods should create a Exemplaire" time="0.019">
    </testcase>
    <testcase classname="Service Tests Exemplaire Service Service methods should update a Exemplaire" name="Service Tests Exemplaire Service Service methods should update a Exemplaire" time="0.012">
    </testcase>
    <testcase classname="Service Tests Exemplaire Service Service methods should return a list of Exemplaire" name="Service Tests Exemplaire Service Service methods should return a list of Exemplaire" time="0.011">
    </testcase>
    <testcase classname="Service Tests Exemplaire Service Service methods should delete a Exemplaire" name="Service Tests Exemplaire Service Service methods should delete a Exemplaire" time="0.007">
    </testcase>
  </testsuite>
  <testsuite name="Service Tests" errors="0" failures="0" skipped="0" timestamp="2020-12-01T08:43:53" time="0.613" tests="5">
    <testcase classname="Service Tests Auteur Service Service methods should find an element" name="Service Tests Auteur Service Service methods should find an element" time="0.01">
    </testcase>
    <testcase classname="Service Tests Auteur Service Service methods should create a Auteur" name="Service Tests Auteur Service Service methods should create a Auteur" time="0.01">
    </testcase>
    <testcase classname="Service Tests Auteur Service Service methods should update a Auteur" name="Service Tests Auteur Service Service methods should update a Auteur" time="0.011">
    </testcase>
    <testcase classname="Service Tests Auteur Service Service methods should return a list of Auteur" name="Service Tests Auteur Service Service methods should return a list of Auteur" time="0.008">
    </testcase>
    <testcase classname="Service Tests Auteur Service Service methods should delete a Auteur" name="Service Tests Auteur Service Service methods should delete a Auteur" time="0.008">
    </testcase>
  </testsuite>
  <testsuite name="Service Tests" errors="0" failures="0" skipped="0" timestamp="2020-12-01T08:43:53" time="0.589" tests="5">
    <testcase classname="Service Tests Theme Service Service methods should find an element" name="Service Tests Theme Service Service methods should find an element" time="0.014">
    </testcase>
    <testcase classname="Service Tests Theme Service Service methods should create a Theme" name="Service Tests Theme Service Service methods should create a Theme" time="0.012">
    </testcase>
    <testcase classname="Service Tests Theme Service Service methods should update a Theme" name="Service Tests Theme Service Service methods should update a Theme" time="0.008">
    </testcase>
    <testcase classname="Service Tests Theme Service Service methods should return a list of Theme" name="Service Tests Theme Service Service methods should return a list of Theme" time="0.007">
    </testcase>
    <testcase classname="Service Tests Theme Service Service methods should delete a Theme" name="Service Tests Theme Service Service methods should delete a Theme" time="0.008">
    </testcase>
  </testsuite>
  <testsuite name="Component Tests" errors="0" failures="0" skipped="0" timestamp="2020-12-01T08:43:54" time="0.624" tests="4">
    <testcase classname="Component Tests PasswordComponent should show error if passwords do not match" name="Component Tests PasswordComponent should show error if passwords do not match" time="0.018">
    </testcase>
    <testcase classname="Component Tests PasswordComponent should call Auth.changePassword when passwords match" name="Component Tests PasswordComponent should call Auth.changePassword when passwords match" time="0.02">
    </testcase>
    <testcase classname="Component Tests PasswordComponent should set success to true upon success" name="Component Tests PasswordComponent should set success to true upon success" time="0.011">
    </testcase>
    <testcase classname="Component Tests PasswordComponent should notify of error if change password fails" name="Component Tests PasswordComponent should notify of error if change password fails" time="0.013">
    </testcase>
  </testsuite>
  <testsuite name="Component Tests" errors="0" failures="0" skipped="0" timestamp="2020-12-01T08:43:54" time="0.619" tests="2">
    <testcase classname="Component Tests User Management Component OnInit Should call load all on init" name="Component Tests User Management Component OnInit Should call load all on init" time="0.02">
    </testcase>
    <testcase classname="Component Tests User Management Component setActive Should update user and call load all" name="Component Tests User Management Component setActive Should update user and call load all" time="0.015">
    </testcase>
  </testsuite>
  <testsuite name="Service Tests" errors="0" failures="0" skipped="0" timestamp="2020-12-01T08:43:54" time="0.526" tests="4">
    <testcase classname="Service Tests User Service Service methods should call correct URL" name="Service Tests User Service Service methods should call correct URL" time="0.016">
    </testcase>
    <testcase classname="Service Tests User Service Service methods should return User" name="Service Tests User Service Service methods should return User" time="0.009">
    </testcase>
    <testcase classname="Service Tests User Service Service methods should return Authorities" name="Service Tests User Service Service methods should return Authorities" time="0.011">
    </testcase>
    <testcase classname="Service Tests User Service Service methods should propagate not found response" name="Service Tests User Service Service methods should propagate not found response" time="0.02">
    </testcase>
  </testsuite>
  <testsuite name="Component Tests" errors="0" failures="0" skipped="0" timestamp="2020-12-01T08:43:54" time="0.639" tests="3">
    <testcase classname="Component Tests SettingsComponent should send the current identity upon save" name="Component Tests SettingsComponent should send the current identity upon save" time="0.03">
    </testcase>
    <testcase classname="Component Tests SettingsComponent should notify of success upon successful save" name="Component Tests SettingsComponent should notify of success upon successful save" time="0.016">
    </testcase>
    <testcase classname="Component Tests SettingsComponent should notify of error upon failed save" name="Component Tests SettingsComponent should notify of error upon failed save" time="0.021">
    </testcase>
  </testsuite>
  <testsuite name="Component Tests" errors="0" failures="0" skipped="0" timestamp="2020-12-01T08:43:55" time="0.72" tests="3">
    <testcase classname="Component Tests LogsComponent OnInit should set all default values correctly" name="Component Tests LogsComponent OnInit should set all default values correctly" time="0.033">
    </testcase>
    <testcase classname="Component Tests LogsComponent OnInit Should call load all on init" name="Component Tests LogsComponent OnInit Should call load all on init" time="0.014">
    </testcase>
    <testcase classname="Component Tests LogsComponent change log level should change log level correctly" name="Component Tests LogsComponent change log level should change log level correctly" time="0.018">
    </testcase>
  </testsuite>
  <testsuite name="Service Tests" errors="0" failures="0" skipped="0" timestamp="2020-12-01T08:43:55" time="0.668" tests="3">
    <testcase classname="Service Tests Logs Service Service methods should call correct URL" name="Service Tests Logs Service Service methods should call correct URL" time="0.018">
    </testcase>
    <testcase classname="Service Tests Logs Service Service methods should get the config" name="Service Tests Logs Service Service methods should get the config" time="0.015">
    </testcase>
    <testcase classname="Service Tests Logs Service Service methods should get the env" name="Service Tests Logs Service Service methods should get the env" time="0.013">
    </testcase>
  </testsuite>
  <testsuite name="Service Tests" errors="0" failures="0" skipped="0" timestamp="2020-12-01T08:43:55" time="0.589" tests="3">
    <testcase classname="Service Tests Audits Service Service methods should call correct URL" name="Service Tests Audits Service Service methods should call correct URL" time="0.014">
    </testcase>
    <testcase classname="Service Tests Audits Service Service methods should return Audits" name="Service Tests Audits Service Service methods should return Audits" time="0.014">
    </testcase>
    <testcase classname="Service Tests Audits Service Service methods should propagate not found response" name="Service Tests Audits Service Service methods should propagate not found response" time="0.009">
    </testcase>
  </testsuite>
  <testsuite name="Component Tests" errors="0" failures="0" skipped="0" timestamp="2020-12-01T08:43:56" time="0.677" tests="2">
    <testcase classname="Component Tests Emplacement Management Delete Component confirmDelete Should call delete service on confirmDelete" name="Component Tests Emplacement Management Delete Component confirmDelete Should call delete service on confirmDelete" time="0.031">
    </testcase>
    <testcase classname="Component Tests Emplacement Management Delete Component confirmDelete Should not call delete service on clear" name="Component Tests Emplacement Management Delete Component confirmDelete Should not call delete service on clear" time="0.029">
    </testcase>
  </testsuite>
  <testsuite name="Component Tests" errors="0" failures="0" skipped="0" timestamp="2020-12-01T08:43:56" time="0.522" tests="2">
    <testcase classname="Component Tests Exemplaire Management Delete Component confirmDelete Should call delete service on confirmDelete" name="Component Tests Exemplaire Management Delete Component confirmDelete Should call delete service on confirmDelete" time="0.032">
    </testcase>
    <testcase classname="Component Tests Exemplaire Management Delete Component confirmDelete Should not call delete service on clear" name="Component Tests Exemplaire Management Delete Component confirmDelete Should not call delete service on clear" time="0.022">
    </testcase>
  </testsuite>
  <testsuite name="Component Tests" errors="0" failures="0" skipped="0" timestamp="2020-12-01T08:43:56" time="0.554" tests="2">
    <testcase classname="Component Tests Emprunt Management Delete Component confirmDelete Should call delete service on confirmDelete" name="Component Tests Emprunt Management Delete Component confirmDelete Should call delete service on confirmDelete" time="0.029">
    </testcase>
    <testcase classname="Component Tests Emprunt Management Delete Component confirmDelete Should not call delete service on clear" name="Component Tests Emprunt Management Delete Component confirmDelete Should not call delete service on clear" time="0.028">
    </testcase>
  </testsuite>
  <testsuite name="Component Tests" errors="0" failures="0" skipped="0" timestamp="2020-12-01T08:43:57" time="0.599" tests="2">
    <testcase classname="Component Tests Auteur Management Delete Component confirmDelete Should call delete service on confirmDelete" name="Component Tests Auteur Management Delete Component confirmDelete Should call delete service on confirmDelete" time="0.041">
    </testcase>
    <testcase classname="Component Tests Auteur Management Delete Component confirmDelete Should not call delete service on clear" name="Component Tests Auteur Management Delete Component confirmDelete Should not call delete service on clear" time="0.021">
    </testcase>
  </testsuite>
  <testsuite name="Component Tests" errors="0" failures="0" skipped="0" timestamp="2020-12-01T08:43:57" time="0.63" tests="2">
    <testcase classname="Component Tests Livre Management Delete Component confirmDelete Should call delete service on confirmDelete" name="Component Tests Livre Management Delete Component confirmDelete Should call delete service on confirmDelete" time="0.025">
    </testcase>
    <testcase classname="Component Tests Livre Management Delete Component confirmDelete Should not call delete service on clear" name="Component Tests Livre Management Delete Component confirmDelete Should not call delete service on clear" time="0.036">
    </testcase>
  </testsuite>
  <testsuite name="Component Tests" errors="0" failures="0" skipped="0" timestamp="2020-12-01T08:43:57" time="0.514" tests="2">
    <testcase classname="Component Tests Theme Management Delete Component confirmDelete Should call delete service on confirmDelete" name="Component Tests Theme Management Delete Component confirmDelete Should call delete service on confirmDelete" time="0.036">
    </testcase>
    <testcase classname="Component Tests Theme Management Delete Component confirmDelete Should not call delete service on clear" name="Component Tests Theme Management Delete Component confirmDelete Should not call delete service on clear" time="0.019">
    </testcase>
  </testsuite>
  <testsuite name="Component Tests" errors="0" failures="0" skipped="0" timestamp="2020-12-01T08:43:57" time="0.615" tests="3">
    <testcase classname="Component Tests HealthComponent getBadgeClass should get badge class" name="Component Tests HealthComponent getBadgeClass should get badge class" time="0.016">
    </testcase>
    <testcase classname="Component Tests HealthComponent refresh should call refresh on init" name="Component Tests HealthComponent refresh should call refresh on init" time="0.012">
    </testcase>
    <testcase classname="Component Tests HealthComponent refresh should handle a 503 on refreshing health data" name="Component Tests HealthComponent refresh should handle a 503 on refreshing health data" time="0.011">
    </testcase>
  </testsuite>
  <testsuite name="Component Tests" errors="0" failures="0" skipped="0" timestamp="2020-12-01T08:43:58" time="0.55" tests="3">
    <testcase classname="Component Tests PasswordResetInitComponent sets focus after the view has been initialized" name="Component Tests PasswordResetInitComponent sets focus after the view has been initialized" time="0.017">
    </testcase>
    <testcase classname="Component Tests PasswordResetInitComponent notifies of success upon successful requestReset" name="Component Tests PasswordResetInitComponent notifies of success upon successful requestReset" time="0.011">
    </testcase>
    <testcase classname="Component Tests PasswordResetInitComponent no notification of success upon error response" name="Component Tests PasswordResetInitComponent no notification of success upon error response" time="0.01">
    </testcase>
  </testsuite>
  <testsuite name="Component Tests" errors="0" failures="0" skipped="0" timestamp="2020-12-01T08:43:58" time="0.562" tests="2">
    <testcase classname="Component Tests Emplacement Management Update Component save Should call update service on save for existing entity" name="Component Tests Emplacement Management Update Component save Should call update service on save for existing entity" time="0.031">
    </testcase>
    <testcase classname="Component Tests Emplacement Management Update Component save Should call create service on save for new entity" name="Component Tests Emplacement Management Update Component save Should call create service on save for new entity" time="0.034">
    </testcase>
  </testsuite>
  <testsuite name="Component Tests" errors="0" failures="0" skipped="0" timestamp="2020-12-01T08:43:58" time="0.633" tests="2">
    <testcase classname="Component Tests Exemplaire Management Update Component save Should call update service on save for existing entity" name="Component Tests Exemplaire Management Update Component save Should call update service on save for existing entity" time="0.039">
    </testcase>
    <testcase classname="Component Tests Exemplaire Management Update Component save Should call create service on save for new entity" name="Component Tests Exemplaire Management Update Component save Should call create service on save for new entity" time="0.023">
    </testcase>
  </testsuite>
  <testsuite name="Component Tests" errors="0" failures="0" skipped="0" timestamp="2020-12-01T08:43:59" time="0.687" tests="1">
    <testcase classname="Component Tests ConfigurationComponent OnInit Should call load all on init" name="Component Tests ConfigurationComponent OnInit Should call load all on init" time="0.025">
    </testcase>
  </testsuite>
  <testsuite name="Component Tests" errors="0" failures="0" skipped="0" timestamp="2020-12-01T08:43:59" time="0.661" tests="2">
    <testcase classname="Component Tests Emprunt Management Update Component save Should call update service on save for existing entity" name="Component Tests Emprunt Management Update Component save Should call update service on save for existing entity" time="0.031">
    </testcase>
    <testcase classname="Component Tests Emprunt Management Update Component save Should call create service on save for new entity" name="Component Tests Emprunt Management Update Component save Should call create service on save for new entity" time="0.021">
    </testcase>
  </testsuite>
  <testsuite name="Component Tests" errors="0" failures="0" skipped="0" timestamp="2020-12-01T08:43:59" time="0.674" tests="2">
    <testcase classname="Component Tests Auteur Management Update Component save Should call update service on save for existing entity" name="Component Tests Auteur Management Update Component save Should call update service on save for existing entity" time="0.032">
    </testcase>
    <testcase classname="Component Tests Auteur Management Update Component save Should call create service on save for new entity" name="Component Tests Auteur Management Update Component save Should call create service on save for new entity" time="0.026">
    </testcase>
  </testsuite>
  <testsuite name="Component Tests" errors="0" failures="0" skipped="0" timestamp="2020-12-01T08:44:00" time="0.55" tests="3">
    <testcase classname="Component Tests ActivateComponent calls activate.get with the key from params" name="Component Tests ActivateComponent calls activate.get with the key from params" time="0.018">
    </testcase>
    <testcase classname="Component Tests ActivateComponent should set set success to true upon successful activation" name="Component Tests ActivateComponent should set set success to true upon successful activation" time="0.019">
    </testcase>
    <testcase classname="Component Tests ActivateComponent should set set error to true upon activation failure" name="Component Tests ActivateComponent should set set error to true upon activation failure" time="0.012">
    </testcase>
  </testsuite>
  <testsuite name="Component Tests" errors="0" failures="0" skipped="0" timestamp="2020-12-01T08:44:00" time="0.517" tests="2">
    <testcase classname="Component Tests Livre Management Update Component save Should call update service on save for existing entity" name="Component Tests Livre Management Update Component save Should call update service on save for existing entity" time="0.025">
    </testcase>
    <testcase classname="Component Tests Livre Management Update Component save Should call create service on save for new entity" name="Component Tests Livre Management Update Component save Should call create service on save for new entity" time="0.025">
    </testcase>
  </testsuite>
  <testsuite name="Component Tests" errors="0" failures="0" skipped="0" timestamp="2020-12-01T08:44:00" time="0.495" tests="2">
    <testcase classname="Component Tests Theme Management Update Component save Should call update service on save for existing entity" name="Component Tests Theme Management Update Component save Should call update service on save for existing entity" time="0.026">
    </testcase>
    <testcase classname="Component Tests Theme Management Update Component save Should call create service on save for new entity" name="Component Tests Theme Management Update Component save Should call create service on save for new entity" time="0.023">
    </testcase>
  </testsuite>
  <testsuite name="Component Tests" errors="0" failures="0" skipped="0" timestamp="2020-12-01T08:44:01" time="0.397" tests="1">
    <testcase classname="Component Tests User Management Delete Component confirmDelete Should call delete service on confirmDelete" name="Component Tests User Management Delete Component confirmDelete Should call delete service on confirmDelete" time="0.022">
    </testcase>
  </testsuite>
  <testsuite name="Service Tests" errors="0" failures="0" skipped="0" timestamp="2020-12-01T08:44:01" time="0.398" tests="3">
    <testcase classname="Service Tests Logs Service Service methods should call correct URL" name="Service Tests Logs Service Service methods should call correct URL" time="0.019">
    </testcase>
    <testcase classname="Service Tests Logs Service Service methods should return Metrics" name="Service Tests Logs Service Service methods should return Metrics" time="0.008">
    </testcase>
    <testcase classname="Service Tests Logs Service Service methods should return Thread Dump" name="Service Tests Logs Service Service methods should return Thread Dump" time="0.007">
    </testcase>
  </testsuite>
  <testsuite name="Component Tests" errors="0" failures="0" skipped="0" timestamp="2020-12-01T08:44:01" time="0.489" tests="1">
    <testcase classname="Component Tests User Management Detail Component OnInit Should call load all on init" name="Component Tests User Management Detail Component OnInit Should call load all on init" time="0.02">
    </testcase>
  </testsuite>
  <testsuite name="Component Tests" errors="0" failures="0" skipped="0" timestamp="2020-12-01T08:44:01" time="0.94" tests="3">
    <testcase classname="Component Tests PasswordStrengthBarComponent PasswordStrengthBarComponents should initialize with default values" name="Component Tests PasswordStrengthBarComponent PasswordStrengthBarComponents should initialize with default values" time="0.018">
    </testcase>
    <testcase classname="Component Tests PasswordStrengthBarComponent PasswordStrengthBarComponents should increase strength upon password value change" name="Component Tests PasswordStrengthBarComponent PasswordStrengthBarComponents should increase strength upon password value change" time="0.016">
    </testcase>
    <testcase classname="Component Tests PasswordStrengthBarComponent PasswordStrengthBarComponents should change the color based on strength" name="Component Tests PasswordStrengthBarComponent PasswordStrengthBarComponents should change the color based on strength" time="0.01">
    </testcase>
  </testsuite>
  <testsuite name="Component Tests" errors="0" failures="0" skipped="0" timestamp="2020-12-01T08:44:02" time="0.515" tests="2">
    <testcase classname="Component Tests Navbar Component Should call profileService.getProfileInfo on init" name="Component Tests Navbar Component Should call profileService.getProfileInfo on init" time="0.018">
    </testcase>
    <testcase classname="Component Tests Navbar Component Should call accountService.isAuthenticated on authentication" name="Component Tests Navbar Component Should call accountService.isAuthenticated on authentication" time="0.011">
    </testcase>
  </testsuite>
  <testsuite name="Component Tests" errors="0" failures="0" skipped="0" timestamp="2020-12-01T08:44:02" time="0.469" tests="3">
    <testcase classname="Component Tests Home Component Should call accountService.getAuthenticationState on init" name="Component Tests Home Component Should call accountService.getAuthenticationState on init" time="0.017">
    </testcase>
    <testcase classname="Component Tests Home Component Should call accountService.isAuthenticated when it checks authentication" name="Component Tests Home Component Should call accountService.isAuthenticated when it checks authentication" time="0.019">
    </testcase>
    <testcase classname="Component Tests Home Component Should call loginModalService.open on login" name="Component Tests Home Component Should call loginModalService.open on login" time="0.019">
    </testcase>
  </testsuite>
  <testsuite name="Component Tests" errors="0" failures="0" skipped="0" timestamp="2020-12-01T08:44:02" time="0.442" tests="1">
    <testcase classname="Component Tests Emplacement Management Component Should call load all on init" name="Component Tests Emplacement Management Component Should call load all on init" time="0.024">
    </testcase>
  </testsuite>
  <testsuite name="Component Tests" errors="0" failures="0" skipped="0" timestamp="2020-12-01T08:44:02" time="0.492" tests="1">
    <testcase classname="Component Tests Exemplaire Management Component Should call load all on init" name="Component Tests Exemplaire Management Component Should call load all on init" time="0.034">
    </testcase>
  </testsuite>
  <testsuite name="Component Tests" errors="0" failures="0" skipped="0" timestamp="2020-12-01T08:44:03" time="0.465" tests="1">
    <testcase classname="Component Tests Emprunt Management Component Should call load all on init" name="Component Tests Emprunt Management Component Should call load all on init" time="0.023">
    </testcase>
  </testsuite>
  <testsuite name="Component Tests" errors="0" failures="0" skipped="0" timestamp="2020-12-01T08:44:03" time="0.432" tests="1">
    <testcase classname="Component Tests Auteur Management Component Should call load all on init" name="Component Tests Auteur Management Component Should call load all on init" time="0.028">
    </testcase>
  </testsuite>
  <testsuite name="Component Tests" errors="0" failures="0" skipped="0" timestamp="2020-12-01T08:44:03" time="0.421" tests="1">
    <testcase classname="Component Tests Livre Management Component Should call load all on init" name="Component Tests Livre Management Component Should call load all on init" time="0.029">
    </testcase>
  </testsuite>
  <testsuite name="Component Tests" errors="0" failures="0" skipped="0" timestamp="2020-12-01T08:44:03" time="0.451" tests="1">
    <testcase classname="Component Tests Theme Management Component Should call load all on init" name="Component Tests Theme Management Component Should call load all on init" time="0.027">
    </testcase>
  </testsuite>
  <testsuite name="Component Tests" errors="0" failures="0" skipped="0" timestamp="2020-12-01T08:44:04" time="0.486" tests="1">
    <testcase classname="Component Tests MetricsComponent refresh should call refresh on init" name="Component Tests MetricsComponent refresh should call refresh on init" time="0.026">
    </testcase>
  </testsuite>
  <testsuite name="Service Tests" errors="0" failures="0" skipped="0" timestamp="2020-12-01T08:44:04" time="0.435" tests="2">
    <testcase classname="Service Tests Login Modal Service Service methods Should call open method for NgbModal when open method is called" name="Service Tests Login Modal Service Service methods Should call open method for NgbModal when open method is called" time="0.015">
    </testcase>
    <testcase classname="Service Tests Login Modal Service Service methods Should call open method for NgbModal one time when open method is called twice" name="Service Tests Login Modal Service Service methods Should call open method for NgbModal one time when open method is called twice" time="0.007">
    </testcase>
  </testsuite>
  <testsuite name="Service Tests" errors="0" failures="0" skipped="0" timestamp="2020-12-01T08:44:04" time="0.385" tests="2">
    <testcase classname="Service Tests Logs Service Service methods should call correct URL" name="Service Tests Logs Service Service methods should call correct URL" time="0.015">
    </testcase>
    <testcase classname="Service Tests Logs Service Service methods should change log level" name="Service Tests Logs Service Service methods should change log level" time="0.008">
    </testcase>
  </testsuite>
  <testsuite name="Component Tests" errors="0" failures="0" skipped="0" timestamp="2020-12-01T08:44:04" time="0.488" tests="1">
    <testcase classname="Component Tests Emplacement Management Detail Component OnInit Should load emplacement on init" name="Component Tests Emplacement Management Detail Component OnInit Should load emplacement on init" time="0.026">
    </testcase>
  </testsuite>
  <testsuite name="Component Tests" errors="0" failures="0" skipped="0" timestamp="2020-12-01T08:44:04" time="0.531" tests="1">
    <testcase classname="Component Tests Exemplaire Management Detail Component OnInit Should load exemplaire on init" name="Component Tests Exemplaire Management Detail Component OnInit Should load exemplaire on init" time="0.056">
    </testcase>
  </testsuite>
  <testsuite name="Component Tests" errors="0" failures="0" skipped="0" timestamp="2020-12-01T08:44:05" time="0.562" tests="1">
    <testcase classname="Component Tests Emprunt Management Detail Component OnInit Should load emprunt on init" name="Component Tests Emprunt Management Detail Component OnInit Should load emprunt on init" time="0.042">
    </testcase>
  </testsuite>
  <testsuite name="Component Tests" errors="0" failures="0" skipped="0" timestamp="2020-12-01T08:44:05" time="0.482" tests="1">
    <testcase classname="Component Tests Livre Management Detail Component OnInit Should load livre on init" name="Component Tests Livre Management Detail Component OnInit Should load livre on init" time="0.024">
    </testcase>
  </testsuite>
  <testsuite name="Component Tests" errors="0" failures="0" skipped="0" timestamp="2020-12-01T08:44:05" time="0.662" tests="1">
    <testcase classname="Component Tests Auteur Management Detail Component OnInit Should load auteur on init" name="Component Tests Auteur Management Detail Component OnInit Should load auteur on init" time="0.031">
    </testcase>
  </testsuite>
  <testsuite name="Component Tests" errors="0" failures="0" skipped="0" timestamp="2020-12-01T08:44:06" time="0.435" tests="1">
    <testcase classname="Component Tests Theme Management Detail Component OnInit Should load theme on init" name="Component Tests Theme Management Detail Component OnInit Should load theme on init" time="0.023">
    </testcase>
  </testsuite>
  <testsuite name="Component Tests" errors="0" failures="0" skipped="0" timestamp="2020-12-01T08:44:06" time="0.42" tests="2">
    <testcase classname="Component Tests Alert Component Should call alertService.get on init" name="Component Tests Alert Component Should call alertService.get on init" time="0.015">
    </testcase>
    <testcase classname="Component Tests Alert Component Should call alertService.clear on destroy" name="Component Tests Alert Component Should call alertService.clear on destroy" time="0.012">
    </testcase>
  </testsuite>
</testsuites>