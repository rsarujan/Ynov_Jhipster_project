{"version":3,"sources":["/Users/sarujanrajaratnam/Desktop/Ynov/YNOV_PROJET_BIBLIOTHEQUE_CLEMENCE_SARUJAN/Ynov_TEST_Projet/src/main/webapp/app/entities/livre/livre.service.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmBG;;;;;;;;;;;;;;;;;;;;AAnBH,MAAA,MAAA;AAAA;AAAA,yBAAA,OAAA,CAAA,eAAA,CAAA,CAAA;AACA,MAAA,MAAA;AAAA;AAAA,yBAAA,OAAA,CAAA,sBAAA,CAAA,CAAA;AAGA,MAAA,eAAA;AAAA;AAAA,yBAAA,OAAA,CAAA,mBAAA,CAAA,CAAA;AACA,MAAA,cAAA;AAAA;AAAA,yBAAA,OAAA,CAAA,8BAAA,CAAA,CAAA;;;;AAOA,IAAa,YAAY,GAAzB,MAAa,YAAb,CAAyB;AAGvB,EAAA,WAAA,CAAsB,IAAtB,EAAsC;AAAA;AAAA;AAAA;AAAhB,SAAA,IAAA,GAAA,IAAA;;AAAgB;AAAA;AAF/B,SAAA,WAAA,GAAc,eAAA,CAAA,cAAA,GAAiB,YAA/B;AAEmC;;AAE1C,EAAA,MAAM,CAAC,KAAD,EAAc;AAAA;AAAA;AAAA;AAClB,WAAO,KAAK,IAAL,CAAU,IAAV,CAAuB,KAAK,WAA5B,EAAyC,KAAzC,EAAgD;AAAE,MAAA,OAAO,EAAE;AAAX,KAAhD,CAAP;AACD;;AAED,EAAA,MAAM,CAAC,KAAD,EAAc;AAAA;AAAA;AAAA;AAClB,WAAO,KAAK,IAAL,CAAU,GAAV,CAAsB,KAAK,WAA3B,EAAwC,KAAxC,EAA+C;AAAE,MAAA,OAAO,EAAE;AAAX,KAA/C,CAAP;AACD;;AAED,EAAA,IAAI,CAAC,EAAD,EAAW;AAAA;AAAA;AAAA;AACb,WAAO,KAAK,IAAL,CAAU,GAAV,CAAsB,GAAG,KAAK,WAAW,IAAI,EAAE,EAA/C,EAAmD;AAAE,MAAA,OAAO,EAAE;AAAX,KAAnD,CAAP;AACD;;AAED,EAAA,KAAK,CAAC,GAAD,EAAU;AAAA;AAAA;AACb,UAAM,OAAO;AAAA;AAAA,8BAAG,cAAA,CAAA,mBAAA,CAAoB,GAApB,CAAH,CAAb;;AADa;AAAA;AAEb,WAAO,KAAK,IAAL,CAAU,GAAV,CAAwB,KAAK,WAA7B,EAA0C;AAAE,MAAA,MAAM,EAAE,OAAV;AAAmB,MAAA,OAAO,EAAE;AAA5B,KAA1C,CAAP;AACD;;AAED,EAAA,MAAM,CAAC,EAAD,EAAW;AAAA;AAAA;AAAA;AACf,WAAO,KAAK,IAAL,CAAU,MAAV,CAAiB,GAAG,KAAK,WAAW,IAAI,EAAE,EAA1C,EAA8C;AAAE,MAAA,OAAO,EAAE;AAAX,KAA9C,CAAP;AACD;;AAxBsB,CAAzB;;;;AAAa,YAAY,GAAA,OAAA,CAAA,UAAA,CAAA,CADxB,MAAA,CAAA,UAAA,CAAW;AAAE,EAAA,UAAU,EAAE;AAAd,CAAX,CACwB,E,yCAGK,MAAA,CAAA,U,EAHL,CAAA,EAAZ,YAAY,CAAZ;;;;AAAA,OAAA,CAAA,YAAA,GAAA,YAAA","sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient, HttpResponse } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\nimport { SERVER_API_URL } from 'app/app.constants';\nimport { createRequestOption } from 'app/shared/util/request-util';\nimport { ILivre } from 'app/shared/model/livre.model';\n\ntype EntityResponseType = HttpResponse<ILivre>;\ntype EntityArrayResponseType = HttpResponse<ILivre[]>;\n\n@Injectable({ providedIn: 'root' })\nexport class LivreService {\n  public resourceUrl = SERVER_API_URL + 'api/livres';\n\n  constructor(protected http: HttpClient) {}\n\n  create(livre: ILivre): Observable<EntityResponseType> {\n    return this.http.post<ILivre>(this.resourceUrl, livre, { observe: 'response' });\n  }\n\n  update(livre: ILivre): Observable<EntityResponseType> {\n    return this.http.put<ILivre>(this.resourceUrl, livre, { observe: 'response' });\n  }\n\n  find(id: number): Observable<EntityResponseType> {\n    return this.http.get<ILivre>(`${this.resourceUrl}/${id}`, { observe: 'response' });\n  }\n\n  query(req?: any): Observable<EntityArrayResponseType> {\n    const options = createRequestOption(req);\n    return this.http.get<ILivre[]>(this.resourceUrl, { params: options, observe: 'response' });\n  }\n\n  delete(id: number): Observable<HttpResponse<{}>> {\n    return this.http.delete(`${this.resourceUrl}/${id}`, { observe: 'response' });\n  }\n}\n"]}