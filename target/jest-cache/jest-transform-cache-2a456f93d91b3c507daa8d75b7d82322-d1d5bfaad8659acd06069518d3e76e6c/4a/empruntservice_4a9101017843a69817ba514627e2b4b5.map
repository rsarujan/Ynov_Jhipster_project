{"version":3,"sources":["/Users/sarujanrajaratnam/Desktop/Ynov/YNOV_PROJET_BIBLIOTHEQUE_CLEMENCE_SARUJAN/Ynov_TEST_Projet/src/main/webapp/app/entities/emprunt/emprunt.service.ts"],"names":[],"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","sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient, HttpResponse } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport * as moment from 'moment';\n\nimport { DATE_FORMAT } from 'app/shared/constants/input.constants';\nimport { SERVER_API_URL } from 'app/app.constants';\nimport { createRequestOption } from 'app/shared/util/request-util';\nimport { IEmprunt } from 'app/shared/model/emprunt.model';\n\ntype EntityResponseType = HttpResponse<IEmprunt>;\ntype EntityArrayResponseType = HttpResponse<IEmprunt[]>;\n\n@Injectable({ providedIn: 'root' })\nexport class EmpruntService {\n  public resourceUrl = SERVER_API_URL + 'api/emprunts';\n\n  constructor(protected http: HttpClient) {}\n\n  create(emprunt: IEmprunt): Observable<EntityResponseType> {\n    const copy = this.convertDateFromClient(emprunt);\n    return this.http\n      .post<IEmprunt>(this.resourceUrl, copy, { observe: 'response' })\n      .pipe(map((res: EntityResponseType) => this.convertDateFromServer(res)));\n  }\n\n  update(emprunt: IEmprunt): Observable<EntityResponseType> {\n    const copy = this.convertDateFromClient(emprunt);\n    return this.http\n      .put<IEmprunt>(this.resourceUrl, copy, { observe: 'response' })\n      .pipe(map((res: EntityResponseType) => this.convertDateFromServer(res)));\n  }\n\n  find(id: number): Observable<EntityResponseType> {\n    return this.http\n      .get<IEmprunt>(`${this.resourceUrl}/${id}`, { observe: 'response' })\n      .pipe(map((res: EntityResponseType) => this.convertDateFromServer(res)));\n  }\n\n  query(req?: any): Observable<EntityArrayResponseType> {\n    const options = createRequestOption(req);\n    return this.http\n      .get<IEmprunt[]>(this.resourceUrl, { params: options, observe: 'response' })\n      .pipe(map((res: EntityArrayResponseType) => this.convertDateArrayFromServer(res)));\n  }\n\n  delete(id: number): Observable<HttpResponse<{}>> {\n    return this.http.delete(`${this.resourceUrl}/${id}`, { observe: 'response' });\n  }\n\n  protected convertDateFromClient(emprunt: IEmprunt): IEmprunt {\n    const copy: IEmprunt = Object.assign({}, emprunt, {\n      dateEmprunt: emprunt.dateEmprunt && emprunt.dateEmprunt.isValid() ? emprunt.dateEmprunt.format(DATE_FORMAT) : undefined,\n    });\n    return copy;\n  }\n\n  protected convertDateFromServer(res: EntityResponseType): EntityResponseType {\n    if (res.body) {\n      res.body.dateEmprunt = res.body.dateEmprunt ? moment(res.body.dateEmprunt) : undefined;\n    }\n    return res;\n  }\n\n  protected convertDateArrayFromServer(res: EntityArrayResponseType): EntityArrayResponseType {\n    if (res.body) {\n      res.body.forEach((emprunt: IEmprunt) => {\n        emprunt.dateEmprunt = emprunt.dateEmprunt ? moment(emprunt.dateEmprunt) : undefined;\n      });\n    }\n    return res;\n  }\n}\n"]}