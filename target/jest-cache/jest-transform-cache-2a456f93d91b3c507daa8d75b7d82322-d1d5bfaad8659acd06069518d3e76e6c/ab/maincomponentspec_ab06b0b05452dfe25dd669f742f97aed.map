{"file":"/Users/sarujanrajaratnam/Desktop/Ynov/YNOV_PROJET_BIBLIOTHEQUE_CLEMENCE_SARUJAN/Ynov_TEST_Projet/src/test/javascript/spec/app/layouts/main/main.component.spec.ts","mappings":"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","names":[],"sources":["/Users/sarujanrajaratnam/Desktop/Ynov/YNOV_PROJET_BIBLIOTHEQUE_CLEMENCE_SARUJAN/Ynov_TEST_Projet/src/test/javascript/spec/app/layouts/main/main.component.spec.ts"],"sourcesContent":["import { async, ComponentFixture, TestBed } from '@angular/core/testing';\nimport { Router, RouterEvent, NavigationEnd } from '@angular/router';\nimport { Title } from '@angular/platform-browser';\nimport { Subject, of } from 'rxjs';\nimport { TranslateModule, TranslateService, LangChangeEvent } from '@ngx-translate/core';\n\nimport { MainComponent } from 'app/layouts/main/main.component';\nimport { ProBiblioTestModule } from '../../../test.module';\nimport { MockRouter } from '../../../helpers/mock-route.service';\n\ndescribe('Component Tests', () => {\n  describe('MainComponent', () => {\n    let comp: MainComponent;\n    let fixture: ComponentFixture<MainComponent>;\n    let router: MockRouter;\n    const routerEventsSubject = new Subject<RouterEvent>();\n    let titleService: Title;\n    let translateService: TranslateService;\n\n    beforeEach(async(() => {\n      TestBed.configureTestingModule({\n        imports: [ProBiblioTestModule, TranslateModule.forRoot()],\n        declarations: [MainComponent],\n        providers: [Title],\n      })\n        .overrideTemplate(MainComponent, '')\n        .compileComponents();\n    }));\n\n    beforeEach(() => {\n      fixture = TestBed.createComponent(MainComponent);\n      comp = fixture.componentInstance;\n      router = TestBed.get(Router);\n      router.setEvents(routerEventsSubject.asObservable());\n      titleService = TestBed.get(Title);\n      translateService = TestBed.get(TranslateService);\n    });\n\n    describe('page title', () => {\n      let routerState: any;\n      const defaultPageTitle = 'global.title';\n      const parentRoutePageTitle = 'parentTitle';\n      const childRoutePageTitle = 'childTitle';\n      const navigationEnd = new NavigationEnd(1, '', '');\n      const langChangeEvent: LangChangeEvent = { lang: 'fr', translations: null };\n\n      beforeEach(() => {\n        routerState = { snapshot: { root: {} } };\n        router.setRouterState(routerState);\n        spyOn(translateService, 'get').and.callFake((key: string) => {\n          return of(key + ' translated');\n        });\n        translateService.currentLang = 'fr';\n        spyOn(titleService, 'setTitle');\n        comp.ngOnInit();\n      });\n\n      describe('navigation end', () => {\n        it('should set page title to default title if pageTitle is missing on routes', () => {\n          // WHEN\n          routerEventsSubject.next(navigationEnd);\n\n          // THEN\n          expect(translateService.get).toHaveBeenCalledWith(defaultPageTitle);\n          expect(titleService.setTitle).toHaveBeenCalledWith(defaultPageTitle + ' translated');\n        });\n\n        it('should set page title to root route pageTitle if there is no child routes', () => {\n          // GIVEN\n          routerState.snapshot.root.data = { pageTitle: parentRoutePageTitle };\n\n          // WHEN\n          routerEventsSubject.next(navigationEnd);\n\n          // THEN\n          expect(translateService.get).toHaveBeenCalledWith(parentRoutePageTitle);\n          expect(titleService.setTitle).toHaveBeenCalledWith(parentRoutePageTitle + ' translated');\n        });\n\n        it('should set page title to child route pageTitle if child routes exist and pageTitle is set for child route', () => {\n          // GIVEN\n          routerState.snapshot.root.data = { pageTitle: parentRoutePageTitle };\n          routerState.snapshot.root.firstChild = { data: { pageTitle: childRoutePageTitle } };\n\n          // WHEN\n          routerEventsSubject.next(navigationEnd);\n\n          // THEN\n          expect(translateService.get).toHaveBeenCalledWith(childRoutePageTitle);\n          expect(titleService.setTitle).toHaveBeenCalledWith(childRoutePageTitle + ' translated');\n        });\n\n        it('should set page title to parent route pageTitle if child routes exists but pageTitle is not set for child route data', () => {\n          // GIVEN\n          routerState.snapshot.root.data = { pageTitle: parentRoutePageTitle };\n          routerState.snapshot.root.firstChild = { data: {} };\n\n          // WHEN\n          routerEventsSubject.next(navigationEnd);\n\n          // THEN\n          expect(translateService.get).toHaveBeenCalledWith(parentRoutePageTitle);\n          expect(titleService.setTitle).toHaveBeenCalledWith(parentRoutePageTitle + ' translated');\n        });\n\n        it('should set page title to parent route pageTitle if child routes exists but data is not set for child route', () => {\n          // GIVEN\n          routerState.snapshot.root.data = { pageTitle: parentRoutePageTitle };\n          routerState.snapshot.root.firstChild = {};\n\n          // WHEN\n          routerEventsSubject.next(navigationEnd);\n\n          // THEN\n          expect(translateService.get).toHaveBeenCalledWith(parentRoutePageTitle);\n          expect(titleService.setTitle).toHaveBeenCalledWith(parentRoutePageTitle + ' translated');\n        });\n      });\n\n      describe('language change', () => {\n        it('should set page title to default title if pageTitle is missing on routes', () => {\n          // WHEN\n          translateService.onLangChange.emit(langChangeEvent);\n\n          // THEN\n          expect(translateService.get).toHaveBeenCalledWith(defaultPageTitle);\n          expect(titleService.setTitle).toHaveBeenCalledWith(defaultPageTitle + ' translated');\n        });\n\n        it('should set page title to root route pageTitle if there is no child routes', () => {\n          // GIVEN\n          routerState.snapshot.root.data = { pageTitle: parentRoutePageTitle };\n\n          // WHEN\n          translateService.onLangChange.emit(langChangeEvent);\n\n          // THEN\n          expect(translateService.get).toHaveBeenCalledWith(parentRoutePageTitle);\n          expect(titleService.setTitle).toHaveBeenCalledWith(parentRoutePageTitle + ' translated');\n        });\n\n        it('should set page title to child route pageTitle if child routes exist and pageTitle is set for child route', () => {\n          // GIVEN\n          routerState.snapshot.root.data = { pageTitle: parentRoutePageTitle };\n          routerState.snapshot.root.firstChild = { data: { pageTitle: childRoutePageTitle } };\n\n          // WHEN\n          translateService.onLangChange.emit(langChangeEvent);\n\n          // THEN\n          expect(translateService.get).toHaveBeenCalledWith(childRoutePageTitle);\n          expect(titleService.setTitle).toHaveBeenCalledWith(childRoutePageTitle + ' translated');\n        });\n\n        it('should set page title to parent route pageTitle if child routes exists but pageTitle is not set for child route data', () => {\n          // GIVEN\n          routerState.snapshot.root.data = { pageTitle: parentRoutePageTitle };\n          routerState.snapshot.root.firstChild = { data: {} };\n\n          // WHEN\n          translateService.onLangChange.emit(langChangeEvent);\n\n          // THEN\n          expect(translateService.get).toHaveBeenCalledWith(parentRoutePageTitle);\n          expect(titleService.setTitle).toHaveBeenCalledWith(parentRoutePageTitle + ' translated');\n        });\n\n        it('should set page title to parent route pageTitle if child routes exists but data is not set for child route', () => {\n          // GIVEN\n          routerState.snapshot.root.data = { pageTitle: parentRoutePageTitle };\n          routerState.snapshot.root.firstChild = {};\n\n          // WHEN\n          translateService.onLangChange.emit(langChangeEvent);\n\n          // THEN\n          expect(translateService.get).toHaveBeenCalledWith(parentRoutePageTitle);\n          expect(titleService.setTitle).toHaveBeenCalledWith(parentRoutePageTitle + ' translated');\n        });\n      });\n    });\n  });\n});\n"],"version":3}