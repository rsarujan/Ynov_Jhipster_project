{"version":3,"sources":["/Users/sarujanrajaratnam/Desktop/Ynov/YNOV_PROJET_BIBLIOTHEQUE_CLEMENCE_SARUJAN/Ynov_TEST_Projet/src/main/webapp/app/shared/alert/alert-error.component.ts"],"names":[],"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","sourcesContent":["import { Component, OnDestroy } from '@angular/core';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { TranslateService } from '@ngx-translate/core';\nimport { JhiEventManager, JhiAlert, JhiAlertService, JhiEventWithContent } from 'ng-jhipster';\nimport { Subscription } from 'rxjs';\n\nimport { AlertError } from './alert-error.model';\n\n@Component({\n  selector: 'jhi-alert-error',\n  template: ` <div class=\"alerts\" role=\"alert\">\n    <div *ngFor=\"let alert of alerts\" [ngClass]=\"setClasses(alert)\">\n      <ngb-alert *ngIf=\"alert && alert.type && alert.msg\" [type]=\"alert.type\" (close)=\"close(alert)\">\n        <pre [innerHTML]=\"alert.msg\"></pre>\n      </ngb-alert>\n    </div>\n  </div>`,\n})\nexport class AlertErrorComponent implements OnDestroy {\n  alerts: JhiAlert[] = [];\n  errorListener: Subscription;\n  httpErrorListener: Subscription;\n\n  constructor(private alertService: JhiAlertService, private eventManager: JhiEventManager, translateService: TranslateService) {\n    this.errorListener = eventManager.subscribe('proBiblioApp.error', (response: JhiEventWithContent<AlertError>) => {\n      const errorResponse = response.content;\n      this.addErrorAlert(errorResponse.message, errorResponse.key, errorResponse.params);\n    });\n\n    this.httpErrorListener = eventManager.subscribe('proBiblioApp.httpError', (response: JhiEventWithContent<HttpErrorResponse>) => {\n      const httpErrorResponse = response.content;\n      switch (httpErrorResponse.status) {\n        // connection refused, server not reachable\n        case 0:\n          this.addErrorAlert('Server not reachable', 'error.server.not.reachable');\n          break;\n\n        case 400: {\n          const arr = httpErrorResponse.headers.keys();\n          let errorHeader = null;\n          let entityKey = null;\n          arr.forEach(entry => {\n            if (entry.toLowerCase().endsWith('app-error')) {\n              errorHeader = httpErrorResponse.headers.get(entry);\n            } else if (entry.toLowerCase().endsWith('app-params')) {\n              entityKey = httpErrorResponse.headers.get(entry);\n            }\n          });\n          if (errorHeader) {\n            const entityName = translateService.instant('global.menu.entities.' + entityKey);\n            this.addErrorAlert(errorHeader, errorHeader, { entityName });\n          } else if (httpErrorResponse.error !== '' && httpErrorResponse.error.fieldErrors) {\n            const fieldErrors = httpErrorResponse.error.fieldErrors;\n            for (const fieldError of fieldErrors) {\n              if (['Min', 'Max', 'DecimalMin', 'DecimalMax'].includes(fieldError.message)) {\n                fieldError.message = 'Size';\n              }\n              // convert 'something[14].other[4].id' to 'something[].other[].id' so translations can be written to it\n              const convertedField = fieldError.field.replace(/\\[\\d*\\]/g, '[]');\n              const fieldName = translateService.instant('proBiblioApp.' + fieldError.objectName + '.' + convertedField);\n              this.addErrorAlert('Error on field \"' + fieldName + '\"', 'error.' + fieldError.message, { fieldName });\n            }\n          } else if (httpErrorResponse.error !== '' && httpErrorResponse.error.message) {\n            this.addErrorAlert(httpErrorResponse.error.message, httpErrorResponse.error.message, httpErrorResponse.error.params);\n          } else {\n            this.addErrorAlert(httpErrorResponse.error);\n          }\n          break;\n        }\n\n        case 404:\n          this.addErrorAlert('Not found', 'error.url.not.found');\n          break;\n\n        default:\n          if (httpErrorResponse.error !== '' && httpErrorResponse.error.message) {\n            this.addErrorAlert(httpErrorResponse.error.message);\n          } else {\n            this.addErrorAlert(httpErrorResponse.error);\n          }\n      }\n    });\n  }\n\n  setClasses(alert: JhiAlert): { [key: string]: boolean } {\n    const classes = { 'jhi-toast': Boolean(alert.toast) };\n    if (alert.position) {\n      return { ...classes, [alert.position]: true };\n    }\n    return classes;\n  }\n\n  ngOnDestroy(): void {\n    if (this.errorListener) {\n      this.eventManager.destroy(this.errorListener);\n    }\n    if (this.httpErrorListener) {\n      this.eventManager.destroy(this.httpErrorListener);\n    }\n  }\n\n  addErrorAlert(message: string, key?: string, data?: any): void {\n    message = key && key !== null ? key : message;\n\n    const newAlert: JhiAlert = {\n      type: 'danger',\n      msg: message,\n      params: data,\n      timeout: 5000,\n      toast: this.alertService.isToast(),\n      scoped: true,\n    };\n\n    this.alerts.push(this.alertService.addAlert(newAlert, this.alerts));\n  }\n\n  close(alert: JhiAlert): void {\n    // NOSONAR can be removed after https://github.com/SonarSource/SonarJS/issues/1930 is resolved\n    alert.close?.(this.alerts); // NOSONAR\n  }\n}\n"]}