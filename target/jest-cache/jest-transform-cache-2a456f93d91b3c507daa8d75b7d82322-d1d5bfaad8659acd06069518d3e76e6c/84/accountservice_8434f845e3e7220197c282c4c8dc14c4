1b7a82b1a6fb0daba5b4abea60420ee9
"use strict";

/* istanbul ignore next */
function cov_1waggvwknl() {
  var path = "/Users/sarujanrajaratnam/Desktop/Ynov/YNOV_PROJET_BIBLIOTHEQUE_CLEMENCE_SARUJAN/Ynov_TEST_Projet/src/main/webapp/app/core/auth/account.service.ts";
  var hash = "80a21d69758519414c6befd2712d93df6cc33b58";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/sarujanrajaratnam/Desktop/Ynov/YNOV_PROJET_BIBLIOTHEQUE_CLEMENCE_SARUJAN/Ynov_TEST_Projet/src/main/webapp/app/core/auth/account.service.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 2,
          column: 62
        }
      },
      "1": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 3,
          column: 32
        }
      },
      "2": {
        start: {
          line: 4,
          column: 16
        },
        end: {
          line: 4,
          column: 32
        }
      },
      "3": {
        start: {
          line: 5,
          column: 15
        },
        end: {
          line: 5,
          column: 39
        }
      },
      "4": {
        start: {
          line: 6,
          column: 17
        },
        end: {
          line: 6,
          column: 43
        }
      },
      "5": {
        start: {
          line: 7,
          column: 15
        },
        end: {
          line: 7,
          column: 46
        }
      },
      "6": {
        start: {
          line: 8,
          column: 22
        },
        end: {
          line: 8,
          column: 44
        }
      },
      "7": {
        start: {
          line: 9,
          column: 25
        },
        end: {
          line: 9,
          column: 50
        }
      },
      "8": {
        start: {
          line: 10,
          column: 15
        },
        end: {
          line: 10,
          column: 30
        }
      },
      "9": {
        start: {
          line: 11,
          column: 20
        },
        end: {
          line: 11,
          column: 45
        }
      },
      "10": {
        start: {
          line: 12,
          column: 32
        },
        end: {
          line: 12,
          column: 78
        }
      },
      "11": {
        start: {
          line: 13,
          column: 24
        },
        end: {
          line: 13,
          column: 52
        }
      },
      "12": {
        start: {
          line: 14,
          column: 21
        },
        end: {
          line: 80,
          column: 1
        }
      },
      "13": {
        start: {
          line: 16,
          column: 8
        },
        end: {
          line: 16,
          column: 47
        }
      },
      "14": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 17,
          column: 45
        }
      },
      "15": {
        start: {
          line: 18,
          column: 8
        },
        end: {
          line: 18,
          column: 25
        }
      },
      "16": {
        start: {
          line: 19,
          column: 8
        },
        end: {
          line: 19,
          column: 55
        }
      },
      "17": {
        start: {
          line: 20,
          column: 8
        },
        end: {
          line: 20,
          column: 29
        }
      },
      "18": {
        start: {
          line: 21,
          column: 8
        },
        end: {
          line: 21,
          column: 33
        }
      },
      "19": {
        start: {
          line: 22,
          column: 8
        },
        end: {
          line: 22,
          column: 63
        }
      },
      "20": {
        start: {
          line: 25,
          column: 8
        },
        end: {
          line: 25,
          column: 87
        }
      },
      "21": {
        start: {
          line: 28,
          column: 8
        },
        end: {
          line: 28,
          column: 37
        }
      },
      "22": {
        start: {
          line: 29,
          column: 8
        },
        end: {
          line: 29,
          column: 57
        }
      },
      "23": {
        start: {
          line: 32,
          column: 8
        },
        end: {
          line: 34,
          column: 9
        }
      },
      "24": {
        start: {
          line: 33,
          column: 12
        },
        end: {
          line: 33,
          column: 25
        }
      },
      "25": {
        start: {
          line: 35,
          column: 8
        },
        end: {
          line: 37,
          column: 9
        }
      },
      "26": {
        start: {
          line: 36,
          column: 12
        },
        end: {
          line: 36,
          column: 40
        }
      },
      "27": {
        start: {
          line: 38,
          column: 8
        },
        end: {
          line: 38,
          column: 98
        }
      },
      "28": {
        start: {
          line: 38,
          column: 65
        },
        end: {
          line: 38,
          column: 96
        }
      },
      "29": {
        start: {
          line: 41,
          column: 8
        },
        end: {
          line: 56,
          column: 9
        }
      },
      "30": {
        start: {
          line: 42,
          column: 12
        },
        end: {
          line: 55,
          column: 43
        }
      },
      "31": {
        start: {
          line: 43,
          column: 16
        },
        end: {
          line: 43,
          column: 39
        }
      },
      "32": {
        start: {
          line: 45,
          column: 16
        },
        end: {
          line: 45,
          column: 43
        }
      },
      "33": {
        start: {
          line: 48,
          column: 16
        },
        end: {
          line: 51,
          column: 17
        }
      },
      "34": {
        start: {
          line: 49,
          column: 36
        },
        end: {
          line: 49,
          column: 93
        }
      },
      "35": {
        start: {
          line: 50,
          column: 20
        },
        end: {
          line: 50,
          column: 65
        }
      },
      "36": {
        start: {
          line: 52,
          column: 16
        },
        end: {
          line: 54,
          column: 17
        }
      },
      "37": {
        start: {
          line: 53,
          column: 20
        },
        end: {
          line: 53,
          column: 47
        }
      },
      "38": {
        start: {
          line: 57,
          column: 8
        },
        end: {
          line: 57,
          column: 34
        }
      },
      "39": {
        start: {
          line: 60,
          column: 8
        },
        end: {
          line: 60,
          column: 42
        }
      },
      "40": {
        start: {
          line: 63,
          column: 8
        },
        end: {
          line: 63,
          column: 55
        }
      },
      "41": {
        start: {
          line: 66,
          column: 8
        },
        end: {
          line: 66,
          column: 67
        }
      },
      "42": {
        start: {
          line: 69,
          column: 8
        },
        end: {
          line: 69,
          column: 77
        }
      },
      "43": {
        start: {
          line: 74,
          column: 28
        },
        end: {
          line: 74,
          column: 61
        }
      },
      "44": {
        start: {
          line: 75,
          column: 8
        },
        end: {
          line: 78,
          column: 9
        }
      },
      "45": {
        start: {
          line: 76,
          column: 12
        },
        end: {
          line: 76,
          column: 48
        }
      },
      "46": {
        start: {
          line: 77,
          column: 12
        },
        end: {
          line: 77,
          column: 51
        }
      },
      "47": {
        start: {
          line: 81,
          column: 0
        },
        end: {
          line: 88,
          column: 19
        }
      },
      "48": {
        start: {
          line: 89,
          column: 0
        },
        end: {
          line: 89,
          column: 40
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 15,
            column: 4
          },
          end: {
            line: 15,
            column: 5
          }
        },
        loc: {
          start: {
            line: 15,
            column: 84
          },
          end: {
            line: 23,
            column: 5
          }
        },
        line: 15
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 24,
            column: 4
          },
          end: {
            line: 24,
            column: 5
          }
        },
        loc: {
          start: {
            line: 24,
            column: 18
          },
          end: {
            line: 26,
            column: 5
          }
        },
        line: 24
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 27,
            column: 4
          },
          end: {
            line: 27,
            column: 5
          }
        },
        loc: {
          start: {
            line: 27,
            column: 27
          },
          end: {
            line: 30,
            column: 5
          }
        },
        line: 27
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 31,
            column: 4
          },
          end: {
            line: 31,
            column: 5
          }
        },
        loc: {
          start: {
            line: 31,
            column: 33
          },
          end: {
            line: 39,
            column: 5
          }
        },
        line: 31
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 38,
            column: 50
          },
          end: {
            line: 38,
            column: 51
          }
        },
        loc: {
          start: {
            line: 38,
            column: 65
          },
          end: {
            line: 38,
            column: 96
          }
        },
        line: 38
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 40,
            column: 4
          },
          end: {
            line: 40,
            column: 5
          }
        },
        loc: {
          start: {
            line: 40,
            column: 20
          },
          end: {
            line: 58,
            column: 5
          }
        },
        line: 40
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 42,
            column: 74
          },
          end: {
            line: 42,
            column: 75
          }
        },
        loc: {
          start: {
            line: 42,
            column: 80
          },
          end: {
            line: 44,
            column: 13
          }
        },
        line: 42
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 44,
            column: 32
          },
          end: {
            line: 44,
            column: 33
          }
        },
        loc: {
          start: {
            line: 44,
            column: 45
          },
          end: {
            line: 55,
            column: 13
          }
        },
        line: 44
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 59,
            column: 4
          },
          end: {
            line: 59,
            column: 5
          }
        },
        loc: {
          start: {
            line: 59,
            column: 22
          },
          end: {
            line: 61,
            column: 5
          }
        },
        line: 59
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 62,
            column: 4
          },
          end: {
            line: 62,
            column: 5
          }
        },
        loc: {
          start: {
            line: 62,
            column: 29
          },
          end: {
            line: 64,
            column: 5
          }
        },
        line: 62
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 65,
            column: 4
          },
          end: {
            line: 65,
            column: 5
          }
        },
        loc: {
          start: {
            line: 65,
            column: 18
          },
          end: {
            line: 67,
            column: 5
          }
        },
        line: 65
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 68,
            column: 4
          },
          end: {
            line: 68,
            column: 5
          }
        },
        loc: {
          start: {
            line: 68,
            column: 12
          },
          end: {
            line: 70,
            column: 5
          }
        },
        line: 68
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 71,
            column: 4
          },
          end: {
            line: 71,
            column: 5
          }
        },
        loc: {
          start: {
            line: 71,
            column: 26
          },
          end: {
            line: 79,
            column: 5
          }
        },
        line: 71
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 32,
            column: 8
          },
          end: {
            line: 34,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 32,
            column: 8
          },
          end: {
            line: 34,
            column: 9
          }
        }, {
          start: {
            line: 32,
            column: 8
          },
          end: {
            line: 34,
            column: 9
          }
        }],
        line: 32
      },
      "1": {
        loc: {
          start: {
            line: 32,
            column: 12
          },
          end: {
            line: 32,
            column: 64
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 32,
            column: 12
          },
          end: {
            line: 32,
            column: 30
          }
        }, {
          start: {
            line: 32,
            column: 34
          },
          end: {
            line: 32,
            column: 64
          }
        }],
        line: 32
      },
      "2": {
        loc: {
          start: {
            line: 35,
            column: 8
          },
          end: {
            line: 37,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 35,
            column: 8
          },
          end: {
            line: 37,
            column: 9
          }
        }, {
          start: {
            line: 35,
            column: 8
          },
          end: {
            line: 37,
            column: 9
          }
        }],
        line: 35
      },
      "3": {
        loc: {
          start: {
            line: 41,
            column: 8
          },
          end: {
            line: 56,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 41,
            column: 8
          },
          end: {
            line: 56,
            column: 9
          }
        }, {
          start: {
            line: 41,
            column: 8
          },
          end: {
            line: 56,
            column: 9
          }
        }],
        line: 41
      },
      "4": {
        loc: {
          start: {
            line: 41,
            column: 12
          },
          end: {
            line: 41,
            column: 67
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 41,
            column: 12
          },
          end: {
            line: 41,
            column: 31
          }
        }, {
          start: {
            line: 41,
            column: 35
          },
          end: {
            line: 41,
            column: 40
          }
        }, {
          start: {
            line: 41,
            column: 44
          },
          end: {
            line: 41,
            column: 67
          }
        }],
        line: 41
      },
      "5": {
        loc: {
          start: {
            line: 48,
            column: 16
          },
          end: {
            line: 51,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 48,
            column: 16
          },
          end: {
            line: 51,
            column: 17
          }
        }, {
          start: {
            line: 48,
            column: 16
          },
          end: {
            line: 51,
            column: 17
          }
        }],
        line: 48
      },
      "6": {
        loc: {
          start: {
            line: 48,
            column: 20
          },
          end: {
            line: 48,
            column: 46
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 48,
            column: 20
          },
          end: {
            line: 48,
            column: 27
          }
        }, {
          start: {
            line: 48,
            column: 31
          },
          end: {
            line: 48,
            column: 46
          }
        }],
        line: 48
      },
      "7": {
        loc: {
          start: {
            line: 49,
            column: 36
          },
          end: {
            line: 49,
            column: 93
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 49,
            column: 36
          },
          end: {
            line: 49,
            column: 74
          }
        }, {
          start: {
            line: 49,
            column: 78
          },
          end: {
            line: 49,
            column: 93
          }
        }],
        line: 49
      },
      "8": {
        loc: {
          start: {
            line: 52,
            column: 16
          },
          end: {
            line: 54,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 52,
            column: 16
          },
          end: {
            line: 54,
            column: 17
          }
        }, {
          start: {
            line: 52,
            column: 16
          },
          end: {
            line: 54,
            column: 17
          }
        }],
        line: 52
      },
      "9": {
        loc: {
          start: {
            line: 66,
            column: 15
          },
          end: {
            line: 66,
            column: 66
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 66,
            column: 35
          },
          end: {
            line: 66,
            column: 61
          }
        }, {
          start: {
            line: 66,
            column: 64
          },
          end: {
            line: 66,
            column: 66
          }
        }],
        line: 66
      },
      "10": {
        loc: {
          start: {
            line: 75,
            column: 8
          },
          end: {
            line: 78,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 75,
            column: 8
          },
          end: {
            line: 78,
            column: 9
          }
        }, {
          start: {
            line: 75,
            column: 8
          },
          end: {
            line: 78,
            column: 9
          }
        }],
        line: 75
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0]
    },
    inputSourceMap: {
      file: "/Users/sarujanrajaratnam/Desktop/Ynov/YNOV_PROJET_BIBLIOTHEQUE_CLEMENCE_SARUJAN/Ynov_TEST_Projet/src/main/webapp/app/core/auth/account.service.ts",
      mappings: "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",
      names: [],
      sources: ["/Users/sarujanrajaratnam/Desktop/Ynov/YNOV_PROJET_BIBLIOTHEQUE_CLEMENCE_SARUJAN/Ynov_TEST_Projet/src/main/webapp/app/core/auth/account.service.ts"],
      sourcesContent: ["import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { HttpClient } from '@angular/common/http';\nimport { JhiLanguageService } from 'ng-jhipster';\nimport { SessionStorageService } from 'ngx-webstorage';\nimport { Observable, ReplaySubject, of } from 'rxjs';\nimport { shareReplay, tap, catchError } from 'rxjs/operators';\nimport { StateStorageService } from 'app/core/auth/state-storage.service';\n\nimport { SERVER_API_URL } from 'app/app.constants';\nimport { Account } from 'app/core/user/account.model';\n\n@Injectable({ providedIn: 'root' })\nexport class AccountService {\n  private userIdentity: Account | null = null;\n  private authenticationState = new ReplaySubject<Account | null>(1);\n  private accountCache$?: Observable<Account | null>;\n\n  constructor(\n    private languageService: JhiLanguageService,\n    private sessionStorage: SessionStorageService,\n    private http: HttpClient,\n    private stateStorageService: StateStorageService,\n    private router: Router\n  ) {}\n\n  save(account: Account): Observable<{}> {\n    return this.http.post(SERVER_API_URL + 'api/account', account);\n  }\n\n  authenticate(identity: Account | null): void {\n    this.userIdentity = identity;\n    this.authenticationState.next(this.userIdentity);\n  }\n\n  hasAnyAuthority(authorities: string[] | string): boolean {\n    if (!this.userIdentity || !this.userIdentity.authorities) {\n      return false;\n    }\n    if (!Array.isArray(authorities)) {\n      authorities = [authorities];\n    }\n    return this.userIdentity.authorities.some((authority: string) => authorities.includes(authority));\n  }\n\n  identity(force?: boolean): Observable<Account | null> {\n    if (!this.accountCache$ || force || !this.isAuthenticated()) {\n      this.accountCache$ = this.fetch().pipe(\n        catchError(() => {\n          return of(null);\n        }),\n        tap((account: Account | null) => {\n          this.authenticate(account);\n\n          // After retrieve the account info, the language will be changed to\n          // the user's preferred language configured in the account setting\n          if (account && account.langKey) {\n            const langKey = this.sessionStorage.retrieve('locale') || account.langKey;\n            this.languageService.changeLanguage(langKey);\n          }\n\n          if (account) {\n            this.navigateToStoredUrl();\n          }\n        }),\n        shareReplay()\n      );\n    }\n    return this.accountCache$;\n  }\n\n  isAuthenticated(): boolean {\n    return this.userIdentity !== null;\n  }\n\n  getAuthenticationState(): Observable<Account | null> {\n    return this.authenticationState.asObservable();\n  }\n\n  getImageUrl(): string {\n    return this.userIdentity ? this.userIdentity.imageUrl : '';\n  }\n\n  private fetch(): Observable<Account> {\n    return this.http.get<Account>(SERVER_API_URL + 'api/account');\n  }\n\n  private navigateToStoredUrl(): void {\n    // previousState can be set in the authExpiredInterceptor and in the userRouteAccessService\n    // if login is successful, go to stored previousState and clear previousState\n    const previousUrl = this.stateStorageService.getUrl();\n    if (previousUrl) {\n      this.stateStorageService.clearUrl();\n      this.router.navigateByUrl(previousUrl);\n    }\n  }\n}\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "80a21d69758519414c6befd2712d93df6cc33b58"
  };
  var coverage = global[gcv] || (global[gcv] = {});

  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }

  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1waggvwknl = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}

cov_1waggvwknl();
cov_1waggvwknl().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});

/* istanbul ignore next */
cov_1waggvwknl().s[1]++;
exports.AccountService = void 0;
const tslib_1 =
/* istanbul ignore next */
(cov_1waggvwknl().s[2]++, require("tslib"));
const core_1 =
/* istanbul ignore next */
(cov_1waggvwknl().s[3]++, require("@angular/core"));
const router_1 =
/* istanbul ignore next */
(cov_1waggvwknl().s[4]++, require("@angular/router"));
const http_1 =
/* istanbul ignore next */
(cov_1waggvwknl().s[5]++, require("@angular/common/http"));
const ng_jhipster_1 =
/* istanbul ignore next */
(cov_1waggvwknl().s[6]++, require("ng-jhipster"));
const ngx_webstorage_1 =
/* istanbul ignore next */
(cov_1waggvwknl().s[7]++, require("ngx-webstorage"));
const rxjs_1 =
/* istanbul ignore next */
(cov_1waggvwknl().s[8]++, require("rxjs"));
const operators_1 =
/* istanbul ignore next */
(cov_1waggvwknl().s[9]++, require("rxjs/operators"));
const state_storage_service_1 =
/* istanbul ignore next */
(cov_1waggvwknl().s[10]++, require("app/core/auth/state-storage.service"));
const app_constants_1 =
/* istanbul ignore next */
(cov_1waggvwknl().s[11]++, require("app/app.constants"));

/* istanbul ignore next */
cov_1waggvwknl().s[12]++;
let AccountService = class AccountService {
  constructor(languageService, sessionStorage, http, stateStorageService, router) {
    /* istanbul ignore next */
    cov_1waggvwknl().f[0]++;
    cov_1waggvwknl().s[13]++;
    this.languageService = languageService;

    /* istanbul ignore next */
    cov_1waggvwknl().s[14]++;
    this.sessionStorage = sessionStorage;

    /* istanbul ignore next */
    cov_1waggvwknl().s[15]++;
    this.http = http;

    /* istanbul ignore next */
    cov_1waggvwknl().s[16]++;
    this.stateStorageService = stateStorageService;

    /* istanbul ignore next */
    cov_1waggvwknl().s[17]++;
    this.router = router;

    /* istanbul ignore next */
    cov_1waggvwknl().s[18]++;
    this.userIdentity = null;

    /* istanbul ignore next */
    cov_1waggvwknl().s[19]++;
    this.authenticationState = new rxjs_1.ReplaySubject(1);
  }

  save(account) {
    /* istanbul ignore next */
    cov_1waggvwknl().f[1]++;
    cov_1waggvwknl().s[20]++;
    return this.http.post(app_constants_1.SERVER_API_URL + 'api/account', account);
  }

  authenticate(identity) {
    /* istanbul ignore next */
    cov_1waggvwknl().f[2]++;
    cov_1waggvwknl().s[21]++;
    this.userIdentity = identity;

    /* istanbul ignore next */
    cov_1waggvwknl().s[22]++;
    this.authenticationState.next(this.userIdentity);
  }

  hasAnyAuthority(authorities) {
    /* istanbul ignore next */
    cov_1waggvwknl().f[3]++;
    cov_1waggvwknl().s[23]++;

    if (
    /* istanbul ignore next */
    (cov_1waggvwknl().b[1][0]++, !this.userIdentity) ||
    /* istanbul ignore next */
    (cov_1waggvwknl().b[1][1]++, !this.userIdentity.authorities)) {
      /* istanbul ignore next */
      cov_1waggvwknl().b[0][0]++;
      cov_1waggvwknl().s[24]++;
      return false;
    } else
    /* istanbul ignore next */
    {
      cov_1waggvwknl().b[0][1]++;
    }

    cov_1waggvwknl().s[25]++;

    if (!Array.isArray(authorities)) {
      /* istanbul ignore next */
      cov_1waggvwknl().b[2][0]++;
      cov_1waggvwknl().s[26]++;
      authorities = [authorities];
    } else
    /* istanbul ignore next */
    {
      cov_1waggvwknl().b[2][1]++;
    }

    cov_1waggvwknl().s[27]++;
    return this.userIdentity.authorities.some(authority => {
      /* istanbul ignore next */
      cov_1waggvwknl().f[4]++;
      cov_1waggvwknl().s[28]++;
      return authorities.includes(authority);
    });
  }

  identity(force) {
    /* istanbul ignore next */
    cov_1waggvwknl().f[5]++;
    cov_1waggvwknl().s[29]++;

    if (
    /* istanbul ignore next */
    (cov_1waggvwknl().b[4][0]++, !this.accountCache$) ||
    /* istanbul ignore next */
    (cov_1waggvwknl().b[4][1]++, force) ||
    /* istanbul ignore next */
    (cov_1waggvwknl().b[4][2]++, !this.isAuthenticated())) {
      /* istanbul ignore next */
      cov_1waggvwknl().b[3][0]++;
      cov_1waggvwknl().s[30]++;
      this.accountCache$ = this.fetch().pipe(operators_1.catchError(() => {
        /* istanbul ignore next */
        cov_1waggvwknl().f[6]++;
        cov_1waggvwknl().s[31]++;
        return rxjs_1.of(null);
      }), operators_1.tap(account => {
        /* istanbul ignore next */
        cov_1waggvwknl().f[7]++;
        cov_1waggvwknl().s[32]++;
        this.authenticate(account); // After retrieve the account info, the language will be changed to
        // the user's preferred language configured in the account setting

        /* istanbul ignore next */
        cov_1waggvwknl().s[33]++;

        if (
        /* istanbul ignore next */
        (cov_1waggvwknl().b[6][0]++, account) &&
        /* istanbul ignore next */
        (cov_1waggvwknl().b[6][1]++, account.langKey)) {
          /* istanbul ignore next */
          cov_1waggvwknl().b[5][0]++;
          const langKey =
          /* istanbul ignore next */
          (cov_1waggvwknl().s[34]++,
          /* istanbul ignore next */
          (cov_1waggvwknl().b[7][0]++, this.sessionStorage.retrieve('locale')) ||
          /* istanbul ignore next */
          (cov_1waggvwknl().b[7][1]++, account.langKey));

          /* istanbul ignore next */
          cov_1waggvwknl().s[35]++;
          this.languageService.changeLanguage(langKey);
        } else
        /* istanbul ignore next */
        {
          cov_1waggvwknl().b[5][1]++;
        }

        cov_1waggvwknl().s[36]++;

        if (account) {
          /* istanbul ignore next */
          cov_1waggvwknl().b[8][0]++;
          cov_1waggvwknl().s[37]++;
          this.navigateToStoredUrl();
        } else
        /* istanbul ignore next */
        {
          cov_1waggvwknl().b[8][1]++;
        }
      }), operators_1.shareReplay());
    } else
    /* istanbul ignore next */
    {
      cov_1waggvwknl().b[3][1]++;
    }

    cov_1waggvwknl().s[38]++;
    return this.accountCache$;
  }

  isAuthenticated() {
    /* istanbul ignore next */
    cov_1waggvwknl().f[8]++;
    cov_1waggvwknl().s[39]++;
    return this.userIdentity !== null;
  }

  getAuthenticationState() {
    /* istanbul ignore next */
    cov_1waggvwknl().f[9]++;
    cov_1waggvwknl().s[40]++;
    return this.authenticationState.asObservable();
  }

  getImageUrl() {
    /* istanbul ignore next */
    cov_1waggvwknl().f[10]++;
    cov_1waggvwknl().s[41]++;
    return this.userIdentity ?
    /* istanbul ignore next */
    (cov_1waggvwknl().b[9][0]++, this.userIdentity.imageUrl) :
    /* istanbul ignore next */
    (cov_1waggvwknl().b[9][1]++, '');
  }

  fetch() {
    /* istanbul ignore next */
    cov_1waggvwknl().f[11]++;
    cov_1waggvwknl().s[42]++;
    return this.http.get(app_constants_1.SERVER_API_URL + 'api/account');
  }

  navigateToStoredUrl() {
    /* istanbul ignore next */
    cov_1waggvwknl().f[12]++;
    // previousState can be set in the authExpiredInterceptor and in the userRouteAccessService
    // if login is successful, go to stored previousState and clear previousState
    const previousUrl =
    /* istanbul ignore next */
    (cov_1waggvwknl().s[43]++, this.stateStorageService.getUrl());

    /* istanbul ignore next */
    cov_1waggvwknl().s[44]++;

    if (previousUrl) {
      /* istanbul ignore next */
      cov_1waggvwknl().b[10][0]++;
      cov_1waggvwknl().s[45]++;
      this.stateStorageService.clearUrl();

      /* istanbul ignore next */
      cov_1waggvwknl().s[46]++;
      this.router.navigateByUrl(previousUrl);
    } else
    /* istanbul ignore next */
    {
      cov_1waggvwknl().b[10][1]++;
    }
  }

};

/* istanbul ignore next */
cov_1waggvwknl().s[47]++;
AccountService = tslib_1.__decorate([core_1.Injectable({
  providedIn: 'root'
}), tslib_1.__metadata("design:paramtypes", [ng_jhipster_1.JhiLanguageService, ngx_webstorage_1.SessionStorageService, http_1.HttpClient, state_storage_service_1.StateStorageService, router_1.Router])], AccountService);

/* istanbul ignore next */
cov_1waggvwknl().s[48]++;
exports.AccountService = AccountService;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9zYXJ1amFucmFqYXJhdG5hbS9EZXNrdG9wL1lub3YvWU5PVl9QUk9KRVRfQklCTElPVEhFUVVFX0NMRU1FTkNFX1NBUlVKQU4vWW5vdl9URVNUX1Byb2pldC9zcmMvbWFpbi93ZWJhcHAvYXBwL2NvcmUvYXV0aC9hY2NvdW50LnNlcnZpY2UudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQW1CWTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFuQlosTUFBQSxNQUFBO0FBQUE7QUFBQSwwQkFBQSxPQUFBLENBQUEsZUFBQSxDQUFBLENBQUE7QUFDQSxNQUFBLFFBQUE7QUFBQTtBQUFBLDBCQUFBLE9BQUEsQ0FBQSxpQkFBQSxDQUFBLENBQUE7QUFDQSxNQUFBLE1BQUE7QUFBQTtBQUFBLDBCQUFBLE9BQUEsQ0FBQSxzQkFBQSxDQUFBLENBQUE7QUFDQSxNQUFBLGFBQUE7QUFBQTtBQUFBLDBCQUFBLE9BQUEsQ0FBQSxhQUFBLENBQUEsQ0FBQTtBQUNBLE1BQUEsZ0JBQUE7QUFBQTtBQUFBLDBCQUFBLE9BQUEsQ0FBQSxnQkFBQSxDQUFBLENBQUE7QUFDQSxN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QixHQUFBO0FBQUE7QUFBQTtBQUN6QjtBQUNBO0FBQ0EsVUFBTSxXQUFXO0FBQUE7QUFBQSwrQkFBRyxLQUFLLG1CQUFMLENBQXlCLE1BQXpCLEVBQUgsQ0FBakI7O0FBSHlCO0FBQUE7O0FBSXpCLFFBQUksV0FBSixFQUFpQjtBQUFBO0FBQUE7QUFBQTtBQUNmLFdBQUssbUJBQUwsQ0FBeUIsUUFBekI7O0FBRGU7QUFBQTtBQUVmLFdBQUssTUFBTCxDQUFZLGFBQVosQ0FBMEIsV0FBMUI7QUFDRCxLQUhEO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFJRDs7QUFsRndCLENBQTNCOzs7O0FBQWEsY0FBYyxHQUFBLE9BQUEsQ0FBQSxVQUFBLENBQUEsQ0FEMUIsTUFBQSxDQUFBLFVBQUEsQ0FBVztBQUFFLEVBQUEsVUFBVSxFQUFFO0FBQWQsQ0FBWCxDQUMwQixFLHlDQU1FLGFBQUEsQ0FBQSxrQixFQUNELGdCQUFBLENBQUEscUIsRUFDVixNQUFBLENBQUEsVSxFQUNlLHVCQUFBLENBQUEsbUIsRUFDYixRQUFBLENBQUEsTSxFQVZPLENBQUEsRUFBZCxjQUFjLENBQWQ7Ozs7QUFBQSxPQUFBLENBQUEsY0FBQSxHQUFBLGNBQUEiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJbmplY3RhYmxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBSb3V0ZXIgfSBmcm9tICdAYW5ndWxhci9yb3V0ZXInO1xuaW1wb3J0IHsgSHR0cENsaWVudCB9IGZyb20gJ0Bhbmd1bGFyL2NvbW1vbi9odHRwJztcbmltcG9ydCB7IEpoaUxhbmd1YWdlU2VydmljZSB9IGZyb20gJ25nLWpoaXBzdGVyJztcbmltcG9ydCB7IFNlc3Npb25TdG9yYWdlU2VydmljZSB9IGZyb20gJ25neC13ZWJzdG9yYWdlJztcbmltcG9ydCB7IE9ic2VydmFibGUsIFJlcGxheVN1YmplY3QsIG9mIH0gZnJvbSAncnhqcyc7XG5pbXBvcnQgeyBzaGFyZVJlcGxheSwgdGFwLCBjYXRjaEVycm9yIH0gZnJvbSAncnhqcy9vcGVyYXRvcnMnO1xuaW1wb3J0IHsgU3RhdGVTdG9yYWdlU2VydmljZSB9IGZyb20gJ2FwcC9jb3JlL2F1dGgvc3RhdGUtc3RvcmFnZS5zZXJ2aWNlJztcblxuaW1wb3J0IHsgU0VSVkVSX0FQSV9VUkwgfSBmcm9tICdhcHAvYXBwLmNvbnN0YW50cyc7XG5pbXBvcnQgeyBBY2NvdW50IH0gZnJvbSAnYXBwL2NvcmUvdXNlci9hY2NvdW50Lm1vZGVsJztcblxuQEluamVjdGFibGUoeyBwcm92aWRlZEluOiAncm9vdCcgfSlcbmV4cG9ydCBjbGFzcyBBY2NvdW50U2VydmljZSB7XG4gIHByaXZhdGUgdXNlcklkZW50aXR5OiBBY2NvdW50IHwgbnVsbCA9IG51bGw7XG4gIHByaXZhdGUgYXV0aGVudGljYXRpb25TdGF0ZSA9IG5ldyBSZXBsYXlTdWJqZWN0PEFjY291bnQgfCBudWxsPigxKTtcbiAgcHJpdmF0ZSBhY2NvdW50Q2FjaGUkPzogT2JzZXJ2YWJsZTxBY2NvdW50IHwgbnVsbD47XG5cbiAgY29uc3RydWN0b3IoXG4gICAgcHJpdmF0ZSBsYW5ndWFnZVNlcnZpY2U6IEpoaUxhbmd1YWdlU2VydmljZSxcbiAgICBwcml2YXRlIHNlc3Npb25TdG9yYWdlOiBTZXNzaW9uU3RvcmFnZVNlcnZpY2UsXG4gICAgcHJpdmF0ZSBodHRwOiBIdHRwQ2xpZW50LFxuICAgIHByaXZhdGUgc3RhdGVTdG9yYWdlU2VydmljZTogU3RhdGVTdG9yYWdlU2VydmljZSxcbiAgICBwcml2YXRlIHJvdXRlcjogUm91dGVyXG4gICkge31cblxuICBzYXZlKGFjY291bnQ6IEFjY291bnQpOiBPYnNlcnZhYmxlPHt9PiB7XG4gICAgcmV0dXJuIHRoaXMuaHR0cC5wb3N0KFNFUlZFUl9BUElfVVJMICsgJ2FwaS9hY2NvdW50JywgYWNjb3VudCk7XG4gIH1cblxuICBhdXRoZW50aWNhdGUoaWRlbnRpdHk6IEFjY291bnQgfCBudWxsKTogdm9pZCB7XG4gICAgdGhpcy51c2VySWRlbnRpdHkgPSBpZGVudGl0eTtcbiAgICB0aGlzLmF1dGhlbnRpY2F0aW9uU3RhdGUubmV4dCh0aGlzLnVzZXJJZGVudGl0eSk7XG4gIH1cblxuICBoYXNBbnlBdXRob3JpdHkoYXV0aG9yaXRpZXM6IHN0cmluZ1tdIHwgc3RyaW5nKTogYm9vbGVhbiB7XG4gICAgaWYgKCF0aGlzLnVzZXJJZGVudGl0eSB8fCAhdGhpcy51c2VySWRlbnRpdHkuYXV0aG9yaXRpZXMpIHtcbiAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gICAgaWYgKCFBcnJheS5pc0FycmF5KGF1dGhvcml0aWVzKSkge1xuICAgICAgYXV0aG9yaXRpZXMgPSBbYXV0aG9yaXRpZXNdO1xuICAgIH1cbiAgICByZXR1cm4gdGhpcy51c2VySWRlbnRpdHkuYXV0aG9yaXRpZXMuc29tZSgoYXV0aG9yaXR5OiBzdHJpbmcpID0+IGF1dGhvcml0aWVzLmluY2x1ZGVzKGF1dGhvcml0eSkpO1xuICB9XG5cbiAgaWRlbnRpdHkoZm9yY2U/OiBib29sZWFuKTogT2JzZXJ2YWJsZTxBY2NvdW50IHwgbnVsbD4ge1xuICAgIGlmICghdGhpcy5hY2NvdW50Q2FjaGUkIHx8IGZvcmNlIHx8ICF0aGlzLmlzQXV0aGVudGljYXRlZCgpKSB7XG4gICAgICB0aGlzLmFjY291bnRDYWNoZSQgPSB0aGlzLmZldGNoKCkucGlwZShcbiAgICAgICAgY2F0Y2hFcnJvcigoKSA9PiB7XG4gICAgICAgICAgcmV0dXJuIG9mKG51bGwpO1xuICAgICAgICB9KSxcbiAgICAgICAgdGFwKChhY2NvdW50OiBBY2NvdW50IHwgbnVsbCkgPT4ge1xuICAgICAgICAgIHRoaXMuYXV0aGVudGljYXRlKGFjY291bnQpO1xuXG4gICAgICAgICAgLy8gQWZ0ZXIgcmV0cmlldmUgdGhlIGFjY291bnQgaW5mbywgdGhlIGxhbmd1YWdlIHdpbGwgYmUgY2hhbmdlZCB0b1xuICAgICAgICAgIC8vIHRoZSB1c2VyJ3MgcHJlZmVycmVkIGxhbmd1YWdlIGNvbmZpZ3VyZWQgaW4gdGhlIGFjY291bnQgc2V0dGluZ1xuICAgICAgICAgIGlmIChhY2NvdW50ICYmIGFjY291bnQubGFuZ0tleSkge1xuICAgICAgICAgICAgY29uc3QgbGFuZ0tleSA9IHRoaXMuc2Vzc2lvblN0b3JhZ2UucmV0cmlldmUoJ2xvY2FsZScpIHx8IGFjY291bnQubGFuZ0tleTtcbiAgICAgICAgICAgIHRoaXMubGFuZ3VhZ2VTZXJ2aWNlLmNoYW5nZUxhbmd1YWdlKGxhbmdLZXkpO1xuICAgICAgICAgIH1cblxuICAgICAgICAgIGlmIChhY2NvdW50KSB7XG4gICAgICAgICAgICB0aGlzLm5hdmlnYXRlVG9TdG9yZWRVcmwoKTtcbiAgICAgICAgICB9XG4gICAgICAgIH0pLFxuICAgICAgICBzaGFyZVJlcGxheSgpXG4gICAgICApO1xuICAgIH1cbiAgICByZXR1cm4gdGhpcy5hY2NvdW50Q2FjaGUkO1xuICB9XG5cbiAgaXNBdXRoZW50aWNhdGVkKCk6IGJvb2xlYW4ge1xuICAgIHJldHVybiB0aGlzLnVzZXJJZGVudGl0eSAhPT0gbnVsbDtcbiAgfVxuXG4gIGdldEF1dGhlbnRpY2F0aW9uU3RhdGUoKTogT2JzZXJ2YWJsZTxBY2NvdW50IHwgbnVsbD4ge1xuICAgIHJldHVybiB0aGlzLmF1dGhlbnRpY2F0aW9uU3RhdGUuYXNPYnNlcnZhYmxlKCk7XG4gIH1cblxuICBnZXRJbWFnZVVybCgpOiBzdHJpbmcge1xuICAgIHJldHVybiB0aGlzLnVzZXJJZGVudGl0eSA/IHRoaXMudXNlcklkZW50aXR5LmltYWdlVXJsIDogJyc7XG4gIH1cblxuICBwcml2YXRlIGZldGNoKCk6IE9ic2VydmFibGU8QWNjb3VudD4ge1xuICAgIHJldHVybiB0aGlzLmh0dHAuZ2V0PEFjY291bnQ+KFNFUlZFUl9BUElfVVJMICsgJ2FwaS9hY2NvdW50Jyk7XG4gIH1cblxuICBwcml2YXRlIG5hdmlnYXRlVG9TdG9yZWRVcmwoKTogdm9pZCB7XG4gICAgLy8gcHJldmlvdXNTdGF0ZSBjYW4gYmUgc2V0IGluIHRoZSBhdXRoRXhwaXJlZEludGVyY2VwdG9yIGFuZCBpbiB0aGUgdXNlclJvdXRlQWNjZXNzU2VydmljZVxuICAgIC8vIGlmIGxvZ2luIGlzIHN1Y2Nlc3NmdWwsIGdvIHRvIHN0b3JlZCBwcmV2aW91c1N0YXRlIGFuZCBjbGVhciBwcmV2aW91c1N0YXRlXG4gICAgY29uc3QgcHJldmlvdXNVcmwgPSB0aGlzLnN0YXRlU3RvcmFnZVNlcnZpY2UuZ2V0VXJsKCk7XG4gICAgaWYgKHByZXZpb3VzVXJsKSB7XG4gICAgICB0aGlzLnN0YXRlU3RvcmFnZVNlcnZpY2UuY2xlYXJVcmwoKTtcbiAgICAgIHRoaXMucm91dGVyLm5hdmlnYXRlQnlVcmwocHJldmlvdXNVcmwpO1xuICAgIH1cbiAgfVxufVxuIl19