{"file":"/Users/sarujanrajaratnam/Desktop/Ynov/YNOV_PROJET_BIBLIOTHEQUE_CLEMENCE_SARUJAN/Ynov_TEST_Projet/src/test/javascript/spec/app/admin/logs/logs.component.spec.ts","mappings":"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","names":[],"sources":["/Users/sarujanrajaratnam/Desktop/Ynov/YNOV_PROJET_BIBLIOTHEQUE_CLEMENCE_SARUJAN/Ynov_TEST_Projet/src/test/javascript/spec/app/admin/logs/logs.component.spec.ts"],"sourcesContent":["import { ComponentFixture, TestBed, async } from '@angular/core/testing';\nimport { of } from 'rxjs';\n\nimport { ProBiblioTestModule } from '../../../test.module';\nimport { LogsComponent } from 'app/admin/logs/logs.component';\nimport { LogsService } from 'app/admin/logs/logs.service';\nimport { Log } from 'app/admin/logs/log.model';\n\ndescribe('Component Tests', () => {\n  describe('LogsComponent', () => {\n    let comp: LogsComponent;\n    let fixture: ComponentFixture<LogsComponent>;\n    let service: LogsService;\n\n    beforeEach(async(() => {\n      TestBed.configureTestingModule({\n        imports: [ProBiblioTestModule],\n        declarations: [LogsComponent],\n        providers: [LogsService],\n      })\n        .overrideTemplate(LogsComponent, '')\n        .compileComponents();\n    }));\n\n    beforeEach(() => {\n      fixture = TestBed.createComponent(LogsComponent);\n      comp = fixture.componentInstance;\n      service = fixture.debugElement.injector.get(LogsService);\n    });\n\n    describe('OnInit', () => {\n      it('should set all default values correctly', () => {\n        expect(comp.filter).toBe('');\n        expect(comp.orderProp).toBe('name');\n        expect(comp.reverse).toBe(false);\n      });\n\n      it('Should call load all on init', () => {\n        // GIVEN\n        const log = new Log('main', 'WARN');\n        spyOn(service, 'findAll').and.returnValue(\n          of({\n            loggers: {\n              main: {\n                effectiveLevel: 'WARN',\n              },\n            },\n          })\n        );\n\n        // WHEN\n        comp.ngOnInit();\n\n        // THEN\n        expect(service.findAll).toHaveBeenCalled();\n        expect(comp.loggers && comp.loggers[0]).toEqual(jasmine.objectContaining(log));\n      });\n    });\n\n    describe('change log level', () => {\n      it('should change log level correctly', () => {\n        // GIVEN\n        const log = new Log('main', 'ERROR');\n        spyOn(service, 'changeLevel').and.returnValue(of({}));\n        spyOn(service, 'findAll').and.returnValue(\n          of({\n            loggers: {\n              main: {\n                effectiveLevel: 'ERROR',\n              },\n            },\n          })\n        );\n\n        // WHEN\n        comp.changeLevel('main', 'ERROR');\n\n        // THEN\n        expect(service.changeLevel).toHaveBeenCalled();\n        expect(service.findAll).toHaveBeenCalled();\n        expect(comp.loggers && comp.loggers[0]).toEqual(jasmine.objectContaining(log));\n      });\n    });\n  });\n});\n"],"version":3}