{"file":"/Users/sarujanrajaratnam/Desktop/Ynov/YNOV_PROJET_BIBLIOTHEQUE_CLEMENCE_SARUJAN/Ynov_TEST_Projet/src/test/javascript/spec/app/admin/user-management/user-management-delete-dialog.component.spec.ts","mappings":";;AAAA,mDAAkG;AAClG,6DAA4D;AAC5D,+BAA0B;AAC1B,6CAA8C;AAE9C,sDAA2D;AAG3D,+HAAwH;AACxH,6DAAyD;AAEzD,QAAQ,CAAC,iBAAiB,EAAE,GAAG,EAAE;IAC/B,QAAQ,CAAC,kCAAkC,EAAE,GAAG,EAAE;QAChD,IAAI,IAAyC,CAAC;QAC9C,IAAI,OAA8D,CAAC;QACnE,IAAI,OAAoB,CAAC;QACzB,IAAI,gBAAkC,CAAC;QACvC,IAAI,eAAgC,CAAC;QAErC,UAAU,CAAC,eAAK,CAAC,GAAG,EAAE;YACpB,iBAAO,CAAC,sBAAsB,CAAC;gBAC7B,OAAO,EAAE,CAAC,iCAAmB,CAAC;gBAC9B,YAAY,EAAE,CAAC,6EAAmC,CAAC;aACpD,CAAC;iBACC,gBAAgB,CAAC,6EAAmC,EAAE,EAAE,CAAC;iBACzD,iBAAiB,EAAE,CAAC;QACzB,CAAC,CAAC,CAAC,CAAC;QAEJ,UAAU,CAAC,GAAG,EAAE;YACd,OAAO,GAAG,iBAAO,CAAC,eAAe,CAAC,6EAAmC,CAAC,CAAC;YACvE,IAAI,GAAG,OAAO,CAAC,iBAAiB,CAAC;YACjC,OAAO,GAAG,OAAO,CAAC,YAAY,CAAC,QAAQ,CAAC,GAAG,CAAC,0BAAW,CAAC,CAAC;YACzD,gBAAgB,GAAG,iBAAO,CAAC,GAAG,CAAC,6BAAe,CAAC,CAAC;YAChD,eAAe,GAAG,iBAAO,CAAC,GAAG,CAAC,6BAAc,CAAC,CAAC;QAChD,CAAC,CAAC,CAAC;QAEH,QAAQ,CAAC,eAAe,EAAE,GAAG,EAAE;YAC7B,EAAE,CAAC,6CAA6C,EAAE,gBAAM,CACtD,EAAE,EACF,mBAAS,CAAC,GAAG,EAAE;gBACb,QAAQ;gBACR,KAAK,CAAC,OAAO,EAAE,QAAQ,CAAC,CAAC,GAAG,CAAC,WAAW,CAAC,SAAE,CAAC,EAAE,CAAC,CAAC,CAAC;gBAEjD,OAAO;gBACP,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC;gBAC3B,cAAI,EAAE,CAAC;gBAEP,OAAO;gBACP,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,oBAAoB,CAAC,MAAM,CAAC,CAAC;gBACpD,MAAM,CAAC,eAAe,CAAC,QAAQ,CAAC,CAAC,gBAAgB,EAAE,CAAC;gBACpD,MAAM,CAAC,gBAAgB,CAAC,YAAY,CAAC,CAAC,gBAAgB,EAAE,CAAC;YAC3D,CAAC,CAAC,CACH,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","names":[],"sources":["/Users/sarujanrajaratnam/Desktop/Ynov/YNOV_PROJET_BIBLIOTHEQUE_CLEMENCE_SARUJAN/Ynov_TEST_Projet/src/test/javascript/spec/app/admin/user-management/user-management-delete-dialog.component.spec.ts"],"sourcesContent":["import { ComponentFixture, TestBed, async, inject, fakeAsync, tick } from '@angular/core/testing';\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\nimport { of } from 'rxjs';\nimport { JhiEventManager } from 'ng-jhipster';\n\nimport { ProBiblioTestModule } from '../../../test.module';\nimport { MockEventManager } from '../../../helpers/mock-event-manager.service';\nimport { MockActiveModal } from '../../../helpers/mock-active-modal.service';\nimport { UserManagementDeleteDialogComponent } from 'app/admin/user-management/user-management-delete-dialog.component';\nimport { UserService } from 'app/core/user/user.service';\n\ndescribe('Component Tests', () => {\n  describe('User Management Delete Component', () => {\n    let comp: UserManagementDeleteDialogComponent;\n    let fixture: ComponentFixture<UserManagementDeleteDialogComponent>;\n    let service: UserService;\n    let mockEventManager: MockEventManager;\n    let mockActiveModal: MockActiveModal;\n\n    beforeEach(async(() => {\n      TestBed.configureTestingModule({\n        imports: [ProBiblioTestModule],\n        declarations: [UserManagementDeleteDialogComponent],\n      })\n        .overrideTemplate(UserManagementDeleteDialogComponent, '')\n        .compileComponents();\n    }));\n\n    beforeEach(() => {\n      fixture = TestBed.createComponent(UserManagementDeleteDialogComponent);\n      comp = fixture.componentInstance;\n      service = fixture.debugElement.injector.get(UserService);\n      mockEventManager = TestBed.get(JhiEventManager);\n      mockActiveModal = TestBed.get(NgbActiveModal);\n    });\n\n    describe('confirmDelete', () => {\n      it('Should call delete service on confirmDelete', inject(\n        [],\n        fakeAsync(() => {\n          // GIVEN\n          spyOn(service, 'delete').and.returnValue(of({}));\n\n          // WHEN\n          comp.confirmDelete('user');\n          tick();\n\n          // THEN\n          expect(service.delete).toHaveBeenCalledWith('user');\n          expect(mockActiveModal.closeSpy).toHaveBeenCalled();\n          expect(mockEventManager.broadcastSpy).toHaveBeenCalled();\n        })\n      ));\n    });\n  });\n});\n"],"version":3}