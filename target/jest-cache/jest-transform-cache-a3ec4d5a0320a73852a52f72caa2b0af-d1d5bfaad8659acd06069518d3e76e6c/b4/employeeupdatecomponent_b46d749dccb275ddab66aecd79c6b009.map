{"version":3,"sources":["/Users/sarujanrajaratnam/Desktop/Ynov/Ynov_TEST_Projet/src/main/webapp/app/entities/employee/employee-update.component.ts"],"names":[],"mappingsuCc;;;;;;;;;;;;;;;;;;;;AAvCd,MAAA,MAAA;AAAA;AAAA,yBAAA,OAAA,CAAA,eAAA,CAAA,CAAA,C,CAEA;;AACA,MAAA,OAAA;AAAA;AAAA,yBAAA,OAAA,CAAA,gBAAA,CAAA,CAAA;AACA,MAAA,QAAA;AAAA;AAAA,yBAAA,OAAA,CAAA,iBAAA,CAAA,CAAA;AAEA,MAAA,MAAA;AAAA;AAAA,yBAAA,OAAA,CAAA,QAAA,CAAA,CAAA;AACA,MAAA,iBAAA;AAAA;AAAA,yBAAA,OAAA,CAAA,sCAAA,CAAA,CAAA;AAEA,MAAA,gBAAA;AAAA;AAAA,yBAAA,OAAA,CAAA,iCAAA,CAAA,CAAA;AACA,MAAA,kBAAA;AAAA;AAAA,yBAAA,OAAA,CAAA,oBAAA,CAAA,CAAA;AAEA,MAAA,oBAAA;AAAA;AAAA,0BAAA,OAAA,CAAA,4CAAA,CAAA,CAAA;;;;AAQA,IAAa,uBAAuB,GAApC,MAAa,uBAAb,CAAoC;AAkBlC,EAAA,WAAA,CACY,eADZ,EAEY,iBAFZ,EAGY,cAHZ,EAIU,EAJV,EAIyB;AAAA;AAAA;AAAA;AAHb,SAAA,eAAA,GAAA,eAAA;;AAGa;AAAA;AAFb,SAAA,iBAAA,GAAA,iBAAA;;AAEa;AAAA;AADb,SAAA,cAAA,GAAA,cAAA;;AACa;AAAA;AAAf,SAAA,EAAA,GAAA,EAAA;;AAAe;AAAA;AArBzB,SAAA,QAAA,GAAW,KAAX;;AAqByB;AAAA;AApBzB,SAAA,SAAA,GAAyB,EAAzB;;AAoByB;AAAA;AAnBzB,SAAA,WAAA,GAA6B,EAA7B;;AAmByB;AAAA;AAjBzB,SAAA,QAAA,GAAW,KAAK,EAAL,CAAQ,KAAR,CAAc;AACvB,MAAA,EAAE,EAAE,EADmB;AAEvB,MAAA,SAAS,EAAE,EAFY;AAGvB,MAAA,QAAQ,EAAE,EAHa;AAIvB,MAAA,KAAK,EAAE,EAJgB;AAKvB,MAAA,WAAW,EAAE,EALU;AAMvB,MAAA,QAAQ,EAAE,EANa;AAOvB,MAAA,MAAM,EAAE,EAPe;AAQvB,MAAA,aAAa,EAAE,EARQ;AASvB,MAAA,OAAO,EAAE,EATc;AAUvB,MAAA,UAAU,EAAE;AAVW,KAAd,CAAX;AAkBI;;AAEJ,EAAA,QAAQ,GAAA;AAAA;AAAA;AAAA;AACN,SAAK,cAAL,CAAoB,IAApB,CAAyB,SAAzB,CAAmC,CAAC;AAAE,MAAA;AAAF,KAAD,KAAiB;AAAA;AAAA;AAAA;;AAClD,UAAI,CAAC,QAAQ,CAAC,EAAd,EAAkB;AAAA;AAAA;AAChB,cAAM,KAAK;AAAA;AAAA,kCAAG,MAAM,GAAG,OAAT,CAAiB,KAAjB,CAAH,CAAX;;AADgB;AAAA;AAEhB,QAAA,QAAQ,CAAC,QAAT,GAAoB,KAApB;AACD,OAHD;AAAA;AAAA;AAAA;AAAA;;AADkD;AAMlD,WAAK,UAAL,CAAgB,QAAhB;;AANkD;AAAA;AAQlD,WAAK,eAAL,CAAqB,KAArB,GAA6B,SAA7B,CAAwC,GAAD,IAAqC;AAAA;AAAA;AAAA;AAAA,oBAAK,SAAL;AAAiB;AAAA,oCAAA,GAAG,CAAC,IAAJ;AAAA;AAAA,oCAAY,EAAZ,CAAjB;AAA+B,OAA3G;;AARkD;AAAA;AAUlD,WAAK,iBAAL,CAAuB,KAAvB,GAA+B,SAA/B,CAA0C,GAAD,IAAuC;AAAA;AAAA;AAAA;AAAA,oBAAK,WAAL;AAAmB;AAAA,oCAAA,GAAG,CAAC,IAAJ;AAAA;AAAA,oCAAY,EAAZ,CAAnB;AAAiC,OAAjH;AACD,KAXD;AAYD;;AAED,EAAA,UAAU,CAAC,QAAD,EAAoB;AAAA;AAAA;AAAA;AAC5B,SAAK,QAAL,CAAc,UAAd,CAAyB;AACvB,MAAA,EAAE,EAAE,QAAQ,CAAC,EADU;AAEvB,MAAA,SAAS,EAAE,QAAQ,CAAC,SAFG;AAGvB,MAAA,QAAQ,EAAE,QAAQ,CAAC,QAHI;AAIvB,MAAA,KAAK,EAAE,QAAQ,CAAC,KAJO;AAKvB,MAAA,WAAW,EAAE,QAAQ,CAAC,WALC;AAMvB,MAAA,QAAQ,EAAE,QAAQ,CAAC,QAAT;AAAA;AAAA,kCAAoB,QAAQ,CAAC,QAAT,CAAkB,MAAlB,CAAyB,iBAAA,CAAA,gBAAzB,CAApB;AAAA;AAAA,kCAAiE,IAAjE,CANa;AAOvB,MAAA,MAAM,EAAE,QAAQ,CAAC,MAPM;AAQvB,MAAA,aAAa,EAAE,QAAQ,CAAC,aARD;AASvB,MAAA,OAAO,EAAE,QAAQ,CAAC,OATK;AAUvB,MAAA,UAAU,EAAE,QAAQ,CAAC;AAVE,KAAzB;AAYD;;AAED,EAAA,aAAa,GAAA;AAAA;AAAA;AAAA;AACX,IAAA,MAAM,CAAC,OAAP,CAAe,IAAf;AACD;;AAED,EAAA,IAAI,GAAA;AAAA;AAAA;AAAA;AACF,SAAK,QAAL,GAAgB,IAAhB;AACA,UAAM,QAAQ;AAAA;AAAA,8BAAG,KAAK,cAAL,EAAH,CAAd;;AAFE;AAAA;;AAGF,QAAI,QAAQ,CAAC,EAAT,KAAgB,SAApB,EAA+B;AAAA;AAAA;AAAA;AAC7B,WAAK,uBAAL,CAA6B,KAAK,eAAL,CAAqB,MAArB,CAA4B,QAA5B,CAA7B;AACD,KAFD,MAEO;AAAA;AAAA;AAAA;AACL,WAAK,uBAAL,CAA6B,KAAK,eAAL,CAAqB,MAArB,CAA4B,QAA5B,CAA7B;AACD;AACF;;AAEO,EAAA,cAAc,GAAA;AAAA;AAAA;AAAA;AACpB,WAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EACK,IAAI,gBAAA,CAAA,QAAJ,EADL,CAAA,EACmB;AACjB,MAAA,EAAE,EAAE,KAAK,QAAL,CAAc,GAAd,CAAkB,CAAC,IAAD,CAAlB,EAA2B,KADd;AAEjB,MAAA,SAAS,EAAE,KAAK,QAAL,CAAc,GAAd,CAAkB,CAAC,WAAD,CAAlB,EAAkC,KAF5B;AAGjB,MAAA,QAAQ,EAAE,KAAK,QAAL,CAAc,GAAd,CAAkB,CAAC,UAAD,CAAlB,EAAiC,KAH1B;AAIjB,MAAA,KAAK,EAAE,KAAK,QAAL,CAAc,GAAd,CAAkB,CAAC,OAAD,CAAlB,EAA8B,KAJpB;AAKjB,MAAA,WAAW,EAAE,KAAK,QAAL,CAAc,GAAd,CAAkB,CAAC,aAAD,CAAlB,EAAoC,KALhC;AAMjB,MAAA,QAAQ,EAAE,KAAK,QAAL,CAAc,GAAd,CAAkB,CAAC,UAAD,CAAlB,EAAiC,KAAjC;AAAA;AAAA,kCAAyC,MAAM,CAAC,KAAK,QAAL,CAAc,GAAd,CAAkB,CAAC,UAAD,CAAlB,EAAiC,KAAlC,EAAyC,iBAAA,CAAA,gBAAzC,CAA/C;AAAA;AAAA,kCAA4G,SAA5G,CANO;AAOjB,MAAA,MAAM,EAAE,KAAK,QAAL,CAAc,GAAd,CAAkB,CAAC,QAAD,CAAlB,EAA+B,KAPtB;AAQjB,MAAA,aAAa,EAAE,KAAK,QAAL,CAAc,GAAd,CAAkB,CAAC,eAAD,CAAlB,EAAsC,KARpC;AASjB,MAAA,OAAO,EAAE,KAAK,QAAL,CAAc,GAAd,CAAkB,CAAC,SAAD,CAAlB,EAAgC,KATxB;AAUjB,MAAA,UAAU,EAAE,KAAK,QAAL,CAAc,GAAd,CAAkB,CAAC,YAAD,CAAlB,EAAmC;AAV9B,KADnB,CAAA;AAaD;;AAES,EAAA,uBAAuB,CAAC,MAAD,EAA4C;AAAA;AAAA;AAAA;AAC3E,IAAA,MAAM,CAAC,SAAP,CACE,MAAM;AAAA;AAAA;AAAA;AAAA,kBAAK,aAAL;AAAoB,KAD5B,EAEE,MAAM;AAAA;AAAA;AAAA;AAAA,kBAAK,WAAL;AAAkB,KAF1B;AAID;;AAES,EAAA,aAAa,GAAA;AAAA;AAAA;AAAA;AACrB,SAAK,QAAL,GAAgB,KAAhB;;AADqB;AAAA;AAErB,SAAK,aAAL;AACD;;AAES,EAAA,WAAW,GAAA;AAAA;AAAA;AAAA;AACnB,SAAK,QAAL,GAAgB,KAAhB;AACD;;AAED,EAAA,SAAS,CAAC,KAAD,EAAgB,IAAhB,EAAsC;AAAA;AAAA;AAAA;AAC7C,WAAO,IAAI,CAAC,EAAZ;AACD;;AAvGiC,CAApC;;;;AAAa,uBAAuB,GAAA,OAAA,CAAA,UAAA,CAAA,CAJnC,MAAA,CAAA,SAAA,CAAU;AACT,EAAA,QAAQ,EAAE,qBADD;AAET,EAAA,QAAA,EAAA,OAAA,CAAa,kCAAb;AAFS,CAAV,CAImC,E,yCAmBL,kBAAA,CAAA,e,EACE,oBAAA,CAAA,iB,EACH,QAAA,CAAA,c,EACd,OAAA,CAAA,W,EAtBoB,CAAA,EAAvB,uBAAuB,CAAvB;;;;AAAA,OAAA,CAAA,uBAAA,GAAA,uBAAA","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { HttpResponse } from '@angular/common/http';\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { ActivatedRoute } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport * as moment from 'moment';\nimport { DATE_TIME_FORMAT } from 'app/shared/constants/input.constants';\n\nimport { IEmployee, Employee } from 'app/shared/model/employee.model';\nimport { EmployeeService } from './employee.service';\nimport { IDepartment } from 'app/shared/model/department.model';\nimport { DepartmentService } from 'app/entities/department/department.service';\n\ntype SelectableEntity = IEmployee | IDepartment;\n\n@Component({\n  selector: 'jhi-employee-update',\n  templateUrl: './employee-update.component.html',\n})\nexport class EmployeeUpdateComponent implements OnInit {\n  isSaving = false;\n  employees: IEmployee[] = [];\n  departments: IDepartment[] = [];\n\n  editForm = this.fb.group({\n    id: [],\n    firstName: [],\n    lastName: [],\n    email: [],\n    phoneNumber: [],\n    hireDate: [],\n    salary: [],\n    commissionPct: [],\n    manager: [],\n    department: [],\n  });\n\n  constructor(\n    protected employeeService: EmployeeService,\n    protected departmentService: DepartmentService,\n    protected activatedRoute: ActivatedRoute,\n    private fb: FormBuilder\n  ) {}\n\n  ngOnInit(): void {\n    this.activatedRoute.data.subscribe(({ employee }) => {\n      if (!employee.id) {\n        const today = moment().startOf('day');\n        employee.hireDate = today;\n      }\n\n      this.updateForm(employee);\n\n      this.employeeService.query().subscribe((res: HttpResponse<IEmployee[]>) => (this.employees = res.body || []));\n\n      this.departmentService.query().subscribe((res: HttpResponse<IDepartment[]>) => (this.departments = res.body || []));\n    });\n  }\n\n  updateForm(employee: IEmployee): void {\n    this.editForm.patchValue({\n      id: employee.id,\n      firstName: employee.firstName,\n      lastName: employee.lastName,\n      email: employee.email,\n      phoneNumber: employee.phoneNumber,\n      hireDate: employee.hireDate ? employee.hireDate.format(DATE_TIME_FORMAT) : null,\n      salary: employee.salary,\n      commissionPct: employee.commissionPct,\n      manager: employee.manager,\n      department: employee.department,\n    });\n  }\n\n  previousState(): void {\n    window.history.back();\n  }\n\n  save(): void {\n    this.isSaving = true;\n    const employee = this.createFromForm();\n    if (employee.id !== undefined) {\n      this.subscribeToSaveResponse(this.employeeService.update(employee));\n    } else {\n      this.subscribeToSaveResponse(this.employeeService.create(employee));\n    }\n  }\n\n  private createFromForm(): IEmployee {\n    return {\n      ...new Employee(),\n      id: this.editForm.get(['id'])!.value,\n      firstName: this.editForm.get(['firstName'])!.value,\n      lastName: this.editForm.get(['lastName'])!.value,\n      email: this.editForm.get(['email'])!.value,\n      phoneNumber: this.editForm.get(['phoneNumber'])!.value,\n      hireDate: this.editForm.get(['hireDate'])!.value ? moment(this.editForm.get(['hireDate'])!.value, DATE_TIME_FORMAT) : undefined,\n      salary: this.editForm.get(['salary'])!.value,\n      commissionPct: this.editForm.get(['commissionPct'])!.value,\n      manager: this.editForm.get(['manager'])!.value,\n      department: this.editForm.get(['department'])!.value,\n    };\n  }\n\n  protected subscribeToSaveResponse(result: Observable<HttpResponse<IEmployee>>): void {\n    result.subscribe(\n      () => this.onSaveSuccess(),\n      () => this.onSaveError()\n    );\n  }\n\n  protected onSaveSuccess(): void {\n    this.isSaving = false;\n    this.previousState();\n  }\n\n  protected onSaveError(): void {\n    this.isSaving = false;\n  }\n\n  trackById(index: number, item: SelectableEntity): any {\n    return item.id;\n  }\n}\n"]}