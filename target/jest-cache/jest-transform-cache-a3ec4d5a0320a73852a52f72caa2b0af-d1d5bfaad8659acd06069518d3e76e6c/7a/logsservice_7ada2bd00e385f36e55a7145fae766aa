051dbe9b45f6794de4bcd11866e0fa61
"use strict";

/* istanbul ignore next */
function cov_1ulovbej0f() {
  var path = "/Users/sarujanrajaratnam/Desktop/Ynov/Ynov_TEST_Projet/src/main/webapp/app/admin/logs/logs.service.ts";
  var hash = "b021158a8e84256b6041561dda44a6d2024577f1";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/sarujanrajaratnam/Desktop/Ynov/Ynov_TEST_Projet/src/main/webapp/app/admin/logs/logs.service.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 2,
          column: 62
        }
      },
      "1": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 3,
          column: 29
        }
      },
      "2": {
        start: {
          line: 4,
          column: 16
        },
        end: {
          line: 4,
          column: 32
        }
      },
      "3": {
        start: {
          line: 5,
          column: 15
        },
        end: {
          line: 5,
          column: 39
        }
      },
      "4": {
        start: {
          line: 6,
          column: 15
        },
        end: {
          line: 6,
          column: 46
        }
      },
      "5": {
        start: {
          line: 7,
          column: 24
        },
        end: {
          line: 7,
          column: 52
        }
      },
      "6": {
        start: {
          line: 8,
          column: 18
        },
        end: {
          line: 18,
          column: 1
        }
      },
      "7": {
        start: {
          line: 10,
          column: 8
        },
        end: {
          line: 10,
          column: 25
        }
      },
      "8": {
        start: {
          line: 13,
          column: 8
        },
        end: {
          line: 13,
          column: 114
        }
      },
      "9": {
        start: {
          line: 16,
          column: 8
        },
        end: {
          line: 16,
          column: 84
        }
      },
      "10": {
        start: {
          line: 19,
          column: 0
        },
        end: {
          line: 22,
          column: 16
        }
      },
      "11": {
        start: {
          line: 23,
          column: 0
        },
        end: {
          line: 23,
          column: 34
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 9,
            column: 4
          },
          end: {
            line: 9,
            column: 5
          }
        },
        loc: {
          start: {
            line: 9,
            column: 22
          },
          end: {
            line: 11,
            column: 5
          }
        },
        line: 9
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 12,
            column: 4
          },
          end: {
            line: 12,
            column: 5
          }
        },
        loc: {
          start: {
            line: 12,
            column: 39
          },
          end: {
            line: 14,
            column: 5
          }
        },
        line: 12
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 15,
            column: 4
          },
          end: {
            line: 15,
            column: 5
          }
        },
        loc: {
          start: {
            line: 15,
            column: 14
          },
          end: {
            line: 17,
            column: 5
          }
        },
        line: 15
      }
    },
    branchMap: {},
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0
    },
    b: {},
    inputSourceMap: {
      file: "/Users/sarujanrajaratnam/Desktop/Ynov/Ynov_TEST_Projet/src/main/webapp/app/admin/logs/logs.service.ts",
      mappings: ";;;;AAAA,wCAA2C;AAC3C,+CAAkD;AAGlD,qDAAmD;AAInD,IAAa,WAAW,GAAxB,MAAa,WAAW;IACtB,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;IAAG,CAAC;IAExC,WAAW,CAAC,IAAY,EAAE,eAAsB;QAC9C,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,8BAAc,GAAG,qBAAqB,GAAG,IAAI,EAAE,EAAE,eAAe,EAAE,CAAC,CAAC;IAC5F,CAAC;IAED,OAAO;QACL,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAkB,8BAAc,GAAG,oBAAoB,CAAC,CAAC;IAC/E,CAAC;CACF,CAAA;AAVY,WAAW;IADvB,iBAAU,CAAC,EAAE,UAAU,EAAE,MAAM,EAAE,CAAC;6CAEP,iBAAU;GADzB,WAAW,CAUvB;AAVY,kCAAW",
      names: [],
      sources: ["/Users/sarujanrajaratnam/Desktop/Ynov/Ynov_TEST_Projet/src/main/webapp/app/admin/logs/logs.service.ts"],
      sourcesContent: ["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\nimport { SERVER_API_URL } from 'app/app.constants';\nimport { LoggersResponse, Level } from './log.model';\n\n@Injectable({ providedIn: 'root' })\nexport class LogsService {\n  constructor(private http: HttpClient) {}\n\n  changeLevel(name: string, configuredLevel: Level): Observable<{}> {\n    return this.http.post(SERVER_API_URL + 'management/loggers/' + name, { configuredLevel });\n  }\n\n  findAll(): Observable<LoggersResponse> {\n    return this.http.get<LoggersResponse>(SERVER_API_URL + 'management/loggers');\n  }\n}\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "b021158a8e84256b6041561dda44a6d2024577f1"
  };
  var coverage = global[gcv] || (global[gcv] = {});

  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }

  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1ulovbej0f = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}

cov_1ulovbej0f();
cov_1ulovbej0f().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});

/* istanbul ignore next */
cov_1ulovbej0f().s[1]++;
exports.LogsService = void 0;
const tslib_1 =
/* istanbul ignore next */
(cov_1ulovbej0f().s[2]++, require("tslib"));
const core_1 =
/* istanbul ignore next */
(cov_1ulovbej0f().s[3]++, require("@angular/core"));
const http_1 =
/* istanbul ignore next */
(cov_1ulovbej0f().s[4]++, require("@angular/common/http"));
const app_constants_1 =
/* istanbul ignore next */
(cov_1ulovbej0f().s[5]++, require("app/app.constants"));

/* istanbul ignore next */
cov_1ulovbej0f().s[6]++;
let LogsService = class LogsService {
  constructor(http) {
    /* istanbul ignore next */
    cov_1ulovbej0f().f[0]++;
    cov_1ulovbej0f().s[7]++;
    this.http = http;
  }

  changeLevel(name, configuredLevel) {
    /* istanbul ignore next */
    cov_1ulovbej0f().f[1]++;
    cov_1ulovbej0f().s[8]++;
    return this.http.post(app_constants_1.SERVER_API_URL + 'management/loggers/' + name, {
      configuredLevel
    });
  }

  findAll() {
    /* istanbul ignore next */
    cov_1ulovbej0f().f[2]++;
    cov_1ulovbej0f().s[9]++;
    return this.http.get(app_constants_1.SERVER_API_URL + 'management/loggers');
  }

};

/* istanbul ignore next */
cov_1ulovbej0f().s[10]++;
LogsService = tslib_1.__decorate([core_1.Injectable({
  providedIn: 'root'
}), tslib_1.__metadata("design:paramtypes", [http_1.HttpClient])], LogsService);

/* istanbul ignore next */
cov_1ulovbej0f().s[11]++;
exports.LogsService = LogsService;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9zYXJ1amFucmFqYXJhdG5hbS9EZXNrdG9wL1lub3YvWW5vdl9URVNUX1Byb2pldC9zcmMvbWFpbi93ZWJhcHAvYXBwL2FkbWluL2xvZ3MvbG9ncy5zZXJ2aWNlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQWdCSTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFoQkosTUFBQSxNQUFBO0FBQUE7QUFBQSwwQkFBQSxPQUFBLENBQUEsZUFBQSxDQUFBLENBQUE7QUFDQSxNQUFBLE1BQUE7QUFBQTtBQUFBLDBCQUFBLE9BQUEsQ0FBQSxzQkFBQSxDQUFBLENBQUE7QUFHQSxNQUFBLGVBQUE7QUFBQTtBQUFBLDBCQUFBLE9BQUEsQ0FBQSxtQkFBQSxDQUFBLENBQUE7Ozs7QUFJQSxJQUFhLFdBQVcsR0FBeEIsTUFBYSxXQUFiLENBQXdCO0FBQ3RCLEVBQUEsV0FBQSxDQUFvQixJQUFwQixFQUFvQztBQUFBO0FBQUE7QUFBQTtBQUFoQixTQUFBLElBQUEsR0FBQSxJQUFBO0FBQW9COztBQUV4QyxFQUFBLFdBQVcsQ0FBQyxJQUFELEVBQWUsZUFBZixFQUFxQztBQUFBO0FBQUE7QUFBQTtBQUM5QyxXQUFPLEtBQUssSUFBTCxDQUFVLElBQVYsQ0FBZSxlQUFBLENBQUEsY0FBQSxHQUFpQixxQkFBakIsR0FBeUMsSUFBeEQsRUFBOEQ7QUFBRSxNQUFBO0FBQUYsS0FBOUQsQ0FBUDtBQUNEOztBQUVELEVBQUEsT0FBTyxHQUFBO0FBQUE7QUFBQTtBQUFBO0FBQ0wsV0FBTyxLQUFLLElBQUwsQ0FBVSxHQUFWLENBQStCLGVBQUEsQ0FBQSxjQUFBLEdBQWlCLG9CQUFoRCxDQUFQO0FBQ0Q7O0FBVHFCLENBQXhCOzs7O0FBQWEsV0FBVyxHQUFBLE9BQUEsQ0FBQSxVQUFBLENBQUEsQ0FEdkIsTUFBQSxDQUFBLFVBQUEsQ0FBVztBQUFFLEVBQUEsVUFBVSxFQUFFO0FBQWQsQ0FBWCxDQUN1QixFLHlDQUNJLE1BQUEsQ0FBQSxVLEVBREosQ0FBQSxFQUFYLFdBQVcsQ0FBWDs7OztBQUFBLE9BQUEsQ0FBQSxXQUFBLEdBQUEsV0FBQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEluamVjdGFibGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IEh0dHBDbGllbnQgfSBmcm9tICdAYW5ndWxhci9jb21tb24vaHR0cCc7XG5pbXBvcnQgeyBPYnNlcnZhYmxlIH0gZnJvbSAncnhqcyc7XG5cbmltcG9ydCB7IFNFUlZFUl9BUElfVVJMIH0gZnJvbSAnYXBwL2FwcC5jb25zdGFudHMnO1xuaW1wb3J0IHsgTG9nZ2Vyc1Jlc3BvbnNlLCBMZXZlbCB9IGZyb20gJy4vbG9nLm1vZGVsJztcblxuQEluamVjdGFibGUoeyBwcm92aWRlZEluOiAncm9vdCcgfSlcbmV4cG9ydCBjbGFzcyBMb2dzU2VydmljZSB7XG4gIGNvbnN0cnVjdG9yKHByaXZhdGUgaHR0cDogSHR0cENsaWVudCkge31cblxuICBjaGFuZ2VMZXZlbChuYW1lOiBzdHJpbmcsIGNvbmZpZ3VyZWRMZXZlbDogTGV2ZWwpOiBPYnNlcnZhYmxlPHt9PiB7XG4gICAgcmV0dXJuIHRoaXMuaHR0cC5wb3N0KFNFUlZFUl9BUElfVVJMICsgJ21hbmFnZW1lbnQvbG9nZ2Vycy8nICsgbmFtZSwgeyBjb25maWd1cmVkTGV2ZWwgfSk7XG4gIH1cblxuICBmaW5kQWxsKCk6IE9ic2VydmFibGU8TG9nZ2Vyc1Jlc3BvbnNlPiB7XG4gICAgcmV0dXJuIHRoaXMuaHR0cC5nZXQ8TG9nZ2Vyc1Jlc3BvbnNlPihTRVJWRVJfQVBJX1VSTCArICdtYW5hZ2VtZW50L2xvZ2dlcnMnKTtcbiAgfVxufVxuIl19