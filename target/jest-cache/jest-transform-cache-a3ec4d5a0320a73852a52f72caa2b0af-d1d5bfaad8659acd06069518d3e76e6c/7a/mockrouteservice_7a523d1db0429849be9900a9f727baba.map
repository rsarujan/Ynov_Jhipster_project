{"file":"/Users/sarujanrajaratnam/Desktop/Ynov/Ynov_TEST_Projet/src/test/javascript/spec/helpers/mock-route.service.ts","mappings":";;;AACA,4CAAoF;AACpF,+BAAiD;AAEjD,2CAAwC;AAExC,MAAa,kBAAmB,SAAQ,uBAAc;IAKpD,YAAY,UAAkB;QAC5B,KAAK,EAAE,CAAC;QALF,uBAAkB,GAAG,IAAI,oBAAa,EAAU,CAAC;QACjD,iBAAY,GAAG,IAAI,oBAAa,EAAU,CAAC;QAC3C,gBAAW,GAAG,IAAI,oBAAa,EAAQ,CAAC;QAI9C,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,kBAAkB,CAAC,YAAY,EAAE,CAAC;QAC1D,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,YAAY,CAAC,YAAY,EAAE,CAAC;QAC/C,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,WAAW,CAAC,YAAY,EAAE,CAAC;QAC5C,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC,CAAC;IACjC,CAAC;IAED,aAAa,CAAC,UAAkB;QAC9B,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QACzC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QACnC,IAAI,CAAC,WAAW,CAAC,IAAI,iCAChB,UAAU,KACb,WAAW,EAAE,SAAS,IACtB,CAAC;IACL,CAAC;CACF;AArBD,gDAqBC;AAED,MAAa,UAAW,SAAQ,qBAAS;IAOvC;QACE,KAAK,CAAC,eAAM,CAAC,CAAC;QALhB,WAAM,GAAmC,IAAI,CAAC;QAE9C,QAAG,GAAG,EAAE,CAAC;QAIP,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;QACxC,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC;IACpD,CAAC;IAED,SAAS,CAAC,MAA+B;QACvC,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;IACvB,CAAC;IAED,cAAc,CAAC,WAAgB;QAC7B,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;IACjC,CAAC;CACF;AApBD,gCAoBC","names":[],"sources":["/Users/sarujanrajaratnam/Desktop/Ynov/Ynov_TEST_Projet/src/test/javascript/spec/helpers/mock-route.service.ts"],"sourcesContent":["import Spy = jasmine.Spy;\nimport { ActivatedRoute, Router, RouterEvent, Data, Params } from '@angular/router';\nimport { Observable, ReplaySubject } from 'rxjs';\n\nimport { SpyObject } from './spyobject';\n\nexport class MockActivatedRoute extends ActivatedRoute {\n  private queryParamsSubject = new ReplaySubject<Params>();\n  private paramSubject = new ReplaySubject<Params>();\n  private dataSubject = new ReplaySubject<Data>();\n\n  constructor(parameters: Params) {\n    super();\n    this.queryParams = this.queryParamsSubject.asObservable();\n    this.params = this.paramSubject.asObservable();\n    this.data = this.dataSubject.asObservable();\n    this.setParameters(parameters);\n  }\n\n  setParameters(parameters: Params): void {\n    this.queryParamsSubject.next(parameters);\n    this.paramSubject.next(parameters);\n    this.dataSubject.next({\n      ...parameters,\n      defaultSort: 'id,desc',\n    });\n  }\n}\n\nexport class MockRouter extends SpyObject {\n  navigateSpy: Spy;\n  navigateByUrlSpy: Spy;\n  events: Observable<RouterEvent> | null = null;\n  routerState: any;\n  url = '';\n\n  constructor() {\n    super(Router);\n    this.navigateSpy = this.spy('navigate');\n    this.navigateByUrlSpy = this.spy('navigateByUrl');\n  }\n\n  setEvents(events: Observable<RouterEvent>): void {\n    this.events = events;\n  }\n\n  setRouterState(routerState: any): void {\n    this.routerState = routerState;\n  }\n}\n"],"version":3}