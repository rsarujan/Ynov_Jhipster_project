{"version":3,"sources":["/Users/sarujanrajaratnam/Desktop/Ynov/Ynov_TEST_Projet/src/main/webapp/app/entities/job/job-update.component.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoCc;;;;;;;;;;;;;;;;;;;;AApCd,MAAA,MAAA;AAAA;AAAA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","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { HttpResponse } from '@angular/common/http';\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { ActivatedRoute } from '@angular/router';\nimport { Observable } from 'rxjs';\n\nimport { IJob, Job } from 'app/shared/model/job.model';\nimport { JobService } from './job.service';\nimport { ITask } from 'app/shared/model/task.model';\nimport { TaskService } from 'app/entities/task/task.service';\nimport { IEmployee } from 'app/shared/model/employee.model';\nimport { EmployeeService } from 'app/entities/employee/employee.service';\n\ntype SelectableEntity = ITask | IEmployee;\n\n@Component({\n  selector: 'jhi-job-update',\n  templateUrl: './job-update.component.html',\n})\nexport class JobUpdateComponent implements OnInit {\n  isSaving = false;\n  tasks: ITask[] = [];\n  employees: IEmployee[] = [];\n\n  editForm = this.fb.group({\n    id: [],\n    jobTitle: [],\n    minSalary: [],\n    maxSalary: [],\n    tasks: [],\n    employee: [],\n  });\n\n  constructor(\n    protected jobService: JobService,\n    protected taskService: TaskService,\n    protected employeeService: EmployeeService,\n    protected activatedRoute: ActivatedRoute,\n    private fb: FormBuilder\n  ) {}\n\n  ngOnInit(): void {\n    this.activatedRoute.data.subscribe(({ job }) => {\n      this.updateForm(job);\n\n      this.taskService.query().subscribe((res: HttpResponse<ITask[]>) => (this.tasks = res.body || []));\n\n      this.employeeService.query().subscribe((res: HttpResponse<IEmployee[]>) => (this.employees = res.body || []));\n    });\n  }\n\n  updateForm(job: IJob): void {\n    this.editForm.patchValue({\n      id: job.id,\n      jobTitle: job.jobTitle,\n      minSalary: job.minSalary,\n      maxSalary: job.maxSalary,\n      tasks: job.tasks,\n      employee: job.employee,\n    });\n  }\n\n  previousState(): void {\n    window.history.back();\n  }\n\n  save(): void {\n    this.isSaving = true;\n    const job = this.createFromForm();\n    if (job.id !== undefined) {\n      this.subscribeToSaveResponse(this.jobService.update(job));\n    } else {\n      this.subscribeToSaveResponse(this.jobService.create(job));\n    }\n  }\n\n  private createFromForm(): IJob {\n    return {\n      ...new Job(),\n      id: this.editForm.get(['id'])!.value,\n      jobTitle: this.editForm.get(['jobTitle'])!.value,\n      minSalary: this.editForm.get(['minSalary'])!.value,\n      maxSalary: this.editForm.get(['maxSalary'])!.value,\n      tasks: this.editForm.get(['tasks'])!.value,\n      employee: this.editForm.get(['employee'])!.value,\n    };\n  }\n\n  protected subscribeToSaveResponse(result: Observable<HttpResponse<IJob>>): void {\n    result.subscribe(\n      () => this.onSaveSuccess(),\n      () => this.onSaveError()\n    );\n  }\n\n  protected onSaveSuccess(): void {\n    this.isSaving = false;\n    this.previousState();\n  }\n\n  protected onSaveError(): void {\n    this.isSaving = false;\n  }\n\n  trackById(index: number, item: SelectableEntity): any {\n    return item.id;\n  }\n\n  getSelected(selectedVals: ITask[], option: ITask): ITask {\n    if (selectedVals) {\n      for (let i = 0; i < selectedVals.length; i++) {\n        if (option.id === selectedVals[i].id) {\n          return selectedVals[i];\n        }\n      }\n    }\n    return option;\n  }\n}\n"]}