ff88e8f44e221a70e99b76857067ca1a
"use strict";

/* istanbul ignore next */
function cov_126enj6ajc() {
  var path = "/Users/sarujanrajaratnam/Desktop/Ynov/Ynov_TEST_Projet/src/main/webapp/app/entities/department/department.service.ts";
  var hash = "ba03f2ce7b342dfee9e3770dfdee0a3cf090f255";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/sarujanrajaratnam/Desktop/Ynov/Ynov_TEST_Projet/src/main/webapp/app/entities/department/department.service.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 2,
          column: 62
        }
      },
      "1": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 3,
          column: 35
        }
      },
      "2": {
        start: {
          line: 4,
          column: 16
        },
        end: {
          line: 4,
          column: 32
        }
      },
      "3": {
        start: {
          line: 5,
          column: 15
        },
        end: {
          line: 5,
          column: 39
        }
      },
      "4": {
        start: {
          line: 6,
          column: 15
        },
        end: {
          line: 6,
          column: 46
        }
      },
      "5": {
        start: {
          line: 7,
          column: 24
        },
        end: {
          line: 7,
          column: 52
        }
      },
      "6": {
        start: {
          line: 8,
          column: 23
        },
        end: {
          line: 8,
          column: 62
        }
      },
      "7": {
        start: {
          line: 9,
          column: 24
        },
        end: {
          line: 30,
          column: 1
        }
      },
      "8": {
        start: {
          line: 11,
          column: 8
        },
        end: {
          line: 11,
          column: 25
        }
      },
      "9": {
        start: {
          line: 12,
          column: 8
        },
        end: {
          line: 12,
          column: 78
        }
      },
      "10": {
        start: {
          line: 15,
          column: 8
        },
        end: {
          line: 15,
          column: 85
        }
      },
      "11": {
        start: {
          line: 18,
          column: 8
        },
        end: {
          line: 18,
          column: 84
        }
      },
      "12": {
        start: {
          line: 21,
          column: 8
        },
        end: {
          line: 21,
          column: 83
        }
      },
      "13": {
        start: {
          line: 24,
          column: 24
        },
        end: {
          line: 24,
          column: 63
        }
      },
      "14": {
        start: {
          line: 25,
          column: 8
        },
        end: {
          line: 25,
          column: 89
        }
      },
      "15": {
        start: {
          line: 28,
          column: 8
        },
        end: {
          line: 28,
          column: 86
        }
      },
      "16": {
        start: {
          line: 31,
          column: 0
        },
        end: {
          line: 34,
          column: 22
        }
      },
      "17": {
        start: {
          line: 35,
          column: 0
        },
        end: {
          line: 35,
          column: 46
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 10,
            column: 4
          },
          end: {
            line: 10,
            column: 5
          }
        },
        loc: {
          start: {
            line: 10,
            column: 22
          },
          end: {
            line: 13,
            column: 5
          }
        },
        line: 10
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 14,
            column: 4
          },
          end: {
            line: 14,
            column: 5
          }
        },
        loc: {
          start: {
            line: 14,
            column: 23
          },
          end: {
            line: 16,
            column: 5
          }
        },
        line: 14
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 17,
            column: 4
          },
          end: {
            line: 17,
            column: 5
          }
        },
        loc: {
          start: {
            line: 17,
            column: 23
          },
          end: {
            line: 19,
            column: 5
          }
        },
        line: 17
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 20,
            column: 4
          },
          end: {
            line: 20,
            column: 5
          }
        },
        loc: {
          start: {
            line: 20,
            column: 13
          },
          end: {
            line: 22,
            column: 5
          }
        },
        line: 20
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 23,
            column: 4
          },
          end: {
            line: 23,
            column: 5
          }
        },
        loc: {
          start: {
            line: 23,
            column: 15
          },
          end: {
            line: 26,
            column: 5
          }
        },
        line: 23
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 27,
            column: 4
          },
          end: {
            line: 27,
            column: 5
          }
        },
        loc: {
          start: {
            line: 27,
            column: 15
          },
          end: {
            line: 29,
            column: 5
          }
        },
        line: 27
      }
    },
    branchMap: {},
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0
    },
    b: {},
    inputSourceMap: {
      file: "/Users/sarujanrajaratnam/Desktop/Ynov/Ynov_TEST_Projet/src/main/webapp/app/entities/department/department.service.ts",
      mappings: ";;;;AAAA,wCAA2C;AAC3C,+CAAgE;AAGhE,qDAAmD;AACnD,+DAAmE;AAOnE,IAAa,iBAAiB,GAA9B,MAAa,iBAAiB;IAG5B,YAAsB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAF/B,gBAAW,GAAG,8BAAc,GAAG,iBAAiB,CAAC;IAEf,CAAC;IAE1C,MAAM,CAAC,UAAuB;QAC5B,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAc,IAAI,CAAC,WAAW,EAAE,UAAU,EAAE,EAAE,OAAO,EAAE,UAAU,EAAE,CAAC,CAAC;IAC5F,CAAC;IAED,MAAM,CAAC,UAAuB;QAC5B,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAc,IAAI,CAAC,WAAW,EAAE,UAAU,EAAE,EAAE,OAAO,EAAE,UAAU,EAAE,CAAC,CAAC;IAC3F,CAAC;IAED,IAAI,CAAC,EAAU;QACb,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAc,GAAG,IAAI,CAAC,WAAW,IAAI,EAAE,EAAE,EAAE,EAAE,OAAO,EAAE,UAAU,EAAE,CAAC,CAAC;IAC1F,CAAC;IAED,KAAK,CAAC,GAAS;QACb,MAAM,OAAO,GAAG,kCAAmB,CAAC,GAAG,CAAC,CAAC;QACzC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAgB,IAAI,CAAC,WAAW,EAAE,EAAE,MAAM,EAAE,OAAO,EAAE,OAAO,EAAE,UAAU,EAAE,CAAC,CAAC;IAClG,CAAC;IAED,MAAM,CAAC,EAAU;QACf,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC,WAAW,IAAI,EAAE,EAAE,EAAE,EAAE,OAAO,EAAE,UAAU,EAAE,CAAC,CAAC;IAChF,CAAC;CACF,CAAA;AAzBY,iBAAiB;IAD7B,iBAAU,CAAC,EAAE,UAAU,EAAE,MAAM,EAAE,CAAC;6CAIL,iBAAU;GAH3B,iBAAiB,CAyB7B;AAzBY,8CAAiB",
      names: [],
      sources: ["/Users/sarujanrajaratnam/Desktop/Ynov/Ynov_TEST_Projet/src/main/webapp/app/entities/department/department.service.ts"],
      sourcesContent: ["import { Injectable } from '@angular/core';\nimport { HttpClient, HttpResponse } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\nimport { SERVER_API_URL } from 'app/app.constants';\nimport { createRequestOption } from 'app/shared/util/request-util';\nimport { IDepartment } from 'app/shared/model/department.model';\n\ntype EntityResponseType = HttpResponse<IDepartment>;\ntype EntityArrayResponseType = HttpResponse<IDepartment[]>;\n\n@Injectable({ providedIn: 'root' })\nexport class DepartmentService {\n  public resourceUrl = SERVER_API_URL + 'api/departments';\n\n  constructor(protected http: HttpClient) {}\n\n  create(department: IDepartment): Observable<EntityResponseType> {\n    return this.http.post<IDepartment>(this.resourceUrl, department, { observe: 'response' });\n  }\n\n  update(department: IDepartment): Observable<EntityResponseType> {\n    return this.http.put<IDepartment>(this.resourceUrl, department, { observe: 'response' });\n  }\n\n  find(id: number): Observable<EntityResponseType> {\n    return this.http.get<IDepartment>(`${this.resourceUrl}/${id}`, { observe: 'response' });\n  }\n\n  query(req?: any): Observable<EntityArrayResponseType> {\n    const options = createRequestOption(req);\n    return this.http.get<IDepartment[]>(this.resourceUrl, { params: options, observe: 'response' });\n  }\n\n  delete(id: number): Observable<HttpResponse<{}>> {\n    return this.http.delete(`${this.resourceUrl}/${id}`, { observe: 'response' });\n  }\n}\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "ba03f2ce7b342dfee9e3770dfdee0a3cf090f255"
  };
  var coverage = global[gcv] || (global[gcv] = {});

  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }

  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_126enj6ajc = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}

cov_126enj6ajc();
cov_126enj6ajc().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});

/* istanbul ignore next */
cov_126enj6ajc().s[1]++;
exports.DepartmentService = void 0;
const tslib_1 =
/* istanbul ignore next */
(cov_126enj6ajc().s[2]++, require("tslib"));
const core_1 =
/* istanbul ignore next */
(cov_126enj6ajc().s[3]++, require("@angular/core"));
const http_1 =
/* istanbul ignore next */
(cov_126enj6ajc().s[4]++, require("@angular/common/http"));
const app_constants_1 =
/* istanbul ignore next */
(cov_126enj6ajc().s[5]++, require("app/app.constants"));
const request_util_1 =
/* istanbul ignore next */
(cov_126enj6ajc().s[6]++, require("app/shared/util/request-util"));

/* istanbul ignore next */
cov_126enj6ajc().s[7]++;
let DepartmentService = class DepartmentService {
  constructor(http) {
    /* istanbul ignore next */
    cov_126enj6ajc().f[0]++;
    cov_126enj6ajc().s[8]++;
    this.http = http;

    /* istanbul ignore next */
    cov_126enj6ajc().s[9]++;
    this.resourceUrl = app_constants_1.SERVER_API_URL + 'api/departments';
  }

  create(department) {
    /* istanbul ignore next */
    cov_126enj6ajc().f[1]++;
    cov_126enj6ajc().s[10]++;
    return this.http.post(this.resourceUrl, department, {
      observe: 'response'
    });
  }

  update(department) {
    /* istanbul ignore next */
    cov_126enj6ajc().f[2]++;
    cov_126enj6ajc().s[11]++;
    return this.http.put(this.resourceUrl, department, {
      observe: 'response'
    });
  }

  find(id) {
    /* istanbul ignore next */
    cov_126enj6ajc().f[3]++;
    cov_126enj6ajc().s[12]++;
    return this.http.get(`${this.resourceUrl}/${id}`, {
      observe: 'response'
    });
  }

  query(req) {
    /* istanbul ignore next */
    cov_126enj6ajc().f[4]++;
    const options =
    /* istanbul ignore next */
    (cov_126enj6ajc().s[13]++, request_util_1.createRequestOption(req));

    /* istanbul ignore next */
    cov_126enj6ajc().s[14]++;
    return this.http.get(this.resourceUrl, {
      params: options,
      observe: 'response'
    });
  }

  delete(id) {
    /* istanbul ignore next */
    cov_126enj6ajc().f[5]++;
    cov_126enj6ajc().s[15]++;
    return this.http.delete(`${this.resourceUrl}/${id}`, {
      observe: 'response'
    });
  }

};

/* istanbul ignore next */
cov_126enj6ajc().s[16]++;
DepartmentService = tslib_1.__decorate([core_1.Injectable({
  providedIn: 'root'
}), tslib_1.__metadata("design:paramtypes", [http_1.HttpClient])], DepartmentService);

/* istanbul ignore next */
cov_126enj6ajc().s[17]++;
exports.DepartmentService = DepartmentService;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9zYXJ1amFucmFqYXJhdG5hbS9EZXNrdG9wL1lub3YvWW5vdl9URVNUX1Byb2pldC9zcmMvbWFpbi93ZWJhcHAvYXBwL2VudGl0aWVzL2RlcGFydG1lbnQvZGVwYXJ0bWVudC5zZXJ2aWNlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQW1CRzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFuQkgsTUFBQSxNQUFBO0FBQUE7QUFBQSwwQkFBQSxPQUFBLENBQUEsZUFBQSxDQUFBLENBQUE7QUFDQSxNQUFBLE1BQUE7QUFBQTtBQUFBLDBCQUFBLE9BQUEsQ0FBQSxzQkFBQSxDQUFBLENBQUE7QUFHQSxNQUFBLGVBQUE7QUFBQTtBQUFBLDBCQUFBLE9BQUEsQ0FBQSxtQkFBQSxDQUFBLENBQUE7QUFDQSxNQUFBLGNBQUE7QUFBQTtBQUFBLDBCQUFBLE9BQUEsQ0FBQSw4QkFBQSxDQUFBLENBQUE7Ozs7QUFPQSxJQUFhLGlCQUFpQixHQUE5QixNQUFhLGlCQUFiLENBQThCO0FBRzVCLEVBQUEsV0FBQSxDQUFzQixJQUF0QixFQUFzQztBQUFBO0FBQUE7QUFBQTtBQUFoQixTQUFBLElBQUEsR0FBQSxJQUFBOztBQUFnQjtBQUFBO0FBRi9CLFNBQUEsV0FBQSxHQUFjLGVBQUEsQ0FBQSxjQUFBLEdBQWlCLGlCQUEvQjtBQUVtQzs7QUFFMUMsRUFBQSxNQUFNLENBQUMsVUFBRCxFQUF3QjtBQUFBO0FBQUE7QUFBQTtBQUM1QixXQUFPLEtBQUssSUFBTCxDQUFVLElBQVYsQ0FBNEIsS0FBSyxXQUFqQyxFQUE4QyxVQUE5QyxFQUEwRDtBQUFFLE1BQUEsT0FBTyxFQUFFO0FBQVgsS0FBMUQsQ0FBUDtBQUNEOztBQUVELEVBQUEsTUFBTSxDQUFDLFVBQUQsRUFBd0I7QUFBQTtBQUFBO0FBQUE7QUFDNUIsV0FBTyxLQUFLLElBQUwsQ0FBVSxHQUFWLENBQTJCLEtBQUssV0FBaEMsRUFBNkMsVUFBN0MsRUFBeUQ7QUFBRSxNQUFBLE9BQU8sRUFBRTtBQUFYLEtBQXpELENBQVA7QUFDRDs7QUFFRCxFQUFBLElBQUksQ0FBQyxFQUFELEVBQVc7QUFBQTtBQUFBO0FBQUE7QUFDYixXQUFPLEtBQUssSUFBTCxDQUFVLEdBQVYsQ0FBMkIsR0FBRyxLQUFLLFdBQVcsSUFBSSxFQUFFLEVBQXBELEVBQXdEO0FBQUUsTUFBQSxPQUFPLEVBQUU7QUFBWCxLQUF4RCxDQUFQO0FBQ0Q7O0FBRUQsRUFBQSxLQUFLLENBQUMsR0FBRCxFQUFVO0FBQUE7QUFBQTtBQUNiLFVBQU0sT0FBTztBQUFBO0FBQUEsK0JBQUcsY0FBQSxDQUFBLG1CQUFBLENBQW9CLEdBQXBCLENBQUgsQ0FBYjs7QUFEYTtBQUFBO0FBRWIsV0FBTyxLQUFLLElBQUwsQ0FBVSxHQUFWLENBQTZCLEtBQUssV0FBbEMsRUFBK0M7QUFBRSxNQUFBLE1BQU0sRUFBRSxPQUFWO0FBQW1CLE1BQUEsT0FBTyxFQUFFO0FBQTVCLEtBQS9DLENBQVA7QUFDRDs7QUFFRCxFQUFBLE1BQU0sQ0FBQyxFQUFELEVBQVc7QUFBQTtBQUFBO0FBQUE7QUFDZixXQUFPLEtBQUssSUFBTCxDQUFVLE1BQVYsQ0FBaUIsR0FBRyxLQUFLLFdBQVcsSUFBSSxFQUFFLEVBQTFDLEVBQThDO0FBQUUsTUFBQSxPQUFPLEVBQUU7QUFBWCxLQUE5QyxDQUFQO0FBQ0Q7O0FBeEIyQixDQUE5Qjs7OztBQUFhLGlCQUFpQixHQUFBLE9BQUEsQ0FBQSxVQUFBLENBQUEsQ0FEN0IsTUFBQSxDQUFBLFVBQUEsQ0FBVztBQUFFLEVBQUEsVUFBVSxFQUFFO0FBQWQsQ0FBWCxDQUM2QixFLHlDQUdBLE1BQUEsQ0FBQSxVLEVBSEEsQ0FBQSxFQUFqQixpQkFBaUIsQ0FBakI7Ozs7QUFBQSxPQUFBLENBQUEsaUJBQUEsR0FBQSxpQkFBQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEluamVjdGFibGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IEh0dHBDbGllbnQsIEh0dHBSZXNwb25zZSB9IGZyb20gJ0Bhbmd1bGFyL2NvbW1vbi9odHRwJztcbmltcG9ydCB7IE9ic2VydmFibGUgfSBmcm9tICdyeGpzJztcblxuaW1wb3J0IHsgU0VSVkVSX0FQSV9VUkwgfSBmcm9tICdhcHAvYXBwLmNvbnN0YW50cyc7XG5pbXBvcnQgeyBjcmVhdGVSZXF1ZXN0T3B0aW9uIH0gZnJvbSAnYXBwL3NoYXJlZC91dGlsL3JlcXVlc3QtdXRpbCc7XG5pbXBvcnQgeyBJRGVwYXJ0bWVudCB9IGZyb20gJ2FwcC9zaGFyZWQvbW9kZWwvZGVwYXJ0bWVudC5tb2RlbCc7XG5cbnR5cGUgRW50aXR5UmVzcG9uc2VUeXBlID0gSHR0cFJlc3BvbnNlPElEZXBhcnRtZW50PjtcbnR5cGUgRW50aXR5QXJyYXlSZXNwb25zZVR5cGUgPSBIdHRwUmVzcG9uc2U8SURlcGFydG1lbnRbXT47XG5cbkBJbmplY3RhYmxlKHsgcHJvdmlkZWRJbjogJ3Jvb3QnIH0pXG5leHBvcnQgY2xhc3MgRGVwYXJ0bWVudFNlcnZpY2Uge1xuICBwdWJsaWMgcmVzb3VyY2VVcmwgPSBTRVJWRVJfQVBJX1VSTCArICdhcGkvZGVwYXJ0bWVudHMnO1xuXG4gIGNvbnN0cnVjdG9yKHByb3RlY3RlZCBodHRwOiBIdHRwQ2xpZW50KSB7fVxuXG4gIGNyZWF0ZShkZXBhcnRtZW50OiBJRGVwYXJ0bWVudCk6IE9ic2VydmFibGU8RW50aXR5UmVzcG9uc2VUeXBlPiB7XG4gICAgcmV0dXJuIHRoaXMuaHR0cC5wb3N0PElEZXBhcnRtZW50Pih0aGlzLnJlc291cmNlVXJsLCBkZXBhcnRtZW50LCB7IG9ic2VydmU6ICdyZXNwb25zZScgfSk7XG4gIH1cblxuICB1cGRhdGUoZGVwYXJ0bWVudDogSURlcGFydG1lbnQpOiBPYnNlcnZhYmxlPEVudGl0eVJlc3BvbnNlVHlwZT4ge1xuICAgIHJldHVybiB0aGlzLmh0dHAucHV0PElEZXBhcnRtZW50Pih0aGlzLnJlc291cmNlVXJsLCBkZXBhcnRtZW50LCB7IG9ic2VydmU6ICdyZXNwb25zZScgfSk7XG4gIH1cblxuICBmaW5kKGlkOiBudW1iZXIpOiBPYnNlcnZhYmxlPEVudGl0eVJlc3BvbnNlVHlwZT4ge1xuICAgIHJldHVybiB0aGlzLmh0dHAuZ2V0PElEZXBhcnRtZW50PihgJHt0aGlzLnJlc291cmNlVXJsfS8ke2lkfWAsIHsgb2JzZXJ2ZTogJ3Jlc3BvbnNlJyB9KTtcbiAgfVxuXG4gIHF1ZXJ5KHJlcT86IGFueSk6IE9ic2VydmFibGU8RW50aXR5QXJyYXlSZXNwb25zZVR5cGU+IHtcbiAgICBjb25zdCBvcHRpb25zID0gY3JlYXRlUmVxdWVzdE9wdGlvbihyZXEpO1xuICAgIHJldHVybiB0aGlzLmh0dHAuZ2V0PElEZXBhcnRtZW50W10+KHRoaXMucmVzb3VyY2VVcmwsIHsgcGFyYW1zOiBvcHRpb25zLCBvYnNlcnZlOiAncmVzcG9uc2UnIH0pO1xuICB9XG5cbiAgZGVsZXRlKGlkOiBudW1iZXIpOiBPYnNlcnZhYmxlPEh0dHBSZXNwb25zZTx7fT4+IHtcbiAgICByZXR1cm4gdGhpcy5odHRwLmRlbGV0ZShgJHt0aGlzLnJlc291cmNlVXJsfS8ke2lkfWAsIHsgb2JzZXJ2ZTogJ3Jlc3BvbnNlJyB9KTtcbiAgfVxufVxuIl19