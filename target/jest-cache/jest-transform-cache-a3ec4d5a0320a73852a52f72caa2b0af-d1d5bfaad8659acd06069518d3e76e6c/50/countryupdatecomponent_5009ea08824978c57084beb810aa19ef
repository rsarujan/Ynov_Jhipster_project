6ad30ff8e69031395034c2d44906cc33
"use strict";

/* istanbul ignore next */
function cov_kpku4j0qe() {
  var path = "/Users/sarujanrajaratnam/Desktop/Ynov/Ynov_TEST_Projet/src/main/webapp/app/entities/country/country-update.component.ts";
  var hash = "4aadf385503f5b876a532e69ba8f1faa536212a2";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/sarujanrajaratnam/Desktop/Ynov/Ynov_TEST_Projet/src/main/webapp/app/entities/country/country-update.component.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 2,
          column: 62
        }
      },
      "1": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 3,
          column: 40
        }
      },
      "2": {
        start: {
          line: 4,
          column: 16
        },
        end: {
          line: 4,
          column: 32
        }
      },
      "3": {
        start: {
          line: 5,
          column: 15
        },
        end: {
          line: 5,
          column: 39
        }
      },
      "4": {
        start: {
          line: 7,
          column: 16
        },
        end: {
          line: 7,
          column: 41
        }
      },
      "5": {
        start: {
          line: 8,
          column: 17
        },
        end: {
          line: 8,
          column: 43
        }
      },
      "6": {
        start: {
          line: 9,
          column: 20
        },
        end: {
          line: 9,
          column: 45
        }
      },
      "7": {
        start: {
          line: 10,
          column: 24
        },
        end: {
          line: 10,
          column: 65
        }
      },
      "8": {
        start: {
          line: 11,
          column: 26
        },
        end: {
          line: 11,
          column: 54
        }
      },
      "9": {
        start: {
          line: 12,
          column: 25
        },
        end: {
          line: 12,
          column: 70
        }
      },
      "10": {
        start: {
          line: 13,
          column: 29
        },
        end: {
          line: 86,
          column: 1
        }
      },
      "11": {
        start: {
          line: 15,
          column: 8
        },
        end: {
          line: 15,
          column: 45
        }
      },
      "12": {
        start: {
          line: 16,
          column: 8
        },
        end: {
          line: 16,
          column: 43
        }
      },
      "13": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 17,
          column: 45
        }
      },
      "14": {
        start: {
          line: 18,
          column: 8
        },
        end: {
          line: 18,
          column: 21
        }
      },
      "15": {
        start: {
          line: 19,
          column: 8
        },
        end: {
          line: 19,
          column: 30
        }
      },
      "16": {
        start: {
          line: 20,
          column: 8
        },
        end: {
          line: 20,
          column: 26
        }
      },
      "17": {
        start: {
          line: 21,
          column: 8
        },
        end: {
          line: 25,
          column: 11
        }
      },
      "18": {
        start: {
          line: 28,
          column: 8
        },
        end: {
          line: 48,
          column: 11
        }
      },
      "19": {
        start: {
          line: 29,
          column: 12
        },
        end: {
          line: 29,
          column: 37
        }
      },
      "20": {
        start: {
          line: 30,
          column: 12
        },
        end: {
          line: 47,
          column: 15
        }
      },
      "21": {
        start: {
          line: 33,
          column: 16
        },
        end: {
          line: 33,
          column: 38
        }
      },
      "22": {
        start: {
          line: 36,
          column: 16
        },
        end: {
          line: 46,
          column: 17
        }
      },
      "23": {
        start: {
          line: 37,
          column: 20
        },
        end: {
          line: 37,
          column: 43
        }
      },
      "24": {
        start: {
          line: 40,
          column: 20
        },
        end: {
          line: 45,
          column: 78
        }
      },
      "25": {
        start: {
          line: 43,
          column: 24
        },
        end: {
          line: 43,
          column: 85
        }
      },
      "26": {
        start: {
          line: 45,
          column: 51
        },
        end: {
          line: 45,
          column: 75
        }
      },
      "27": {
        start: {
          line: 51,
          column: 8
        },
        end: {
          line: 55,
          column: 11
        }
      },
      "28": {
        start: {
          line: 58,
          column: 8
        },
        end: {
          line: 58,
          column: 30
        }
      },
      "29": {
        start: {
          line: 61,
          column: 8
        },
        end: {
          line: 61,
          column: 29
        }
      },
      "30": {
        start: {
          line: 62,
          column: 24
        },
        end: {
          line: 62,
          column: 45
        }
      },
      "31": {
        start: {
          line: 63,
          column: 8
        },
        end: {
          line: 68,
          column: 9
        }
      },
      "32": {
        start: {
          line: 64,
          column: 12
        },
        end: {
          line: 64,
          column: 78
        }
      },
      "33": {
        start: {
          line: 67,
          column: 12
        },
        end: {
          line: 67,
          column: 78
        }
      },
      "34": {
        start: {
          line: 71,
          column: 8
        },
        end: {
          line: 71,
          column: 220
        }
      },
      "35": {
        start: {
          line: 74,
          column: 8
        },
        end: {
          line: 74,
          column: 79
        }
      },
      "36": {
        start: {
          line: 74,
          column: 31
        },
        end: {
          line: 74,
          column: 51
        }
      },
      "37": {
        start: {
          line: 74,
          column: 59
        },
        end: {
          line: 74,
          column: 77
        }
      },
      "38": {
        start: {
          line: 77,
          column: 8
        },
        end: {
          line: 77,
          column: 30
        }
      },
      "39": {
        start: {
          line: 78,
          column: 8
        },
        end: {
          line: 78,
          column: 29
        }
      },
      "40": {
        start: {
          line: 81,
          column: 8
        },
        end: {
          line: 81,
          column: 30
        }
      },
      "41": {
        start: {
          line: 84,
          column: 8
        },
        end: {
          line: 84,
          column: 23
        }
      },
      "42": {
        start: {
          line: 87,
          column: 0
        },
        end: {
          line: 96,
          column: 27
        }
      },
      "43": {
        start: {
          line: 97,
          column: 0
        },
        end: {
          line: 97,
          column: 56
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 14,
            column: 4
          },
          end: {
            line: 14,
            column: 5
          }
        },
        loc: {
          start: {
            line: 14,
            column: 67
          },
          end: {
            line: 26,
            column: 5
          }
        },
        line: 14
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 27,
            column: 4
          },
          end: {
            line: 27,
            column: 5
          }
        },
        loc: {
          start: {
            line: 27,
            column: 15
          },
          end: {
            line: 49,
            column: 5
          }
        },
        line: 27
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 28,
            column: 43
          },
          end: {
            line: 28,
            column: 44
          }
        },
        loc: {
          start: {
            line: 28,
            column: 60
          },
          end: {
            line: 48,
            column: 9
          }
        },
        line: 28
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 32,
            column: 38
          },
          end: {
            line: 32,
            column: 39
          }
        },
        loc: {
          start: {
            line: 32,
            column: 47
          },
          end: {
            line: 34,
            column: 13
          }
        },
        line: 32
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 35,
            column: 27
          },
          end: {
            line: 35,
            column: 28
          }
        },
        loc: {
          start: {
            line: 35,
            column: 40
          },
          end: {
            line: 47,
            column: 13
          }
        },
        line: 35
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 42,
            column: 46
          },
          end: {
            line: 42,
            column: 47
          }
        },
        loc: {
          start: {
            line: 42,
            column: 58
          },
          end: {
            line: 44,
            column: 21
          }
        },
        line: 42
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 45,
            column: 35
          },
          end: {
            line: 45,
            column: 36
          }
        },
        loc: {
          start: {
            line: 45,
            column: 51
          },
          end: {
            line: 45,
            column: 75
          }
        },
        line: 45
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 50,
            column: 4
          },
          end: {
            line: 50,
            column: 5
          }
        },
        loc: {
          start: {
            line: 50,
            column: 24
          },
          end: {
            line: 56,
            column: 5
          }
        },
        line: 50
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 57,
            column: 4
          },
          end: {
            line: 57,
            column: 5
          }
        },
        loc: {
          start: {
            line: 57,
            column: 20
          },
          end: {
            line: 59,
            column: 5
          }
        },
        line: 57
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 60,
            column: 4
          },
          end: {
            line: 60,
            column: 5
          }
        },
        loc: {
          start: {
            line: 60,
            column: 11
          },
          end: {
            line: 69,
            column: 5
          }
        },
        line: 60
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 70,
            column: 4
          },
          end: {
            line: 70,
            column: 5
          }
        },
        loc: {
          start: {
            line: 70,
            column: 21
          },
          end: {
            line: 72,
            column: 5
          }
        },
        line: 70
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 73,
            column: 4
          },
          end: {
            line: 73,
            column: 5
          }
        },
        loc: {
          start: {
            line: 73,
            column: 36
          },
          end: {
            line: 75,
            column: 5
          }
        },
        line: 73
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 74,
            column: 25
          },
          end: {
            line: 74,
            column: 26
          }
        },
        loc: {
          start: {
            line: 74,
            column: 31
          },
          end: {
            line: 74,
            column: 51
          }
        },
        line: 74
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 74,
            column: 53
          },
          end: {
            line: 74,
            column: 54
          }
        },
        loc: {
          start: {
            line: 74,
            column: 59
          },
          end: {
            line: 74,
            column: 77
          }
        },
        line: 74
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 76,
            column: 4
          },
          end: {
            line: 76,
            column: 5
          }
        },
        loc: {
          start: {
            line: 76,
            column: 20
          },
          end: {
            line: 79,
            column: 5
          }
        },
        line: 76
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 80,
            column: 4
          },
          end: {
            line: 80,
            column: 5
          }
        },
        loc: {
          start: {
            line: 80,
            column: 18
          },
          end: {
            line: 82,
            column: 5
          }
        },
        line: 80
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 83,
            column: 4
          },
          end: {
            line: 83,
            column: 5
          }
        },
        loc: {
          start: {
            line: 83,
            column: 27
          },
          end: {
            line: 85,
            column: 5
          }
        },
        line: 83
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 33,
            column: 23
          },
          end: {
            line: 33,
            column: 37
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 33,
            column: 23
          },
          end: {
            line: 33,
            column: 31
          }
        }, {
          start: {
            line: 33,
            column: 35
          },
          end: {
            line: 33,
            column: 37
          }
        }],
        line: 33
      },
      "1": {
        loc: {
          start: {
            line: 36,
            column: 16
          },
          end: {
            line: 46,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 36,
            column: 16
          },
          end: {
            line: 46,
            column: 17
          }
        }, {
          start: {
            line: 36,
            column: 16
          },
          end: {
            line: 46,
            column: 17
          }
        }],
        line: 36
      },
      "2": {
        loc: {
          start: {
            line: 36,
            column: 20
          },
          end: {
            line: 36,
            column: 57
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 36,
            column: 20
          },
          end: {
            line: 36,
            column: 35
          }
        }, {
          start: {
            line: 36,
            column: 39
          },
          end: {
            line: 36,
            column: 57
          }
        }],
        line: 36
      },
      "3": {
        loc: {
          start: {
            line: 43,
            column: 31
          },
          end: {
            line: 43,
            column: 84
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 43,
            column: 45
          },
          end: {
            line: 43,
            column: 74
          }
        }, {
          start: {
            line: 43,
            column: 77
          },
          end: {
            line: 43,
            column: 84
          }
        }],
        line: 43
      },
      "4": {
        loc: {
          start: {
            line: 63,
            column: 8
          },
          end: {
            line: 68,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 63,
            column: 8
          },
          end: {
            line: 68,
            column: 9
          }
        }, {
          start: {
            line: 63,
            column: 8
          },
          end: {
            line: 68,
            column: 9
          }
        }],
        line: 63
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0]
    },
    inputSourceMap: {
      file: "/Users/sarujanrajaratnam/Desktop/Ynov/Ynov_TEST_Projet/src/main/webapp/app/entities/country/country-update.component.ts",
      mappings: "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",
      names: [],
      sources: ["/Users/sarujanrajaratnam/Desktop/Ynov/Ynov_TEST_Projet/src/main/webapp/app/entities/country/country-update.component.ts"],
      sourcesContent: ["import { Component, OnInit } from '@angular/core';\nimport { HttpResponse } from '@angular/common/http';\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { ActivatedRoute } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { ICountry, Country } from 'app/shared/model/country.model';\nimport { CountryService } from './country.service';\nimport { IRegion } from 'app/shared/model/region.model';\nimport { RegionService } from 'app/entities/region/region.service';\n\n@Component({\n  selector: 'jhi-country-update',\n  templateUrl: './country-update.component.html',\n})\nexport class CountryUpdateComponent implements OnInit {\n  isSaving = false;\n  regions: IRegion[] = [];\n\n  editForm = this.fb.group({\n    id: [],\n    countryName: [],\n    region: [],\n  });\n\n  constructor(\n    protected countryService: CountryService,\n    protected regionService: RegionService,\n    protected activatedRoute: ActivatedRoute,\n    private fb: FormBuilder\n  ) {}\n\n  ngOnInit(): void {\n    this.activatedRoute.data.subscribe(({ country }) => {\n      this.updateForm(country);\n\n      this.regionService\n        .query({ filter: 'country-is-null' })\n        .pipe(\n          map((res: HttpResponse<IRegion[]>) => {\n            return res.body || [];\n          })\n        )\n        .subscribe((resBody: IRegion[]) => {\n          if (!country.region || !country.region.id) {\n            this.regions = resBody;\n          } else {\n            this.regionService\n              .find(country.region.id)\n              .pipe(\n                map((subRes: HttpResponse<IRegion>) => {\n                  return subRes.body ? [subRes.body].concat(resBody) : resBody;\n                })\n              )\n              .subscribe((concatRes: IRegion[]) => (this.regions = concatRes));\n          }\n        });\n    });\n  }\n\n  updateForm(country: ICountry): void {\n    this.editForm.patchValue({\n      id: country.id,\n      countryName: country.countryName,\n      region: country.region,\n    });\n  }\n\n  previousState(): void {\n    window.history.back();\n  }\n\n  save(): void {\n    this.isSaving = true;\n    const country = this.createFromForm();\n    if (country.id !== undefined) {\n      this.subscribeToSaveResponse(this.countryService.update(country));\n    } else {\n      this.subscribeToSaveResponse(this.countryService.create(country));\n    }\n  }\n\n  private createFromForm(): ICountry {\n    return {\n      ...new Country(),\n      id: this.editForm.get(['id'])!.value,\n      countryName: this.editForm.get(['countryName'])!.value,\n      region: this.editForm.get(['region'])!.value,\n    };\n  }\n\n  protected subscribeToSaveResponse(result: Observable<HttpResponse<ICountry>>): void {\n    result.subscribe(\n      () => this.onSaveSuccess(),\n      () => this.onSaveError()\n    );\n  }\n\n  protected onSaveSuccess(): void {\n    this.isSaving = false;\n    this.previousState();\n  }\n\n  protected onSaveError(): void {\n    this.isSaving = false;\n  }\n\n  trackById(index: number, item: IRegion): any {\n    return item.id;\n  }\n}\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "4aadf385503f5b876a532e69ba8f1faa536212a2"
  };
  var coverage = global[gcv] || (global[gcv] = {});

  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }

  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_kpku4j0qe = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}

cov_kpku4j0qe();
cov_kpku4j0qe().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});

/* istanbul ignore next */
cov_kpku4j0qe().s[1]++;
exports.CountryUpdateComponent = void 0;
const tslib_1 =
/* istanbul ignore next */
(cov_kpku4j0qe().s[2]++, require("tslib"));
const core_1 =
/* istanbul ignore next */
(cov_kpku4j0qe().s[3]++, require("@angular/core")); // eslint-disable-next-line @typescript-eslint/no-unused-vars

const forms_1 =
/* istanbul ignore next */
(cov_kpku4j0qe().s[4]++, require("@angular/forms"));
const router_1 =
/* istanbul ignore next */
(cov_kpku4j0qe().s[5]++, require("@angular/router"));
const operators_1 =
/* istanbul ignore next */
(cov_kpku4j0qe().s[6]++, require("rxjs/operators"));
const country_model_1 =
/* istanbul ignore next */
(cov_kpku4j0qe().s[7]++, require("app/shared/model/country.model"));
const country_service_1 =
/* istanbul ignore next */
(cov_kpku4j0qe().s[8]++, require("./country.service"));
const region_service_1 =
/* istanbul ignore next */
(cov_kpku4j0qe().s[9]++, require("app/entities/region/region.service"));

/* istanbul ignore next */
cov_kpku4j0qe().s[10]++;
let CountryUpdateComponent = class CountryUpdateComponent {
  constructor(countryService, regionService, activatedRoute, fb) {
    /* istanbul ignore next */
    cov_kpku4j0qe().f[0]++;
    cov_kpku4j0qe().s[11]++;
    this.countryService = countryService;

    /* istanbul ignore next */
    cov_kpku4j0qe().s[12]++;
    this.regionService = regionService;

    /* istanbul ignore next */
    cov_kpku4j0qe().s[13]++;
    this.activatedRoute = activatedRoute;

    /* istanbul ignore next */
    cov_kpku4j0qe().s[14]++;
    this.fb = fb;

    /* istanbul ignore next */
    cov_kpku4j0qe().s[15]++;
    this.isSaving = false;

    /* istanbul ignore next */
    cov_kpku4j0qe().s[16]++;
    this.regions = [];

    /* istanbul ignore next */
    cov_kpku4j0qe().s[17]++;
    this.editForm = this.fb.group({
      id: [],
      countryName: [],
      region: []
    });
  }

  ngOnInit() {
    /* istanbul ignore next */
    cov_kpku4j0qe().f[1]++;
    cov_kpku4j0qe().s[18]++;
    this.activatedRoute.data.subscribe(({
      country
    }) => {
      /* istanbul ignore next */
      cov_kpku4j0qe().f[2]++;
      cov_kpku4j0qe().s[19]++;
      this.updateForm(country);

      /* istanbul ignore next */
      cov_kpku4j0qe().s[20]++;
      this.regionService.query({
        filter: 'country-is-null'
      }).pipe(operators_1.map(res => {
        /* istanbul ignore next */
        cov_kpku4j0qe().f[3]++;
        cov_kpku4j0qe().s[21]++;
        return (
          /* istanbul ignore next */
          (cov_kpku4j0qe().b[0][0]++, res.body) ||
          /* istanbul ignore next */
          (cov_kpku4j0qe().b[0][1]++, [])
        );
      })).subscribe(resBody => {
        /* istanbul ignore next */
        cov_kpku4j0qe().f[4]++;
        cov_kpku4j0qe().s[22]++;

        if (
        /* istanbul ignore next */
        (cov_kpku4j0qe().b[2][0]++, !country.region) ||
        /* istanbul ignore next */
        (cov_kpku4j0qe().b[2][1]++, !country.region.id)) {
          /* istanbul ignore next */
          cov_kpku4j0qe().b[1][0]++;
          cov_kpku4j0qe().s[23]++;
          this.regions = resBody;
        } else {
          /* istanbul ignore next */
          cov_kpku4j0qe().b[1][1]++;
          cov_kpku4j0qe().s[24]++;
          this.regionService.find(country.region.id).pipe(operators_1.map(subRes => {
            /* istanbul ignore next */
            cov_kpku4j0qe().f[5]++;
            cov_kpku4j0qe().s[25]++;
            return subRes.body ?
            /* istanbul ignore next */
            (cov_kpku4j0qe().b[3][0]++, [subRes.body].concat(resBody)) :
            /* istanbul ignore next */
            (cov_kpku4j0qe().b[3][1]++, resBody);
          })).subscribe(concatRes => {
            /* istanbul ignore next */
            cov_kpku4j0qe().f[6]++;
            cov_kpku4j0qe().s[26]++;
            return this.regions = concatRes;
          });
        }
      });
    });
  }

  updateForm(country) {
    /* istanbul ignore next */
    cov_kpku4j0qe().f[7]++;
    cov_kpku4j0qe().s[27]++;
    this.editForm.patchValue({
      id: country.id,
      countryName: country.countryName,
      region: country.region
    });
  }

  previousState() {
    /* istanbul ignore next */
    cov_kpku4j0qe().f[8]++;
    cov_kpku4j0qe().s[28]++;
    window.history.back();
  }

  save() {
    /* istanbul ignore next */
    cov_kpku4j0qe().f[9]++;
    cov_kpku4j0qe().s[29]++;
    this.isSaving = true;
    const country =
    /* istanbul ignore next */
    (cov_kpku4j0qe().s[30]++, this.createFromForm());

    /* istanbul ignore next */
    cov_kpku4j0qe().s[31]++;

    if (country.id !== undefined) {
      /* istanbul ignore next */
      cov_kpku4j0qe().b[4][0]++;
      cov_kpku4j0qe().s[32]++;
      this.subscribeToSaveResponse(this.countryService.update(country));
    } else {
      /* istanbul ignore next */
      cov_kpku4j0qe().b[4][1]++;
      cov_kpku4j0qe().s[33]++;
      this.subscribeToSaveResponse(this.countryService.create(country));
    }
  }

  createFromForm() {
    /* istanbul ignore next */
    cov_kpku4j0qe().f[10]++;
    cov_kpku4j0qe().s[34]++;
    return Object.assign(Object.assign({}, new country_model_1.Country()), {
      id: this.editForm.get(['id']).value,
      countryName: this.editForm.get(['countryName']).value,
      region: this.editForm.get(['region']).value
    });
  }

  subscribeToSaveResponse(result) {
    /* istanbul ignore next */
    cov_kpku4j0qe().f[11]++;
    cov_kpku4j0qe().s[35]++;
    result.subscribe(() => {
      /* istanbul ignore next */
      cov_kpku4j0qe().f[12]++;
      cov_kpku4j0qe().s[36]++;
      return this.onSaveSuccess();
    }, () => {
      /* istanbul ignore next */
      cov_kpku4j0qe().f[13]++;
      cov_kpku4j0qe().s[37]++;
      return this.onSaveError();
    });
  }

  onSaveSuccess() {
    /* istanbul ignore next */
    cov_kpku4j0qe().f[14]++;
    cov_kpku4j0qe().s[38]++;
    this.isSaving = false;

    /* istanbul ignore next */
    cov_kpku4j0qe().s[39]++;
    this.previousState();
  }

  onSaveError() {
    /* istanbul ignore next */
    cov_kpku4j0qe().f[15]++;
    cov_kpku4j0qe().s[40]++;
    this.isSaving = false;
  }

  trackById(index, item) {
    /* istanbul ignore next */
    cov_kpku4j0qe().f[16]++;
    cov_kpku4j0qe().s[41]++;
    return item.id;
  }

};

/* istanbul ignore next */
cov_kpku4j0qe().s[42]++;
CountryUpdateComponent = tslib_1.__decorate([core_1.Component({
  selector: 'jhi-country-update',
  template: require('./country-update.component.html')
}), tslib_1.__metadata("design:paramtypes", [country_service_1.CountryService, region_service_1.RegionService, router_1.ActivatedRoute, forms_1.FormBuilder])], CountryUpdateComponent);

/* istanbul ignore next */
cov_kpku4j0qe().s[43]++;
exports.CountryUpdateComponent = CountryUpdateComponent;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,