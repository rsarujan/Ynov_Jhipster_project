{"version":3,"sources":["/Users/sarujanrajaratnam/Desktop/Ynov/Ynov_TEST_Projet/src/main/webapp/app/entities/country/country-update.component.ts"],"names":[],"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","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { HttpResponse } from '@angular/common/http';\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { ActivatedRoute } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { ICountry, Country } from 'app/shared/model/country.model';\nimport { CountryService } from './country.service';\nimport { IRegion } from 'app/shared/model/region.model';\nimport { RegionService } from 'app/entities/region/region.service';\n\n@Component({\n  selector: 'jhi-country-update',\n  templateUrl: './country-update.component.html',\n})\nexport class CountryUpdateComponent implements OnInit {\n  isSaving = false;\n  regions: IRegion[] = [];\n\n  editForm = this.fb.group({\n    id: [],\n    countryName: [],\n    region: [],\n  });\n\n  constructor(\n    protected countryService: CountryService,\n    protected regionService: RegionService,\n    protected activatedRoute: ActivatedRoute,\n    private fb: FormBuilder\n  ) {}\n\n  ngOnInit(): void {\n    this.activatedRoute.data.subscribe(({ country }) => {\n      this.updateForm(country);\n\n      this.regionService\n        .query({ filter: 'country-is-null' })\n        .pipe(\n          map((res: HttpResponse<IRegion[]>) => {\n            return res.body || [];\n          })\n        )\n        .subscribe((resBody: IRegion[]) => {\n          if (!country.region || !country.region.id) {\n            this.regions = resBody;\n          } else {\n            this.regionService\n              .find(country.region.id)\n              .pipe(\n                map((subRes: HttpResponse<IRegion>) => {\n                  return subRes.body ? [subRes.body].concat(resBody) : resBody;\n                })\n              )\n              .subscribe((concatRes: IRegion[]) => (this.regions = concatRes));\n          }\n        });\n    });\n  }\n\n  updateForm(country: ICountry): void {\n    this.editForm.patchValue({\n      id: country.id,\n      countryName: country.countryName,\n      region: country.region,\n    });\n  }\n\n  previousState(): void {\n    window.history.back();\n  }\n\n  save(): void {\n    this.isSaving = true;\n    const country = this.createFromForm();\n    if (country.id !== undefined) {\n      this.subscribeToSaveResponse(this.countryService.update(country));\n    } else {\n      this.subscribeToSaveResponse(this.countryService.create(country));\n    }\n  }\n\n  private createFromForm(): ICountry {\n    return {\n      ...new Country(),\n      id: this.editForm.get(['id'])!.value,\n      countryName: this.editForm.get(['countryName'])!.value,\n      region: this.editForm.get(['region'])!.value,\n    };\n  }\n\n  protected subscribeToSaveResponse(result: Observable<HttpResponse<ICountry>>): void {\n    result.subscribe(\n      () => this.onSaveSuccess(),\n      () => this.onSaveError()\n    );\n  }\n\n  protected onSaveSuccess(): void {\n    this.isSaving = false;\n    this.previousState();\n  }\n\n  protected onSaveError(): void {\n    this.isSaving = false;\n  }\n\n  trackById(index: number, item: IRegion): any {\n    return item.id;\n  }\n}\n"]}