e346ab13a3060bd064feb294be1965cb
"use strict";

/* istanbul ignore next */
function cov_1i05866j43() {
  var path = "/Users/sarujanrajaratnam/Desktop/Ynov/Ynov_TEST_Projet/src/main/webapp/app/account/password-reset/finish/password-reset-finish.component.ts";
  var hash = "858d50339c73d362b17986f2e1a89b95163c0743";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/sarujanrajaratnam/Desktop/Ynov/Ynov_TEST_Projet/src/main/webapp/app/account/password-reset/finish/password-reset-finish.component.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 2,
          column: 62
        }
      },
      "1": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 3,
          column: 46
        }
      },
      "2": {
        start: {
          line: 4,
          column: 16
        },
        end: {
          line: 4,
          column: 32
        }
      },
      "3": {
        start: {
          line: 5,
          column: 15
        },
        end: {
          line: 5,
          column: 39
        }
      },
      "4": {
        start: {
          line: 6,
          column: 16
        },
        end: {
          line: 6,
          column: 41
        }
      },
      "5": {
        start: {
          line: 7,
          column: 17
        },
        end: {
          line: 7,
          column: 43
        }
      },
      "6": {
        start: {
          line: 8,
          column: 30
        },
        end: {
          line: 8,
          column: 75
        }
      },
      "7": {
        start: {
          line: 9,
          column: 40
        },
        end: {
          line: 9,
          column: 82
        }
      },
      "8": {
        start: {
          line: 10,
          column: 35
        },
        end: {
          line: 54,
          column: 1
        }
      },
      "9": {
        start: {
          line: 12,
          column: 8
        },
        end: {
          line: 12,
          column: 69
        }
      },
      "10": {
        start: {
          line: 13,
          column: 8
        },
        end: {
          line: 13,
          column: 51
        }
      },
      "11": {
        start: {
          line: 14,
          column: 8
        },
        end: {
          line: 14,
          column: 27
        }
      },
      "12": {
        start: {
          line: 15,
          column: 8
        },
        end: {
          line: 15,
          column: 21
        }
      },
      "13": {
        start: {
          line: 16,
          column: 8
        },
        end: {
          line: 16,
          column: 33
        }
      },
      "14": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 17,
          column: 32
        }
      },
      "15": {
        start: {
          line: 18,
          column: 8
        },
        end: {
          line: 18,
          column: 27
        }
      },
      "16": {
        start: {
          line: 19,
          column: 8
        },
        end: {
          line: 19,
          column: 29
        }
      },
      "17": {
        start: {
          line: 20,
          column: 8
        },
        end: {
          line: 20,
          column: 22
        }
      },
      "18": {
        start: {
          line: 21,
          column: 8
        },
        end: {
          line: 24,
          column: 11
        }
      },
      "19": {
        start: {
          line: 27,
          column: 8
        },
        end: {
          line: 32,
          column: 11
        }
      },
      "20": {
        start: {
          line: 28,
          column: 12
        },
        end: {
          line: 30,
          column: 13
        }
      },
      "21": {
        start: {
          line: 29,
          column: 16
        },
        end: {
          line: 29,
          column: 41
        }
      },
      "22": {
        start: {
          line: 31,
          column: 12
        },
        end: {
          line: 31,
          column: 36
        }
      },
      "23": {
        start: {
          line: 35,
          column: 8
        },
        end: {
          line: 37,
          column: 9
        }
      },
      "24": {
        start: {
          line: 36,
          column: 12
        },
        end: {
          line: 36,
          column: 51
        }
      },
      "25": {
        start: {
          line: 40,
          column: 8
        },
        end: {
          line: 40,
          column: 32
        }
      },
      "26": {
        start: {
          line: 41,
          column: 8
        },
        end: {
          line: 41,
          column: 27
        }
      },
      "27": {
        start: {
          line: 42,
          column: 28
        },
        end: {
          line: 42,
          column: 72
        }
      },
      "28": {
        start: {
          line: 43,
          column: 32
        },
        end: {
          line: 43,
          column: 80
        }
      },
      "29": {
        start: {
          line: 44,
          column: 8
        },
        end: {
          line: 49,
          column: 9
        }
      },
      "30": {
        start: {
          line: 45,
          column: 12
        },
        end: {
          line: 45,
          column: 35
        }
      },
      "31": {
        start: {
          line: 48,
          column: 12
        },
        end: {
          line: 48,
          column: 138
        }
      },
      "32": {
        start: {
          line: 48,
          column: 89
        },
        end: {
          line: 48,
          column: 108
        }
      },
      "33": {
        start: {
          line: 48,
          column: 118
        },
        end: {
          line: 48,
          column: 135
        }
      },
      "34": {
        start: {
          line: 52,
          column: 8
        },
        end: {
          line: 52,
          column: 38
        }
      },
      "35": {
        start: {
          line: 55,
          column: 0
        },
        end: {
          line: 58,
          column: 66
        }
      },
      "36": {
        start: {
          line: 59,
          column: 0
        },
        end: {
          line: 68,
          column: 33
        }
      },
      "37": {
        start: {
          line: 69,
          column: 0
        },
        end: {
          line: 69,
          column: 68
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 11,
            column: 4
          },
          end: {
            line: 11,
            column: 5
          }
        },
        loc: {
          start: {
            line: 11,
            column: 74
          },
          end: {
            line: 25,
            column: 5
          }
        },
        line: 11
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 26,
            column: 4
          },
          end: {
            line: 26,
            column: 5
          }
        },
        loc: {
          start: {
            line: 26,
            column: 15
          },
          end: {
            line: 33,
            column: 5
          }
        },
        line: 26
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 27,
            column: 41
          },
          end: {
            line: 27,
            column: 42
          }
        },
        loc: {
          start: {
            line: 27,
            column: 51
          },
          end: {
            line: 32,
            column: 9
          }
        },
        line: 27
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 34,
            column: 4
          },
          end: {
            line: 34,
            column: 5
          }
        },
        loc: {
          start: {
            line: 34,
            column: 22
          },
          end: {
            line: 38,
            column: 5
          }
        },
        line: 34
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 39,
            column: 4
          },
          end: {
            line: 39,
            column: 5
          }
        },
        loc: {
          start: {
            line: 39,
            column: 18
          },
          end: {
            line: 50,
            column: 5
          }
        },
        line: 39
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 48,
            column: 82
          },
          end: {
            line: 48,
            column: 83
          }
        },
        loc: {
          start: {
            line: 48,
            column: 89
          },
          end: {
            line: 48,
            column: 108
          }
        },
        line: 48
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 48,
            column: 111
          },
          end: {
            line: 48,
            column: 112
          }
        },
        loc: {
          start: {
            line: 48,
            column: 118
          },
          end: {
            line: 48,
            column: 135
          }
        },
        line: 48
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 51,
            column: 4
          },
          end: {
            line: 51,
            column: 5
          }
        },
        loc: {
          start: {
            line: 51,
            column: 12
          },
          end: {
            line: 53,
            column: 5
          }
        },
        line: 51
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 28,
            column: 12
          },
          end: {
            line: 30,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 28,
            column: 12
          },
          end: {
            line: 30,
            column: 13
          }
        }, {
          start: {
            line: 28,
            column: 12
          },
          end: {
            line: 30,
            column: 13
          }
        }],
        line: 28
      },
      "1": {
        loc: {
          start: {
            line: 35,
            column: 8
          },
          end: {
            line: 37,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 35,
            column: 8
          },
          end: {
            line: 37,
            column: 9
          }
        }, {
          start: {
            line: 35,
            column: 8
          },
          end: {
            line: 37,
            column: 9
          }
        }],
        line: 35
      },
      "2": {
        loc: {
          start: {
            line: 44,
            column: 8
          },
          end: {
            line: 49,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 44,
            column: 8
          },
          end: {
            line: 49,
            column: 9
          }
        }, {
          start: {
            line: 44,
            column: 8
          },
          end: {
            line: 49,
            column: 9
          }
        }],
        line: 44
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0]
    },
    inputSourceMap: {
      file: "/Users/sarujanrajaratnam/Desktop/Ynov/Ynov_TEST_Projet/src/main/webapp/app/account/password-reset/finish/password-reset-finish.component.ts",
      mappings: ";;;;AAAA,wCAAwF;AACxF,0CAAyD;AACzD,4CAAiD;AAEjD,4EAAuE;AACvE,mFAA6E;AAM7E,IAAa,4BAA4B,GAAzC,MAAa,4BAA4B;IAevC,YACU,0BAAsD,EACtD,iBAAoC,EACpC,KAAqB,EACrB,EAAe;QAHf,+BAA0B,GAA1B,0BAA0B,CAA4B;QACtD,sBAAiB,GAAjB,iBAAiB,CAAmB;QACpC,UAAK,GAAL,KAAK,CAAgB;QACrB,OAAE,GAAF,EAAE,CAAa;QAfzB,gBAAW,GAAG,KAAK,CAAC;QACpB,eAAU,GAAG,KAAK,CAAC;QACnB,UAAK,GAAG,KAAK,CAAC;QACd,YAAO,GAAG,KAAK,CAAC;QAChB,QAAG,GAAG,EAAE,CAAC;QAET,iBAAY,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YAC3B,WAAW,EAAE,CAAC,EAAE,EAAE,CAAC,kBAAU,CAAC,QAAQ,EAAE,kBAAU,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,kBAAU,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,CAAC;YAC3F,eAAe,EAAE,CAAC,EAAE,EAAE,CAAC,kBAAU,CAAC,QAAQ,EAAE,kBAAU,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,kBAAU,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,CAAC;SAChG,CAAC,CAAC;IAOA,CAAC;IAEJ,QAAQ;QACN,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE;YACxC,IAAI,MAAM,CAAC,KAAK,CAAC,EAAE;gBACjB,IAAI,CAAC,GAAG,GAAG,MAAM,CAAC,KAAK,CAAC,CAAC;aAC1B;YACD,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;QAC1B,CAAC,CAAC,CAAC;IACL,CAAC;IAED,eAAe;QACb,IAAI,IAAI,CAAC,WAAW,EAAE;YACpB,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC;SACxC;IACH,CAAC;IAED,WAAW;QACT,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;QACxB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QAEnB,MAAM,WAAW,GAAG,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC,aAAa,CAAC,CAAE,CAAC,KAAK,CAAC;QAClE,MAAM,eAAe,GAAG,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC,iBAAiB,CAAC,CAAE,CAAC,KAAK,CAAC;QAE1E,IAAI,WAAW,KAAK,eAAe,EAAE;YACnC,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;SACxB;aAAM;YACL,IAAI,CAAC,0BAA0B,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,WAAW,CAAC,CAAC,SAAS,CACnE,GAAG,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,EAC3B,GAAG,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,CAC1B,CAAC;SACH;IACH,CAAC;IAED,KAAK;QACH,IAAI,CAAC,iBAAiB,CAAC,IAAI,EAAE,CAAC;IAChC,CAAC;CACF,CAAA;AAvDC;IADC,gBAAS,CAAC,aAAa,EAAE,EAAE,MAAM,EAAE,KAAK,EAAE,CAAC;sCAC9B,iBAAU;iEAAC;AAFd,4BAA4B;IAJxC,gBAAS,CAAC;QACT,QAAQ,EAAE,2BAA2B;QACrC,kBAAa,wCAAwC,CAAA;KACtD,CAAC;6CAiBsC,0DAA0B;QACnC,uCAAiB;QAC7B,uBAAc;QACjB,mBAAW;GAnBd,4BAA4B,CAyDxC;AAzDY,oEAA4B",
      names: [],
      sources: ["/Users/sarujanrajaratnam/Desktop/Ynov/Ynov_TEST_Projet/src/main/webapp/app/account/password-reset/finish/password-reset-finish.component.ts"],
      sourcesContent: ["import { Component, OnInit, AfterViewInit, ElementRef, ViewChild } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { ActivatedRoute } from '@angular/router';\n\nimport { LoginModalService } from 'app/core/login/login-modal.service';\nimport { PasswordResetFinishService } from './password-reset-finish.service';\n\n@Component({\n  selector: 'jhi-password-reset-finish',\n  templateUrl: './password-reset-finish.component.html',\n})\nexport class PasswordResetFinishComponent implements OnInit, AfterViewInit {\n  @ViewChild('newPassword', { static: false })\n  newPassword?: ElementRef;\n\n  initialized = false;\n  doNotMatch = false;\n  error = false;\n  success = false;\n  key = '';\n\n  passwordForm = this.fb.group({\n    newPassword: ['', [Validators.required, Validators.minLength(4), Validators.maxLength(50)]],\n    confirmPassword: ['', [Validators.required, Validators.minLength(4), Validators.maxLength(50)]],\n  });\n\n  constructor(\n    private passwordResetFinishService: PasswordResetFinishService,\n    private loginModalService: LoginModalService,\n    private route: ActivatedRoute,\n    private fb: FormBuilder\n  ) {}\n\n  ngOnInit(): void {\n    this.route.queryParams.subscribe(params => {\n      if (params['key']) {\n        this.key = params['key'];\n      }\n      this.initialized = true;\n    });\n  }\n\n  ngAfterViewInit(): void {\n    if (this.newPassword) {\n      this.newPassword.nativeElement.focus();\n    }\n  }\n\n  finishReset(): void {\n    this.doNotMatch = false;\n    this.error = false;\n\n    const newPassword = this.passwordForm.get(['newPassword'])!.value;\n    const confirmPassword = this.passwordForm.get(['confirmPassword'])!.value;\n\n    if (newPassword !== confirmPassword) {\n      this.doNotMatch = true;\n    } else {\n      this.passwordResetFinishService.save(this.key, newPassword).subscribe(\n        () => (this.success = true),\n        () => (this.error = true)\n      );\n    }\n  }\n\n  login(): void {\n    this.loginModalService.open();\n  }\n}\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "858d50339c73d362b17986f2e1a89b95163c0743"
  };
  var coverage = global[gcv] || (global[gcv] = {});

  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }

  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1i05866j43 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}

cov_1i05866j43();
cov_1i05866j43().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});

/* istanbul ignore next */
cov_1i05866j43().s[1]++;
exports.PasswordResetFinishComponent = void 0;
const tslib_1 =
/* istanbul ignore next */
(cov_1i05866j43().s[2]++, require("tslib"));
const core_1 =
/* istanbul ignore next */
(cov_1i05866j43().s[3]++, require("@angular/core"));
const forms_1 =
/* istanbul ignore next */
(cov_1i05866j43().s[4]++, require("@angular/forms"));
const router_1 =
/* istanbul ignore next */
(cov_1i05866j43().s[5]++, require("@angular/router"));
const login_modal_service_1 =
/* istanbul ignore next */
(cov_1i05866j43().s[6]++, require("app/core/login/login-modal.service"));
const password_reset_finish_service_1 =
/* istanbul ignore next */
(cov_1i05866j43().s[7]++, require("./password-reset-finish.service"));

/* istanbul ignore next */
cov_1i05866j43().s[8]++;
let PasswordResetFinishComponent = class PasswordResetFinishComponent {
  constructor(passwordResetFinishService, loginModalService, route, fb) {
    /* istanbul ignore next */
    cov_1i05866j43().f[0]++;
    cov_1i05866j43().s[9]++;
    this.passwordResetFinishService = passwordResetFinishService;

    /* istanbul ignore next */
    cov_1i05866j43().s[10]++;
    this.loginModalService = loginModalService;

    /* istanbul ignore next */
    cov_1i05866j43().s[11]++;
    this.route = route;

    /* istanbul ignore next */
    cov_1i05866j43().s[12]++;
    this.fb = fb;

    /* istanbul ignore next */
    cov_1i05866j43().s[13]++;
    this.initialized = false;

    /* istanbul ignore next */
    cov_1i05866j43().s[14]++;
    this.doNotMatch = false;

    /* istanbul ignore next */
    cov_1i05866j43().s[15]++;
    this.error = false;

    /* istanbul ignore next */
    cov_1i05866j43().s[16]++;
    this.success = false;

    /* istanbul ignore next */
    cov_1i05866j43().s[17]++;
    this.key = '';

    /* istanbul ignore next */
    cov_1i05866j43().s[18]++;
    this.passwordForm = this.fb.group({
      newPassword: ['', [forms_1.Validators.required, forms_1.Validators.minLength(4), forms_1.Validators.maxLength(50)]],
      confirmPassword: ['', [forms_1.Validators.required, forms_1.Validators.minLength(4), forms_1.Validators.maxLength(50)]]
    });
  }

  ngOnInit() {
    /* istanbul ignore next */
    cov_1i05866j43().f[1]++;
    cov_1i05866j43().s[19]++;
    this.route.queryParams.subscribe(params => {
      /* istanbul ignore next */
      cov_1i05866j43().f[2]++;
      cov_1i05866j43().s[20]++;

      if (params['key']) {
        /* istanbul ignore next */
        cov_1i05866j43().b[0][0]++;
        cov_1i05866j43().s[21]++;
        this.key = params['key'];
      } else
      /* istanbul ignore next */
      {
        cov_1i05866j43().b[0][1]++;
      }

      cov_1i05866j43().s[22]++;
      this.initialized = true;
    });
  }

  ngAfterViewInit() {
    /* istanbul ignore next */
    cov_1i05866j43().f[3]++;
    cov_1i05866j43().s[23]++;

    if (this.newPassword) {
      /* istanbul ignore next */
      cov_1i05866j43().b[1][0]++;
      cov_1i05866j43().s[24]++;
      this.newPassword.nativeElement.focus();
    } else
    /* istanbul ignore next */
    {
      cov_1i05866j43().b[1][1]++;
    }
  }

  finishReset() {
    /* istanbul ignore next */
    cov_1i05866j43().f[4]++;
    cov_1i05866j43().s[25]++;
    this.doNotMatch = false;

    /* istanbul ignore next */
    cov_1i05866j43().s[26]++;
    this.error = false;
    const newPassword =
    /* istanbul ignore next */
    (cov_1i05866j43().s[27]++, this.passwordForm.get(['newPassword']).value);
    const confirmPassword =
    /* istanbul ignore next */
    (cov_1i05866j43().s[28]++, this.passwordForm.get(['confirmPassword']).value);

    /* istanbul ignore next */
    cov_1i05866j43().s[29]++;

    if (newPassword !== confirmPassword) {
      /* istanbul ignore next */
      cov_1i05866j43().b[2][0]++;
      cov_1i05866j43().s[30]++;
      this.doNotMatch = true;
    } else {
      /* istanbul ignore next */
      cov_1i05866j43().b[2][1]++;
      cov_1i05866j43().s[31]++;
      this.passwordResetFinishService.save(this.key, newPassword).subscribe(() => {
        /* istanbul ignore next */
        cov_1i05866j43().f[5]++;
        cov_1i05866j43().s[32]++;
        return this.success = true;
      }, () => {
        /* istanbul ignore next */
        cov_1i05866j43().f[6]++;
        cov_1i05866j43().s[33]++;
        return this.error = true;
      });
    }
  }

  login() {
    /* istanbul ignore next */
    cov_1i05866j43().f[7]++;
    cov_1i05866j43().s[34]++;
    this.loginModalService.open();
  }

};

/* istanbul ignore next */
cov_1i05866j43().s[35]++;

tslib_1.__decorate([core_1.ViewChild('newPassword', {
  static: false
}), tslib_1.__metadata("design:type", core_1.ElementRef)], PasswordResetFinishComponent.prototype, "newPassword", void 0);

/* istanbul ignore next */
cov_1i05866j43().s[36]++;
PasswordResetFinishComponent = tslib_1.__decorate([core_1.Component({
  selector: 'jhi-password-reset-finish',
  template: require('./password-reset-finish.component.html')
}), tslib_1.__metadata("design:paramtypes", [password_reset_finish_service_1.PasswordResetFinishService, login_modal_service_1.LoginModalService, router_1.ActivatedRoute, forms_1.FormBuilder])], PasswordResetFinishComponent);

/* istanbul ignore next */
cov_1i05866j43().s[37]++;
exports.PasswordResetFinishComponent = PasswordResetFinishComponent;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9zYXJ1amFucmFqYXJhdG5hbS9EZXNrdG9wL1lub3YvWW5vdl9URVNUX1Byb2pldC9zcmMvbWFpbi93ZWJhcHAvYXBwL2FjY291bnQvcGFzc3dvcmQtcmVzZXQvZmluaXNoL3Bhc3N3b3JkLXJlc2V0LWZpbmlzaC5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFlRTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFmRixNQUFBLE1BQUE7QUFBQTtBQUFBLDBCQUFBLE9BQUEsQ0FBQSxlQUFBLENBQUEsQ0FBQTtBQUNBLE1BQUEsT0FBQTtBQUFBO0FBQUEsMEJBQUEsT0FBQSxDQUFBLGdCQUFBLENBQUEsQ0FBQTtBQUNBLE1BQUEsUUFBQTtBQUFBO0FBQUEsMEJBQUEsT0FBQSxDQUFBLGlCQUFBLENBQUEsQ0FBQTtBQUVBLE1BQUEscUJBQUE7QUFBQTtBQUFBLDBCQUFBLE9BQUEsQ0FBQSxvQ0FBQSxDQUFBLENBQUE7QUFDQSxNQUFBLCtCQUFBO0FBQUE7QUFBQSwwQkFBQSxPQUFBLENBQUEsaUNBQUEsQ0FBQSxDQUFBOzs7O0FBTUEsSUFBYSw0QkFBNEIsR0FBekMsTUFBYSw0QkFBYixDQUF5QztBQWV2QyxFQUFBLFdBQUEsQ0FDVSwwQkFEVixFQUVVLGlCQUZWLEVBR1UsS0FIVixFQUlVLEVBSlYsRUFJeUI7QUFBQTtBQUFBO0FBQUE7QUFIZixTQUFBLDBCQUFBLEdBQUEsMEJBQUE7O0FBR2U7QUFBQTtBQUZmLFNBQUEsaUJBQUEsR0FBQSxpQkFBQTs7QUFFZTtBQUFBO0FBRGYsU0FBQSxLQUFBLEdBQUEsS0FBQTs7QUFDZTtBQUFBO0FBQWYsU0FBQSxFQUFBLEdBQUEsRUFBQTs7QUFBZTtBQUFBO0FBZnpCLFNBQUEsV0FBQSxHQUFjLEtBQWQ7O0FBZXlCO0FBQUE7QUFkekIsU0FBQSxVQUFBLEdBQWEsS0FBYjs7QUFjeUI7QUFBQTtBQWJ6QixTQUFBLEtBQUEsR0FBUSxLQUFSOztBQWF5QjtBQUFBO0FBWnpCLFNBQUEsT0FBQSxHQUFVLEtBQVY7O0FBWXlCO0FBQUE7QUFYekIsU0FBQSxHQUFBLEdBQU0sRUFBTjs7QUFXeUI7QUFBQTtBQVR6QixTQUFBLFlBQUEsR0FBZSxLQUFLLEVBQUwsQ0FBUSxLQUFSLENBQWM7QUFDM0IsTUFBQSxXQUFXLEVBQUUsQ0FBQyxFQUFELEVBQUssQ0FBQyxPQUFBLENBQUEsVUFBQSxDQUFXLFFBQVosRUFBc0IsT0FBQSxDQUFBLFVBQUEsQ0FBVyxTQUFYLENBQXFCLENBQXJCLENBQXRCLEVBQStDLE9BQUEsQ0FBQSxVQUFBLENBQVcsU0FBWCxDQUFxQixFQUFyQixDQUEvQyxDQUFMLENBRGM7QUFFM0IsTUFBQSxlQUFlLEVBQUUsQ0FBQyxFQUFELEVBQUssQ0FBQyxPQUFBLENBQUEsVUFBQSxDQUFXLFFBQVosRUFBc0IsT0FBQSxDQUFBLFVBQUEsQ0FBVyxTQUFYLENBQXFCLENBQXJCLENBQXRCLEVBQStDLE9BQUEsQ0FBQSxVQUFBLENBQVcsU0FBWCxDQUFxQixFQUFyQixDQUEvQyxDQUFMO0FBRlUsS0FBZCxDQUFmO0FBVUk7O0FBRUosRUFBQSxRQUFRLEdBQUE7QUFBQTtBQUFBO0FBQUE7QUFDTixTQUFLLEtBQUwsQ0FBVyxXQUFYLENBQXVCLFNBQXZCLENBQWlDLE1BQU0sSUFBRztBQUFBO0FBQUE7QUFBQTs7QUFDeEMsVUFBSSxNQUFNLENBQUMsS0FBRCxDQUFWLEVBQW1CO0FBQUE7QUFBQTtBQUFBO0FBQ2pCLGFBQUssR0FBTCxHQUFXLE1BQU0sQ0FBQyxLQUFELENBQWpCO0FBQ0QsT0FGRDtBQUFBO0FBQUE7QUFBQTtBQUFBOztBQUR3QztBQUl4QyxXQUFLLFdBQUwsR0FBbUIsSUFBbkI7QUFDRCxLQUxEO0FBTUQ7O0FBRUQsRUFBQSxlQUFlLEdBQUE7QUFBQTtBQUFBO0FBQUE7O0FBQ2IsUUFBSSxLQUFLLFdBQVQsRUFBc0I7QUFBQTtBQUFBO0FBQUE7QUFDcEIsV0FBSyxXQUFMLENBQWlCLGFBQWpCLENBQStCLEtBQS9CO0FBQ0QsS0FGRDtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBR0Q7O0FBRUQsRUFBQSxXQUFXLEdBQUE7QUFBQTtBQUFBO0FBQUE7QUFDVCxTQUFLLFVBQUwsR0FBa0IsS0FBbEI7O0FBRFM7QUFBQTtBQUVULFNBQUssS0FBTCxHQUFhLEtBQWI7QUFFQSxVQUFNLFdBQVc7QUFBQTtBQUFBLCtCQUFHLEtBQUssWUFBTCxDQUFrQixHQUFsQixDQUFzQixDQUFDLGFBQUQsQ0FBdEIsRUFBd0MsS0FBM0MsQ0FBakI7QUFDQSxVQUFNLGVBQWU7QUFBQTtBQUFBLCtCQUFHLEtBQUssWUFBTCxDQUFrQixHQUFsQixDQUFzQixDQUFDLGlCQUFELENBQXRCLEVBQTRDLEtBQS9DLENBQXJCOztBQUxTO0FBQUE7O0FBT1QsUUFBSSxXQUFXLEtBQUssZUFBcEIsRUFBcUM7QUFBQTtBQUFBO0FBQUE7QUFDbkMsV0FBSyxVQUFMLEdBQWtCLElBQWxCO0FBQ0QsS0FGRCxNQUVPO0FBQUE7QUFBQTtBQUFBO0FBQ0wsV0FBSywwQkFBTCxDQUFnQyxJQUFoQyxDQUFxQyxLQUFLLEdBQTFDLEVBQStDLFdBQS9DLEVBQTRELFNBQTVELENBQ0UsTUFBTztBQUFBO0FBQUE7QUFBQTtBQUFBLG9CQUFLLE9BQUwsR0FBZSxJQUFmO0FBQW1CLE9BRDVCLEVBRUUsTUFBTztBQUFBO0FBQUE7QUFBQTtBQUFBLG9CQUFLLEtBQUwsR0FBYSxJQUFiO0FBQWlCLE9BRjFCO0FBSUQ7QUFDRjs7QUFFRCxFQUFBLEtBQUssR0FBQTtBQUFBO0FBQUE7QUFBQTtBQUNILFNBQUssaUJBQUwsQ0FBdUIsSUFBdkI7QUFDRDs7QUF4RHNDLENBQXpDOzs7OztBQUVFLE9BQUEsQ0FBQSxVQUFBLENBQUEsQ0FEQyxNQUFBLENBQUEsU0FBQSxDQUFVLGFBQVYsRUFBeUI7QUFBRSxFQUFBLE1BQU0sRUFBRTtBQUFWLENBQXpCLENBQ0QsRSxrQ0FBYyxNQUFBLENBQUEsVSxDQUFkLENBQUEsRSxzQ0FBQSxFLGFBQUEsRSxLQUF5QixDQUF6Qjs7OztBQUZXLDRCQUE0QixHQUFBLE9BQUEsQ0FBQSxVQUFBLENBQUEsQ0FKeEMsTUFBQSxDQUFBLFNBQUEsQ0FBVTtBQUNULEVBQUEsUUFBUSxFQUFFLDJCQUREO0FBRVQsRUFBQSxRQUFBLEVBQUEsT0FBQSxDQUFhLHdDQUFiO0FBRlMsQ0FBVixDQUl3QyxFLHlDQWdCRCwrQkFBQSxDQUFBLDBCLEVBQ1QscUJBQUEsQ0FBQSxpQixFQUNaLFFBQUEsQ0FBQSxjLEVBQ0gsT0FBQSxDQUFBLFcsRUFuQnlCLENBQUEsRUFBNUIsNEJBQTRCLENBQTVCOzs7O0FBQUEsT0FBQSxDQUFBLDRCQUFBLEdBQUEsNEJBQUEiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIE9uSW5pdCwgQWZ0ZXJWaWV3SW5pdCwgRWxlbWVudFJlZiwgVmlld0NoaWxkIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBGb3JtQnVpbGRlciwgVmFsaWRhdG9ycyB9IGZyb20gJ0Bhbmd1bGFyL2Zvcm1zJztcbmltcG9ydCB7IEFjdGl2YXRlZFJvdXRlIH0gZnJvbSAnQGFuZ3VsYXIvcm91dGVyJztcblxuaW1wb3J0IHsgTG9naW5Nb2RhbFNlcnZpY2UgfSBmcm9tICdhcHAvY29yZS9sb2dpbi9sb2dpbi1tb2RhbC5zZXJ2aWNlJztcbmltcG9ydCB7IFBhc3N3b3JkUmVzZXRGaW5pc2hTZXJ2aWNlIH0gZnJvbSAnLi9wYXNzd29yZC1yZXNldC1maW5pc2guc2VydmljZSc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ2poaS1wYXNzd29yZC1yZXNldC1maW5pc2gnLFxuICB0ZW1wbGF0ZVVybDogJy4vcGFzc3dvcmQtcmVzZXQtZmluaXNoLmNvbXBvbmVudC5odG1sJyxcbn0pXG5leHBvcnQgY2xhc3MgUGFzc3dvcmRSZXNldEZpbmlzaENvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCwgQWZ0ZXJWaWV3SW5pdCB7XG4gIEBWaWV3Q2hpbGQoJ25ld1Bhc3N3b3JkJywgeyBzdGF0aWM6IGZhbHNlIH0pXG4gIG5ld1Bhc3N3b3JkPzogRWxlbWVudFJlZjtcblxuICBpbml0aWFsaXplZCA9IGZhbHNlO1xuICBkb05vdE1hdGNoID0gZmFsc2U7XG4gIGVycm9yID0gZmFsc2U7XG4gIHN1Y2Nlc3MgPSBmYWxzZTtcbiAga2V5ID0gJyc7XG5cbiAgcGFzc3dvcmRGb3JtID0gdGhpcy5mYi5ncm91cCh7XG4gICAgbmV3UGFzc3dvcmQ6IFsnJywgW1ZhbGlkYXRvcnMucmVxdWlyZWQsIFZhbGlkYXRvcnMubWluTGVuZ3RoKDQpLCBWYWxpZGF0b3JzLm1heExlbmd0aCg1MCldXSxcbiAgICBjb25maXJtUGFzc3dvcmQ6IFsnJywgW1ZhbGlkYXRvcnMucmVxdWlyZWQsIFZhbGlkYXRvcnMubWluTGVuZ3RoKDQpLCBWYWxpZGF0b3JzLm1heExlbmd0aCg1MCldXSxcbiAgfSk7XG5cbiAgY29uc3RydWN0b3IoXG4gICAgcHJpdmF0ZSBwYXNzd29yZFJlc2V0RmluaXNoU2VydmljZTogUGFzc3dvcmRSZXNldEZpbmlzaFNlcnZpY2UsXG4gICAgcHJpdmF0ZSBsb2dpbk1vZGFsU2VydmljZTogTG9naW5Nb2RhbFNlcnZpY2UsXG4gICAgcHJpdmF0ZSByb3V0ZTogQWN0aXZhdGVkUm91dGUsXG4gICAgcHJpdmF0ZSBmYjogRm9ybUJ1aWxkZXJcbiAgKSB7fVxuXG4gIG5nT25Jbml0KCk6IHZvaWQge1xuICAgIHRoaXMucm91dGUucXVlcnlQYXJhbXMuc3Vic2NyaWJlKHBhcmFtcyA9PiB7XG4gICAgICBpZiAocGFyYW1zWydrZXknXSkge1xuICAgICAgICB0aGlzLmtleSA9IHBhcmFtc1sna2V5J107XG4gICAgICB9XG4gICAgICB0aGlzLmluaXRpYWxpemVkID0gdHJ1ZTtcbiAgICB9KTtcbiAgfVxuXG4gIG5nQWZ0ZXJWaWV3SW5pdCgpOiB2b2lkIHtcbiAgICBpZiAodGhpcy5uZXdQYXNzd29yZCkge1xuICAgICAgdGhpcy5uZXdQYXNzd29yZC5uYXRpdmVFbGVtZW50LmZvY3VzKCk7XG4gICAgfVxuICB9XG5cbiAgZmluaXNoUmVzZXQoKTogdm9pZCB7XG4gICAgdGhpcy5kb05vdE1hdGNoID0gZmFsc2U7XG4gICAgdGhpcy5lcnJvciA9IGZhbHNlO1xuXG4gICAgY29uc3QgbmV3UGFzc3dvcmQgPSB0aGlzLnBhc3N3b3JkRm9ybS5nZXQoWyduZXdQYXNzd29yZCddKSEudmFsdWU7XG4gICAgY29uc3QgY29uZmlybVBhc3N3b3JkID0gdGhpcy5wYXNzd29yZEZvcm0uZ2V0KFsnY29uZmlybVBhc3N3b3JkJ10pIS52YWx1ZTtcblxuICAgIGlmIChuZXdQYXNzd29yZCAhPT0gY29uZmlybVBhc3N3b3JkKSB7XG4gICAgICB0aGlzLmRvTm90TWF0Y2ggPSB0cnVlO1xuICAgIH0gZWxzZSB7XG4gICAgICB0aGlzLnBhc3N3b3JkUmVzZXRGaW5pc2hTZXJ2aWNlLnNhdmUodGhpcy5rZXksIG5ld1Bhc3N3b3JkKS5zdWJzY3JpYmUoXG4gICAgICAgICgpID0+ICh0aGlzLnN1Y2Nlc3MgPSB0cnVlKSxcbiAgICAgICAgKCkgPT4gKHRoaXMuZXJyb3IgPSB0cnVlKVxuICAgICAgKTtcbiAgICB9XG4gIH1cblxuICBsb2dpbigpOiB2b2lkIHtcbiAgICB0aGlzLmxvZ2luTW9kYWxTZXJ2aWNlLm9wZW4oKTtcbiAgfVxufVxuIl19