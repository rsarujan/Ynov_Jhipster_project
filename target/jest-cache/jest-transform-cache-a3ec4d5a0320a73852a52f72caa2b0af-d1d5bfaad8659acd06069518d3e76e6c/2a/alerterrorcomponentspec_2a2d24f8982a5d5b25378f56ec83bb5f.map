{"file":"/Users/sarujanrajaratnam/Desktop/Ynov/Ynov_TEST_Projet/src/test/javascript/spec/app/shared/alert/alert-error.component.spec.ts","mappings":"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","names":[],"sources":["/Users/sarujanrajaratnam/Desktop/Ynov/Ynov_TEST_Projet/src/test/javascript/spec/app/shared/alert/alert-error.component.spec.ts"],"sourcesContent":["import { ComponentFixture, TestBed, async } from '@angular/core/testing';\nimport { HttpErrorResponse, HttpHeaders } from '@angular/common/http';\nimport { JhiAlertService, JhiEventManager } from 'ng-jhipster';\nimport { TranslateModule } from '@ngx-translate/core';\n\nimport { ProBiblioTestModule } from '../../../test.module';\nimport { AlertErrorComponent } from 'app/shared/alert/alert-error.component';\nimport { MockAlertService } from '../../../helpers/mock-alert.service';\n\ndescribe('Component Tests', () => {\n  describe('Alert Error Component', () => {\n    let comp: AlertErrorComponent;\n    let fixture: ComponentFixture<AlertErrorComponent>;\n    let eventManager: JhiEventManager;\n\n    beforeEach(async(() => {\n      TestBed.configureTestingModule({\n        imports: [ProBiblioTestModule, TranslateModule.forRoot()],\n        declarations: [AlertErrorComponent],\n        providers: [\n          JhiEventManager,\n          {\n            provide: JhiAlertService,\n            useClass: MockAlertService,\n          },\n        ],\n      })\n        .overrideTemplate(AlertErrorComponent, '')\n        .compileComponents();\n    }));\n\n    beforeEach(() => {\n      fixture = TestBed.createComponent(AlertErrorComponent);\n      comp = fixture.componentInstance;\n      eventManager = fixture.debugElement.injector.get(JhiEventManager);\n    });\n\n    describe('Error Handling', () => {\n      it('Should display an alert on status 0', () => {\n        // GIVEN\n        eventManager.broadcast({ name: 'proBiblioApp.httpError', content: { status: 0 } });\n        // THEN\n        expect(comp.alerts.length).toBe(1);\n        expect(comp.alerts[0].msg).toBe('error.server.not.reachable');\n      });\n\n      it('Should display an alert on status 404', () => {\n        // GIVEN\n        eventManager.broadcast({ name: 'proBiblioApp.httpError', content: { status: 404 } });\n        // THEN\n        expect(comp.alerts.length).toBe(1);\n        expect(comp.alerts[0].msg).toBe('error.url.not.found');\n      });\n\n      it('Should display an alert on generic error', () => {\n        // GIVEN\n        eventManager.broadcast({ name: 'proBiblioApp.httpError', content: { error: { message: 'Error Message' } } });\n        eventManager.broadcast({ name: 'proBiblioApp.httpError', content: { error: 'Second Error Message' } });\n        // THEN\n        expect(comp.alerts.length).toBe(2);\n        expect(comp.alerts[0].msg).toBe('Error Message');\n        expect(comp.alerts[1].msg).toBe('Second Error Message');\n      });\n\n      it('Should display an alert on status 400 for generic error', () => {\n        // GIVEN\n        const response = new HttpErrorResponse({\n          url: 'http://localhost:8080/api/foos',\n          headers: new HttpHeaders(),\n          status: 400,\n          statusText: 'Bad Request',\n          error: {\n            type: 'https://www.jhipster.tech/problem/constraint-violation',\n            title: 'Bad Request',\n            status: 400,\n            path: '/api/foos',\n            message: 'error.validation',\n          },\n        });\n        eventManager.broadcast({ name: 'proBiblioApp.httpError', content: response });\n        // THEN\n        expect(comp.alerts.length).toBe(1);\n        expect(comp.alerts[0].msg).toBe('error.validation');\n      });\n\n      it('Should display an alert on status 400 for generic error without message', () => {\n        // GIVEN\n        const response = new HttpErrorResponse({\n          url: 'http://localhost:8080/api/foos',\n          headers: new HttpHeaders(),\n          status: 400,\n          error: 'Bad Request',\n        });\n        eventManager.broadcast({ name: 'proBiblioApp.httpError', content: response });\n        // THEN\n        expect(comp.alerts.length).toBe(1);\n        expect(comp.alerts[0].msg).toBe('Bad Request');\n      });\n\n      it('Should display an alert on status 400 for invalid parameters', () => {\n        // GIVEN\n        const response = new HttpErrorResponse({\n          url: 'http://localhost:8080/api/foos',\n          headers: new HttpHeaders(),\n          status: 400,\n          statusText: 'Bad Request',\n          error: {\n            type: 'https://www.jhipster.tech/problem/constraint-violation',\n            title: 'Method argument not valid',\n            status: 400,\n            path: '/api/foos',\n            message: 'error.validation',\n            fieldErrors: [{ objectName: 'foo', field: 'minField', message: 'Min' }],\n          },\n        });\n        eventManager.broadcast({ name: 'proBiblioApp.httpError', content: response });\n        // THEN\n        expect(comp.alerts.length).toBe(1);\n        expect(comp.alerts[0].msg).toBe('error.Size');\n      });\n\n      it('Should display an alert on status 400 for error headers', () => {\n        // GIVEN\n        const response = new HttpErrorResponse({\n          url: 'http://localhost:8080/api/foos',\n          headers: new HttpHeaders().append('app-error', 'Error Message').append('app-params', 'foo'),\n          status: 400,\n          statusText: 'Bad Request',\n          error: {\n            status: 400,\n            message: 'error.validation',\n          },\n        });\n        eventManager.broadcast({ name: 'proBiblioApp.httpError', content: response });\n        // THEN\n        expect(comp.alerts.length).toBe(1);\n        expect(comp.alerts[0].msg).toBe('Error Message');\n      });\n    });\n  });\n});\n"],"version":3}