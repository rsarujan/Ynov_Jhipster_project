{"version":3,"sources":["/Users/sarujanrajaratnam/Desktop/Ynov/Ynov_TEST_Projet/src/main/webapp/app/layouts/profiles/profile.service.ts"],"names":[],"mappingsiBM;;;;;;;;;;;;;;;;;;;;AAjBN,MAAA,MAAA;AAAA;AAAA,yBAAA,OAAA,CAAA,eAAA,CAAA,CAAA;AACA,MAAA,MAAA;AAAA;AAAA,yBAAA,OAAA,CAAA,sBAAA,CAAA,CAAA;AACA,MAAA,WAAA;AAAA;AAAA,yBAAA,OAAA,CAAA,gBAAA,CAAA,CAAA;AAGA,MAAA,eAAA;AAAA;AAAA,yBAAA,OAAA,CAAA,mBAAA,CAAA,CAAA;;;;AAIA,IAAa,cAAc,GAA3B,MAAa,cAAb,CAA2B;AAIzB,EAAA,WAAA,CAAoB,IAApB,EAAoC;AAAA;AAAA;AAAA;AAAhB,SAAA,IAAA,GAAA,IAAA;;AAAgB;AAAA;AAH5B,SAAA,OAAA,GAAU,eAAA,CAAA,cAAA,GAAiB,iBAA3B;AAGgC;;AAExC,EAAA,cAAc,GAAA;AAAA;AAAA;AAAA;;AACZ,QAAI,KAAK,YAAT,EAAuB;AAAA;AAAA;AAAA;AACrB,aAAO,KAAK,YAAZ;AACD,KAFD;AAAA;AAAA;AAAA;AAAA;;AADY;AAKZ,SAAK,YAAL,GAAoB,KAAK,IAAL,CAAU,GAAV,CAA4B,KAAK,OAAjC,EAA0C,IAA1C,CAClB,WAAA,CAAA,GAAA,CAAK,QAAD,IAA2B;AAAA;AAAA;AAC7B,YAAM,WAAW;AAAA;AAAA,gCAAgB;AAC/B,QAAA,cAAc,EAAE,QAAQ,CAAC,cADM;AAE/B,QAAA,YAAY;AAAE;AAAA,oCAAA,QAAQ,CAAC,cAAT;AAAA;AAAA,oCAA2B,QAAQ,CAAC,cAAT,CAAwB,QAAxB,CAAiC,MAAjC,CAA3B,CAFiB;AAG/B,QAAA,cAAc;AAAE;AAAA,oCAAA,QAAQ,CAAC,cAAT;AAAA;AAAA,oCAA2B,QAAQ,CAAC,cAAT,CAAwB,QAAxB,CAAiC,SAAjC,CAA3B;AAHe,OAAhB,CAAjB;;AAD6B;AAAA;;AAM7B;AAAI;AAAA,kCAAA,QAAQ,CAAC,cAAT;AAAA;AAAA,kCAA2B,QAAQ,CAAC,4BAAD,CAAnC,CAAJ,EAAuE;AAAA;AAAA;AACrE,cAAM,uBAAuB;AAAA;AAAA,kCAAG,QAAQ,CAAC,4BAAD,CAAR,CAAuC,KAAvC,CAA6C,GAA7C,CAAH,CAA7B;AACA,cAAM,cAAc;AAAA;AAAA,kCAAG,uBAAuB,CAAC,MAAxB,CACrB,OAAO,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wCAAA,QAAQ,CAAC,cAAT;AAAA;AAAA,wCAA2B,QAAQ,CAAC,cAAT,CAAwB,QAAxB,CAAiC,OAAjC,CAA3B;AAAA;AAAoE,SAD1D,CAAH,CAApB;;AAFqE;AAAA;;AAKrE,YAAI,cAAc,CAAC,MAAf,GAAwB,CAA5B,EAA+B;AAAA;AAAA;AAAA;AAC7B,UAAA,WAAW,CAAC,SAAZ,GAAwB,cAAc,CAAC,CAAD,CAAtC;AACD,SAFD;AAAA;AAAA;AAAA;AAAA;AAGD,OARD;AAAA;AAAA;AAAA;AAAA;;AAN6B;AAe7B,aAAO,WAAP;AACD,KAhBD,CADkB,EAkBlB,WAAA,CAAA,WAAA,EAlBkB,CAApB;;AALY;AAAA;AAyBZ,WAAO,KAAK,YAAZ;AACD;;AAhCwB,CAA3B;;;;AAAa,cAAc,GAAA,OAAA,CAAA,UAAA,CAAA,CAD1B,MAAA,CAAA,UAAA,CAAW;AAAE,EAAA,UAAU,EAAE;AAAd,CAAX,CAC0B,E,yCAIC,MAAA,CAAA,U,EAJD,CAAA,EAAd,cAAc,CAAd;;;;AAAA,OAAA,CAAA,cAAA,GAAA,cAAA","sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { map, shareReplay } from 'rxjs/operators';\nimport { Observable } from 'rxjs';\n\nimport { SERVER_API_URL } from 'app/app.constants';\nimport { ProfileInfo, InfoResponse } from './profile-info.model';\n\n@Injectable({ providedIn: 'root' })\nexport class ProfileService {\n  private infoUrl = SERVER_API_URL + 'management/info';\n  private profileInfo$!: Observable<ProfileInfo>;\n\n  constructor(private http: HttpClient) {}\n\n  getProfileInfo(): Observable<ProfileInfo> {\n    if (this.profileInfo$) {\n      return this.profileInfo$;\n    }\n\n    this.profileInfo$ = this.http.get<InfoResponse>(this.infoUrl).pipe(\n      map((response: InfoResponse) => {\n        const profileInfo: ProfileInfo = {\n          activeProfiles: response.activeProfiles,\n          inProduction: response.activeProfiles && response.activeProfiles.includes('prod'),\n          swaggerEnabled: response.activeProfiles && response.activeProfiles.includes('swagger'),\n        };\n        if (response.activeProfiles && response['display-ribbon-on-profiles']) {\n          const displayRibbonOnProfiles = response['display-ribbon-on-profiles'].split(',');\n          const ribbonProfiles = displayRibbonOnProfiles.filter(\n            profile => response.activeProfiles && response.activeProfiles.includes(profile)\n          );\n          if (ribbonProfiles.length > 0) {\n            profileInfo.ribbonEnv = ribbonProfiles[0];\n          }\n        }\n        return profileInfo;\n      }),\n      shareReplay()\n    );\n    return this.profileInfo$;\n  }\n}\n"]}