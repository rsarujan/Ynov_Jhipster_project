{"version":3,"sources":["/Users/sarujanrajaratnam/Desktop/Ynov/Ynov_TEST_Projet/src/main/webapp/app/entities/region/region.service.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmBG;;;;;;;;;;;;;;;;;;;;AAnBH,MAAA,MAAA;AAAA;AAAA,yBAAA,OAAA,CAAA,eAAA,CAAA,CAAA;AACA,MAAA,MAAA;AAAA;AAAA,yBAAA,OAAA,CAAA,sBAAA,CAAA,CAAA;AAGA,MAAA,eAAA;AAAA;AAAA,yBAAA,OAAA,CAAA,mBAAA,CAAA,CAAA;AACA,MAAA,cAAA;AAAA;AAAA,yBAAA,OAAA,CAAA,8BAAA,CAAA,CAAA;;;;AAOA,IAAa,aAAa,GAA1B,MAAa,aAAb,CAA0B;AAGxB,EAAA,WAAA,CAAsB,IAAtB,EAAsC;AAAA;AAAA;AAAA;AAAhB,SAAA,IAAA,GAAA,IAAA;;AAAgB;AAAA;AAF/B,SAAA,WAAA,GAAc,eAAA,CAAA,cAAA,GAAiB,aAA/B;AAEmC;;AAE1C,EAAA,MAAM,CAAC,MAAD,EAAgB;AAAA;AAAA;AAAA;AACpB,WAAO,KAAK,IAAL,CAAU,IAAV,CAAwB,KAAK,WAA7B,EAA0C,MAA1C,EAAkD;AAAE,MAAA,OAAO,EAAE;AAAX,KAAlD,CAAP;AACD;;AAED,EAAA,MAAM,CAAC,MAAD,EAAgB;AAAA;AAAA;AAAA;AACpB,WAAO,KAAK,IAAL,CAAU,GAAV,CAAuB,KAAK,WAA5B,EAAyC,MAAzC,EAAiD;AAAE,MAAA,OAAO,EAAE;AAAX,KAAjD,CAAP;AACD;;AAED,EAAA,IAAI,CAAC,EAAD,EAAW;AAAA;AAAA;AAAA;AACb,WAAO,KAAK,IAAL,CAAU,GAAV,CAAuB,GAAG,KAAK,WAAW,IAAI,EAAE,EAAhD,EAAoD;AAAE,MAAA,OAAO,EAAE;AAAX,KAApD,CAAP;AACD;;AAED,EAAA,KAAK,CAAC,GAAD,EAAU;AAAA;AAAA;AACb,UAAM,OAAO;AAAA;AAAA,8BAAG,cAAA,CAAA,mBAAA,CAAoB,GAApB,CAAH,CAAb;;AADa;AAAA;AAEb,WAAO,KAAK,IAAL,CAAU,GAAV,CAAyB,KAAK,WAA9B,EAA2C;AAAE,MAAA,MAAM,EAAE,OAAV;AAAmB,MAAA,OAAO,EAAE;AAA5B,KAA3C,CAAP;AACD;;AAED,EAAA,MAAM,CAAC,EAAD,EAAW;AAAA;AAAA;AAAA;AACf,WAAO,KAAK,IAAL,CAAU,MAAV,CAAiB,GAAG,KAAK,WAAW,IAAI,EAAE,EAA1C,EAA8C;AAAE,MAAA,OAAO,EAAE;AAAX,KAA9C,CAAP;AACD;;AAxBuB,CAA1B;;;;AAAa,aAAa,GAAA,OAAA,CAAA,UAAA,CAAA,CADzB,MAAA,CAAA,UAAA,CAAW;AAAE,EAAA,UAAU,EAAE;AAAd,CAAX,CACyB,E,yCAGI,MAAA,CAAA,U,EAHJ,CAAA,EAAb,aAAa,CAAb;;;;AAAA,OAAA,CAAA,aAAA,GAAA,aAAA","sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient, HttpResponse } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\nimport { SERVER_API_URL } from 'app/app.constants';\nimport { createRequestOption } from 'app/shared/util/request-util';\nimport { IRegion } from 'app/shared/model/region.model';\n\ntype EntityResponseType = HttpResponse<IRegion>;\ntype EntityArrayResponseType = HttpResponse<IRegion[]>;\n\n@Injectable({ providedIn: 'root' })\nexport class RegionService {\n  public resourceUrl = SERVER_API_URL + 'api/regions';\n\n  constructor(protected http: HttpClient) {}\n\n  create(region: IRegion): Observable<EntityResponseType> {\n    return this.http.post<IRegion>(this.resourceUrl, region, { observe: 'response' });\n  }\n\n  update(region: IRegion): Observable<EntityResponseType> {\n    return this.http.put<IRegion>(this.resourceUrl, region, { observe: 'response' });\n  }\n\n  find(id: number): Observable<EntityResponseType> {\n    return this.http.get<IRegion>(`${this.resourceUrl}/${id}`, { observe: 'response' });\n  }\n\n  query(req?: any): Observable<EntityArrayResponseType> {\n    const options = createRequestOption(req);\n    return this.http.get<IRegion[]>(this.resourceUrl, { params: options, observe: 'response' });\n  }\n\n  delete(id: number): Observable<HttpResponse<{}>> {\n    return this.http.delete(`${this.resourceUrl}/${id}`, { observe: 'response' });\n  }\n}\n"]}