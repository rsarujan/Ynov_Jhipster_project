19d0f987a14f3985ae170cc86490890c
"use strict";

/* istanbul ignore next */
function cov_rjb09jhcx() {
  var path = "/Users/sarujanrajaratnam/Desktop/Ynov/Ynov_TEST_Projet/src/main/webapp/app/entities/job/job.service.ts";
  var hash = "6b5258779fc9f1ca6b2a7e14e83b7cebf93a3136";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/sarujanrajaratnam/Desktop/Ynov/Ynov_TEST_Projet/src/main/webapp/app/entities/job/job.service.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 2,
          column: 62
        }
      },
      "1": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 3,
          column: 28
        }
      },
      "2": {
        start: {
          line: 4,
          column: 16
        },
        end: {
          line: 4,
          column: 32
        }
      },
      "3": {
        start: {
          line: 5,
          column: 15
        },
        end: {
          line: 5,
          column: 39
        }
      },
      "4": {
        start: {
          line: 6,
          column: 15
        },
        end: {
          line: 6,
          column: 46
        }
      },
      "5": {
        start: {
          line: 7,
          column: 24
        },
        end: {
          line: 7,
          column: 52
        }
      },
      "6": {
        start: {
          line: 8,
          column: 23
        },
        end: {
          line: 8,
          column: 62
        }
      },
      "7": {
        start: {
          line: 9,
          column: 17
        },
        end: {
          line: 30,
          column: 1
        }
      },
      "8": {
        start: {
          line: 11,
          column: 8
        },
        end: {
          line: 11,
          column: 25
        }
      },
      "9": {
        start: {
          line: 12,
          column: 8
        },
        end: {
          line: 12,
          column: 71
        }
      },
      "10": {
        start: {
          line: 15,
          column: 8
        },
        end: {
          line: 15,
          column: 78
        }
      },
      "11": {
        start: {
          line: 18,
          column: 8
        },
        end: {
          line: 18,
          column: 77
        }
      },
      "12": {
        start: {
          line: 21,
          column: 8
        },
        end: {
          line: 21,
          column: 83
        }
      },
      "13": {
        start: {
          line: 24,
          column: 24
        },
        end: {
          line: 24,
          column: 63
        }
      },
      "14": {
        start: {
          line: 25,
          column: 8
        },
        end: {
          line: 25,
          column: 89
        }
      },
      "15": {
        start: {
          line: 28,
          column: 8
        },
        end: {
          line: 28,
          column: 86
        }
      },
      "16": {
        start: {
          line: 31,
          column: 0
        },
        end: {
          line: 34,
          column: 15
        }
      },
      "17": {
        start: {
          line: 35,
          column: 0
        },
        end: {
          line: 35,
          column: 32
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 10,
            column: 4
          },
          end: {
            line: 10,
            column: 5
          }
        },
        loc: {
          start: {
            line: 10,
            column: 22
          },
          end: {
            line: 13,
            column: 5
          }
        },
        line: 10
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 14,
            column: 4
          },
          end: {
            line: 14,
            column: 5
          }
        },
        loc: {
          start: {
            line: 14,
            column: 16
          },
          end: {
            line: 16,
            column: 5
          }
        },
        line: 14
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 17,
            column: 4
          },
          end: {
            line: 17,
            column: 5
          }
        },
        loc: {
          start: {
            line: 17,
            column: 16
          },
          end: {
            line: 19,
            column: 5
          }
        },
        line: 17
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 20,
            column: 4
          },
          end: {
            line: 20,
            column: 5
          }
        },
        loc: {
          start: {
            line: 20,
            column: 13
          },
          end: {
            line: 22,
            column: 5
          }
        },
        line: 20
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 23,
            column: 4
          },
          end: {
            line: 23,
            column: 5
          }
        },
        loc: {
          start: {
            line: 23,
            column: 15
          },
          end: {
            line: 26,
            column: 5
          }
        },
        line: 23
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 27,
            column: 4
          },
          end: {
            line: 27,
            column: 5
          }
        },
        loc: {
          start: {
            line: 27,
            column: 15
          },
          end: {
            line: 29,
            column: 5
          }
        },
        line: 27
      }
    },
    branchMap: {},
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0
    },
    b: {},
    inputSourceMap: {
      file: "/Users/sarujanrajaratnam/Desktop/Ynov/Ynov_TEST_Projet/src/main/webapp/app/entities/job/job.service.ts",
      mappings: ";;;;AAAA,wCAA2C;AAC3C,+CAAgE;AAGhE,qDAAmD;AACnD,+DAAmE;AAOnE,IAAa,UAAU,GAAvB,MAAa,UAAU;IAGrB,YAAsB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAF/B,gBAAW,GAAG,8BAAc,GAAG,UAAU,CAAC;IAER,CAAC;IAE1C,MAAM,CAAC,GAAS;QACd,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAO,IAAI,CAAC,WAAW,EAAE,GAAG,EAAE,EAAE,OAAO,EAAE,UAAU,EAAE,CAAC,CAAC;IAC9E,CAAC;IAED,MAAM,CAAC,GAAS;QACd,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAO,IAAI,CAAC,WAAW,EAAE,GAAG,EAAE,EAAE,OAAO,EAAE,UAAU,EAAE,CAAC,CAAC;IAC7E,CAAC;IAED,IAAI,CAAC,EAAU;QACb,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAO,GAAG,IAAI,CAAC,WAAW,IAAI,EAAE,EAAE,EAAE,EAAE,OAAO,EAAE,UAAU,EAAE,CAAC,CAAC;IACnF,CAAC;IAED,KAAK,CAAC,GAAS;QACb,MAAM,OAAO,GAAG,kCAAmB,CAAC,GAAG,CAAC,CAAC;QACzC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAS,IAAI,CAAC,WAAW,EAAE,EAAE,MAAM,EAAE,OAAO,EAAE,OAAO,EAAE,UAAU,EAAE,CAAC,CAAC;IAC3F,CAAC;IAED,MAAM,CAAC,EAAU;QACf,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC,WAAW,IAAI,EAAE,EAAE,EAAE,EAAE,OAAO,EAAE,UAAU,EAAE,CAAC,CAAC;IAChF,CAAC;CACF,CAAA;AAzBY,UAAU;IADtB,iBAAU,CAAC,EAAE,UAAU,EAAE,MAAM,EAAE,CAAC;6CAIL,iBAAU;GAH3B,UAAU,CAyBtB;AAzBY,gCAAU",
      names: [],
      sources: ["/Users/sarujanrajaratnam/Desktop/Ynov/Ynov_TEST_Projet/src/main/webapp/app/entities/job/job.service.ts"],
      sourcesContent: ["import { Injectable } from '@angular/core';\nimport { HttpClient, HttpResponse } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\nimport { SERVER_API_URL } from 'app/app.constants';\nimport { createRequestOption } from 'app/shared/util/request-util';\nimport { IJob } from 'app/shared/model/job.model';\n\ntype EntityResponseType = HttpResponse<IJob>;\ntype EntityArrayResponseType = HttpResponse<IJob[]>;\n\n@Injectable({ providedIn: 'root' })\nexport class JobService {\n  public resourceUrl = SERVER_API_URL + 'api/jobs';\n\n  constructor(protected http: HttpClient) {}\n\n  create(job: IJob): Observable<EntityResponseType> {\n    return this.http.post<IJob>(this.resourceUrl, job, { observe: 'response' });\n  }\n\n  update(job: IJob): Observable<EntityResponseType> {\n    return this.http.put<IJob>(this.resourceUrl, job, { observe: 'response' });\n  }\n\n  find(id: number): Observable<EntityResponseType> {\n    return this.http.get<IJob>(`${this.resourceUrl}/${id}`, { observe: 'response' });\n  }\n\n  query(req?: any): Observable<EntityArrayResponseType> {\n    const options = createRequestOption(req);\n    return this.http.get<IJob[]>(this.resourceUrl, { params: options, observe: 'response' });\n  }\n\n  delete(id: number): Observable<HttpResponse<{}>> {\n    return this.http.delete(`${this.resourceUrl}/${id}`, { observe: 'response' });\n  }\n}\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "6b5258779fc9f1ca6b2a7e14e83b7cebf93a3136"
  };
  var coverage = global[gcv] || (global[gcv] = {});

  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }

  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_rjb09jhcx = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}

cov_rjb09jhcx();
cov_rjb09jhcx().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});

/* istanbul ignore next */
cov_rjb09jhcx().s[1]++;
exports.JobService = void 0;
const tslib_1 =
/* istanbul ignore next */
(cov_rjb09jhcx().s[2]++, require("tslib"));
const core_1 =
/* istanbul ignore next */
(cov_rjb09jhcx().s[3]++, require("@angular/core"));
const http_1 =
/* istanbul ignore next */
(cov_rjb09jhcx().s[4]++, require("@angular/common/http"));
const app_constants_1 =
/* istanbul ignore next */
(cov_rjb09jhcx().s[5]++, require("app/app.constants"));
const request_util_1 =
/* istanbul ignore next */
(cov_rjb09jhcx().s[6]++, require("app/shared/util/request-util"));

/* istanbul ignore next */
cov_rjb09jhcx().s[7]++;
let JobService = class JobService {
  constructor(http) {
    /* istanbul ignore next */
    cov_rjb09jhcx().f[0]++;
    cov_rjb09jhcx().s[8]++;
    this.http = http;

    /* istanbul ignore next */
    cov_rjb09jhcx().s[9]++;
    this.resourceUrl = app_constants_1.SERVER_API_URL + 'api/jobs';
  }

  create(job) {
    /* istanbul ignore next */
    cov_rjb09jhcx().f[1]++;
    cov_rjb09jhcx().s[10]++;
    return this.http.post(this.resourceUrl, job, {
      observe: 'response'
    });
  }

  update(job) {
    /* istanbul ignore next */
    cov_rjb09jhcx().f[2]++;
    cov_rjb09jhcx().s[11]++;
    return this.http.put(this.resourceUrl, job, {
      observe: 'response'
    });
  }

  find(id) {
    /* istanbul ignore next */
    cov_rjb09jhcx().f[3]++;
    cov_rjb09jhcx().s[12]++;
    return this.http.get(`${this.resourceUrl}/${id}`, {
      observe: 'response'
    });
  }

  query(req) {
    /* istanbul ignore next */
    cov_rjb09jhcx().f[4]++;
    const options =
    /* istanbul ignore next */
    (cov_rjb09jhcx().s[13]++, request_util_1.createRequestOption(req));

    /* istanbul ignore next */
    cov_rjb09jhcx().s[14]++;
    return this.http.get(this.resourceUrl, {
      params: options,
      observe: 'response'
    });
  }

  delete(id) {
    /* istanbul ignore next */
    cov_rjb09jhcx().f[5]++;
    cov_rjb09jhcx().s[15]++;
    return this.http.delete(`${this.resourceUrl}/${id}`, {
      observe: 'response'
    });
  }

};

/* istanbul ignore next */
cov_rjb09jhcx().s[16]++;
JobService = tslib_1.__decorate([core_1.Injectable({
  providedIn: 'root'
}), tslib_1.__metadata("design:paramtypes", [http_1.HttpClient])], JobService);

/* istanbul ignore next */
cov_rjb09jhcx().s[17]++;
exports.JobService = JobService;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9zYXJ1amFucmFqYXJhdG5hbS9EZXNrdG9wL1lub3YvWW5vdl9URVNUX1Byb2pldC9zcmMvbWFpbi93ZWJhcHAvYXBwL2VudGl0aWVzL2pvYi9qb2Iuc2VydmljZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFtQkc7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBbkJILE1BQUEsTUFBQTtBQUFBO0FBQUEseUJBQUEsT0FBQSxDQUFBLGVBQUEsQ0FBQSxDQUFBO0FBQ0EsTUFBQSxNQUFBO0FBQUE7QUFBQSx5QkFBQSxPQUFBLENBQUEsc0JBQUEsQ0FBQSxDQUFBO0FBR0EsTUFBQSxlQUFBO0FBQUE7QUFBQSx5QkFBQSxPQUFBLENBQUEsbUJBQUEsQ0FBQSxDQUFBO0FBQ0EsTUFBQSxjQUFBO0FBQUE7QUFBQSx5QkFBQSxPQUFBLENBQUEsOEJBQUEsQ0FBQSxDQUFBOzs7O0FBT0EsSUFBYSxVQUFVLEdBQXZCLE1BQWEsVUFBYixDQUF1QjtBQUdyQixFQUFBLFdBQUEsQ0FBc0IsSUFBdEIsRUFBc0M7QUFBQTtBQUFBO0FBQUE7QUFBaEIsU0FBQSxJQUFBLEdBQUEsSUFBQTs7QUFBZ0I7QUFBQTtBQUYvQixTQUFBLFdBQUEsR0FBYyxlQUFBLENBQUEsY0FBQSxHQUFpQixVQUEvQjtBQUVtQzs7QUFFMUMsRUFBQSxNQUFNLENBQUMsR0FBRCxFQUFVO0FBQUE7QUFBQTtBQUFBO0FBQ2QsV0FBTyxLQUFLLElBQUwsQ0FBVSxJQUFWLENBQXFCLEtBQUssV0FBMUIsRUFBdUMsR0FBdkMsRUFBNEM7QUFBRSxNQUFBLE9BQU8sRUFBRTtBQUFYLEtBQTVDLENBQVA7QUFDRDs7QUFFRCxFQUFBLE1BQU0sQ0FBQyxHQUFELEVBQVU7QUFBQTtBQUFBO0FBQUE7QUFDZCxXQUFPLEtBQUssSUFBTCxDQUFVLEdBQVYsQ0FBb0IsS0FBSyxXQUF6QixFQUFzQyxHQUF0QyxFQUEyQztBQUFFLE1BQUEsT0FBTyxFQUFFO0FBQVgsS0FBM0MsQ0FBUDtBQUNEOztBQUVELEVBQUEsSUFBSSxDQUFDLEVBQUQsRUFBVztBQUFBO0FBQUE7QUFBQTtBQUNiLFdBQU8sS0FBSyxJQUFMLENBQVUsR0FBVixDQUFvQixHQUFHLEtBQUssV0FBVyxJQUFJLEVBQUUsRUFBN0MsRUFBaUQ7QUFBRSxNQUFBLE9BQU8sRUFBRTtBQUFYLEtBQWpELENBQVA7QUFDRDs7QUFFRCxFQUFBLEtBQUssQ0FBQyxHQUFELEVBQVU7QUFBQTtBQUFBO0FBQ2IsVUFBTSxPQUFPO0FBQUE7QUFBQSw4QkFBRyxjQUFBLENBQUEsbUJBQUEsQ0FBb0IsR0FBcEIsQ0FBSCxDQUFiOztBQURhO0FBQUE7QUFFYixXQUFPLEtBQUssSUFBTCxDQUFVLEdBQVYsQ0FBc0IsS0FBSyxXQUEzQixFQUF3QztBQUFFLE1BQUEsTUFBTSxFQUFFLE9BQVY7QUFBbUIsTUFBQSxPQUFPLEVBQUU7QUFBNUIsS0FBeEMsQ0FBUDtBQUNEOztBQUVELEVBQUEsTUFBTSxDQUFDLEVBQUQsRUFBVztBQUFBO0FBQUE7QUFBQTtBQUNmLFdBQU8sS0FBSyxJQUFMLENBQVUsTUFBVixDQUFpQixHQUFHLEtBQUssV0FBVyxJQUFJLEVBQUUsRUFBMUMsRUFBOEM7QUFBRSxNQUFBLE9BQU8sRUFBRTtBQUFYLEtBQTlDLENBQVA7QUFDRDs7QUF4Qm9CLENBQXZCOzs7O0FBQWEsVUFBVSxHQUFBLE9BQUEsQ0FBQSxVQUFBLENBQUEsQ0FEdEIsTUFBQSxDQUFBLFVBQUEsQ0FBVztBQUFFLEVBQUEsVUFBVSxFQUFFO0FBQWQsQ0FBWCxDQUNzQixFLHlDQUdPLE1BQUEsQ0FBQSxVLEVBSFAsQ0FBQSxFQUFWLFVBQVUsQ0FBVjs7OztBQUFBLE9BQUEsQ0FBQSxVQUFBLEdBQUEsVUFBQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEluamVjdGFibGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IEh0dHBDbGllbnQsIEh0dHBSZXNwb25zZSB9IGZyb20gJ0Bhbmd1bGFyL2NvbW1vbi9odHRwJztcbmltcG9ydCB7IE9ic2VydmFibGUgfSBmcm9tICdyeGpzJztcblxuaW1wb3J0IHsgU0VSVkVSX0FQSV9VUkwgfSBmcm9tICdhcHAvYXBwLmNvbnN0YW50cyc7XG5pbXBvcnQgeyBjcmVhdGVSZXF1ZXN0T3B0aW9uIH0gZnJvbSAnYXBwL3NoYXJlZC91dGlsL3JlcXVlc3QtdXRpbCc7XG5pbXBvcnQgeyBJSm9iIH0gZnJvbSAnYXBwL3NoYXJlZC9tb2RlbC9qb2IubW9kZWwnO1xuXG50eXBlIEVudGl0eVJlc3BvbnNlVHlwZSA9IEh0dHBSZXNwb25zZTxJSm9iPjtcbnR5cGUgRW50aXR5QXJyYXlSZXNwb25zZVR5cGUgPSBIdHRwUmVzcG9uc2U8SUpvYltdPjtcblxuQEluamVjdGFibGUoeyBwcm92aWRlZEluOiAncm9vdCcgfSlcbmV4cG9ydCBjbGFzcyBKb2JTZXJ2aWNlIHtcbiAgcHVibGljIHJlc291cmNlVXJsID0gU0VSVkVSX0FQSV9VUkwgKyAnYXBpL2pvYnMnO1xuXG4gIGNvbnN0cnVjdG9yKHByb3RlY3RlZCBodHRwOiBIdHRwQ2xpZW50KSB7fVxuXG4gIGNyZWF0ZShqb2I6IElKb2IpOiBPYnNlcnZhYmxlPEVudGl0eVJlc3BvbnNlVHlwZT4ge1xuICAgIHJldHVybiB0aGlzLmh0dHAucG9zdDxJSm9iPih0aGlzLnJlc291cmNlVXJsLCBqb2IsIHsgb2JzZXJ2ZTogJ3Jlc3BvbnNlJyB9KTtcbiAgfVxuXG4gIHVwZGF0ZShqb2I6IElKb2IpOiBPYnNlcnZhYmxlPEVudGl0eVJlc3BvbnNlVHlwZT4ge1xuICAgIHJldHVybiB0aGlzLmh0dHAucHV0PElKb2I+KHRoaXMucmVzb3VyY2VVcmwsIGpvYiwgeyBvYnNlcnZlOiAncmVzcG9uc2UnIH0pO1xuICB9XG5cbiAgZmluZChpZDogbnVtYmVyKTogT2JzZXJ2YWJsZTxFbnRpdHlSZXNwb25zZVR5cGU+IHtcbiAgICByZXR1cm4gdGhpcy5odHRwLmdldDxJSm9iPihgJHt0aGlzLnJlc291cmNlVXJsfS8ke2lkfWAsIHsgb2JzZXJ2ZTogJ3Jlc3BvbnNlJyB9KTtcbiAgfVxuXG4gIHF1ZXJ5KHJlcT86IGFueSk6IE9ic2VydmFibGU8RW50aXR5QXJyYXlSZXNwb25zZVR5cGU+IHtcbiAgICBjb25zdCBvcHRpb25zID0gY3JlYXRlUmVxdWVzdE9wdGlvbihyZXEpO1xuICAgIHJldHVybiB0aGlzLmh0dHAuZ2V0PElKb2JbXT4odGhpcy5yZXNvdXJjZVVybCwgeyBwYXJhbXM6IG9wdGlvbnMsIG9ic2VydmU6ICdyZXNwb25zZScgfSk7XG4gIH1cblxuICBkZWxldGUoaWQ6IG51bWJlcik6IE9ic2VydmFibGU8SHR0cFJlc3BvbnNlPHt9Pj4ge1xuICAgIHJldHVybiB0aGlzLmh0dHAuZGVsZXRlKGAke3RoaXMucmVzb3VyY2VVcmx9LyR7aWR9YCwgeyBvYnNlcnZlOiAncmVzcG9uc2UnIH0pO1xuICB9XG59XG4iXX0=