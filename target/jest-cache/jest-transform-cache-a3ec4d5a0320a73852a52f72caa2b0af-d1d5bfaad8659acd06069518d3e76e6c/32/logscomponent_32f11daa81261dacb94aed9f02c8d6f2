c39875e14e63b100ea9a25ecee35a373
"use strict";

/* istanbul ignore next */
function cov_28ng4bzjl0() {
  var path = "/Users/sarujanrajaratnam/Desktop/Ynov/Ynov_TEST_Projet/src/main/webapp/app/admin/logs/logs.component.ts";
  var hash = "e8ac61f0a6045cccc1d5f22c2011203a006317c0";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/sarujanrajaratnam/Desktop/Ynov/Ynov_TEST_Projet/src/main/webapp/app/admin/logs/logs.component.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 2,
          column: 62
        }
      },
      "1": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 3,
          column: 31
        }
      },
      "2": {
        start: {
          line: 4,
          column: 16
        },
        end: {
          line: 4,
          column: 32
        }
      },
      "3": {
        start: {
          line: 5,
          column: 15
        },
        end: {
          line: 5,
          column: 39
        }
      },
      "4": {
        start: {
          line: 6,
          column: 20
        },
        end: {
          line: 6,
          column: 42
        }
      },
      "5": {
        start: {
          line: 7,
          column: 23
        },
        end: {
          line: 7,
          column: 48
        }
      },
      "6": {
        start: {
          line: 8,
          column: 20
        },
        end: {
          line: 26,
          column: 1
        }
      },
      "7": {
        start: {
          line: 10,
          column: 8
        },
        end: {
          line: 10,
          column: 39
        }
      },
      "8": {
        start: {
          line: 11,
          column: 8
        },
        end: {
          line: 11,
          column: 25
        }
      },
      "9": {
        start: {
          line: 12,
          column: 8
        },
        end: {
          line: 12,
          column: 32
        }
      },
      "10": {
        start: {
          line: 13,
          column: 8
        },
        end: {
          line: 13,
          column: 29
        }
      },
      "11": {
        start: {
          line: 16,
          column: 8
        },
        end: {
          line: 16,
          column: 37
        }
      },
      "12": {
        start: {
          line: 19,
          column: 8
        },
        end: {
          line: 19,
          column: 96
        }
      },
      "13": {
        start: {
          line: 19,
          column: 66
        },
        end: {
          line: 19,
          column: 94
        }
      },
      "14": {
        start: {
          line: 22,
          column: 8
        },
        end: {
          line: 24,
          column: 162
        }
      },
      "15": {
        start: {
          line: 24,
          column: 38
        },
        end: {
          line: 24,
          column: 159
        }
      },
      "16": {
        start: {
          line: 24,
          column: 102
        },
        end: {
          line: 24,
          column: 158
        }
      },
      "17": {
        start: {
          line: 27,
          column: 0
        },
        end: {
          line: 33,
          column: 18
        }
      },
      "18": {
        start: {
          line: 34,
          column: 0
        },
        end: {
          line: 34,
          column: 38
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 9,
            column: 4
          },
          end: {
            line: 9,
            column: 5
          }
        },
        loc: {
          start: {
            line: 9,
            column: 29
          },
          end: {
            line: 14,
            column: 5
          }
        },
        line: 9
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 15,
            column: 4
          },
          end: {
            line: 15,
            column: 5
          }
        },
        loc: {
          start: {
            line: 15,
            column: 15
          },
          end: {
            line: 17,
            column: 5
          }
        },
        line: 15
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 18,
            column: 4
          },
          end: {
            line: 18,
            column: 5
          }
        },
        loc: {
          start: {
            line: 18,
            column: 29
          },
          end: {
            line: 20,
            column: 5
          }
        },
        line: 18
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 19,
            column: 60
          },
          end: {
            line: 19,
            column: 61
          }
        },
        loc: {
          start: {
            line: 19,
            column: 66
          },
          end: {
            line: 19,
            column: 94
          }
        },
        line: 19
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 21,
            column: 4
          },
          end: {
            line: 21,
            column: 5
          }
        },
        loc: {
          start: {
            line: 21,
            column: 28
          },
          end: {
            line: 25,
            column: 5
          }
        },
        line: 21
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 24,
            column: 23
          },
          end: {
            line: 24,
            column: 24
          }
        },
        loc: {
          start: {
            line: 24,
            column: 38
          },
          end: {
            line: 24,
            column: 159
          }
        },
        line: 24
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 24,
            column: 90
          },
          end: {
            line: 24,
            column: 91
          }
        },
        loc: {
          start: {
            line: 24,
            column: 102
          },
          end: {
            line: 24,
            column: 158
          }
        },
        line: 24
      }
    },
    branchMap: {},
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0
    },
    b: {},
    inputSourceMap: {
      file: "/Users/sarujanrajaratnam/Desktop/Ynov/Ynov_TEST_Projet/src/main/webapp/app/admin/logs/logs.component.ts",
      mappings: ";;;;AAAA,wCAAkD;AAElD,2CAAkE;AAClE,iDAA6C;AAM7C,IAAa,aAAa,GAA1B,MAAa,aAAa;IAMxB,YAAoB,WAAwB;QAAxB,gBAAW,GAAX,WAAW,CAAa;QAJ5C,WAAM,GAAG,EAAE,CAAC;QACZ,cAAS,GAAG,MAAM,CAAC;QACnB,YAAO,GAAG,KAAK,CAAC;IAE+B,CAAC;IAEhD,QAAQ;QACN,IAAI,CAAC,qBAAqB,EAAE,CAAC;IAC/B,CAAC;IAED,WAAW,CAAC,IAAY,EAAE,KAAY;QACpC,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC,SAAS,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,qBAAqB,EAAE,CAAC,CAAC;IAC1F,CAAC;IAEO,qBAAqB;QAC3B,IAAI,CAAC,WAAW;aACb,OAAO,EAAE;aACT,SAAS,CACR,CAAC,QAAyB,EAAE,EAAE,CAC5B,CAAC,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC,OAAO,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC,MAAwB,EAAE,EAAE,CAAC,IAAI,eAAG,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC,CACpI,CAAC;IACN,CAAC;CACF,CAAA;AAxBY,aAAa;IAJzB,gBAAS,CAAC;QACT,QAAQ,EAAE,UAAU;QACpB,kBAAa,uBAAuB,CAAA;KACrC,CAAC;6CAOiC,0BAAW;GANjC,aAAa,CAwBzB;AAxBY,sCAAa",
      names: [],
      sources: ["/Users/sarujanrajaratnam/Desktop/Ynov/Ynov_TEST_Projet/src/main/webapp/app/admin/logs/logs.component.ts"],
      sourcesContent: ["import { Component, OnInit } from '@angular/core';\n\nimport { Log, LoggersResponse, Logger, Level } from './log.model';\nimport { LogsService } from './logs.service';\n\n@Component({\n  selector: 'jhi-logs',\n  templateUrl: './logs.component.html',\n})\nexport class LogsComponent implements OnInit {\n  loggers?: Log[];\n  filter = '';\n  orderProp = 'name';\n  reverse = false;\n\n  constructor(private logsService: LogsService) {}\n\n  ngOnInit(): void {\n    this.findAndExtractLoggers();\n  }\n\n  changeLevel(name: string, level: Level): void {\n    this.logsService.changeLevel(name, level).subscribe(() => this.findAndExtractLoggers());\n  }\n\n  private findAndExtractLoggers(): void {\n    this.logsService\n      .findAll()\n      .subscribe(\n        (response: LoggersResponse) =>\n          (this.loggers = Object.entries(response.loggers).map((logger: [string, Logger]) => new Log(logger[0], logger[1].effectiveLevel)))\n      );\n  }\n}\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "e8ac61f0a6045cccc1d5f22c2011203a006317c0"
  };
  var coverage = global[gcv] || (global[gcv] = {});

  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }

  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_28ng4bzjl0 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}

cov_28ng4bzjl0();
cov_28ng4bzjl0().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});

/* istanbul ignore next */
cov_28ng4bzjl0().s[1]++;
exports.LogsComponent = void 0;
const tslib_1 =
/* istanbul ignore next */
(cov_28ng4bzjl0().s[2]++, require("tslib"));
const core_1 =
/* istanbul ignore next */
(cov_28ng4bzjl0().s[3]++, require("@angular/core"));
const log_model_1 =
/* istanbul ignore next */
(cov_28ng4bzjl0().s[4]++, require("./log.model"));
const logs_service_1 =
/* istanbul ignore next */
(cov_28ng4bzjl0().s[5]++, require("./logs.service"));

/* istanbul ignore next */
cov_28ng4bzjl0().s[6]++;
let LogsComponent = class LogsComponent {
  constructor(logsService) {
    /* istanbul ignore next */
    cov_28ng4bzjl0().f[0]++;
    cov_28ng4bzjl0().s[7]++;
    this.logsService = logsService;

    /* istanbul ignore next */
    cov_28ng4bzjl0().s[8]++;
    this.filter = '';

    /* istanbul ignore next */
    cov_28ng4bzjl0().s[9]++;
    this.orderProp = 'name';

    /* istanbul ignore next */
    cov_28ng4bzjl0().s[10]++;
    this.reverse = false;
  }

  ngOnInit() {
    /* istanbul ignore next */
    cov_28ng4bzjl0().f[1]++;
    cov_28ng4bzjl0().s[11]++;
    this.findAndExtractLoggers();
  }

  changeLevel(name, level) {
    /* istanbul ignore next */
    cov_28ng4bzjl0().f[2]++;
    cov_28ng4bzjl0().s[12]++;
    this.logsService.changeLevel(name, level).subscribe(() => {
      /* istanbul ignore next */
      cov_28ng4bzjl0().f[3]++;
      cov_28ng4bzjl0().s[13]++;
      return this.findAndExtractLoggers();
    });
  }

  findAndExtractLoggers() {
    /* istanbul ignore next */
    cov_28ng4bzjl0().f[4]++;
    cov_28ng4bzjl0().s[14]++;
    this.logsService.findAll().subscribe(response => {
      /* istanbul ignore next */
      cov_28ng4bzjl0().f[5]++;
      cov_28ng4bzjl0().s[15]++;
      return this.loggers = Object.entries(response.loggers).map(logger => {
        /* istanbul ignore next */
        cov_28ng4bzjl0().f[6]++;
        cov_28ng4bzjl0().s[16]++;
        return new log_model_1.Log(logger[0], logger[1].effectiveLevel);
      });
    });
  }

};

/* istanbul ignore next */
cov_28ng4bzjl0().s[17]++;
LogsComponent = tslib_1.__decorate([core_1.Component({
  selector: 'jhi-logs',
  template: require('./logs.component.html')
}), tslib_1.__metadata("design:paramtypes", [logs_service_1.LogsService])], LogsComponent);

/* istanbul ignore next */
cov_28ng4bzjl0().s[18]++;
exports.LogsComponent = LogsComponent;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9zYXJ1amFucmFqYXJhdG5hbS9EZXNrdG9wL1lub3YvWW5vdl9URVNUX1Byb2pldC9zcmMvbWFpbi93ZWJhcHAvYXBwL2FkbWluL2xvZ3MvbG9ncy5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBa0JROzs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQWxCUixNQUFBLE1BQUE7QUFBQTtBQUFBLDBCQUFBLE9BQUEsQ0FBQSxlQUFBLENBQUEsQ0FBQTtBQUVBLE1BQUEsV0FBQTtBQUFBO0FBQUEsMEJBQUEsT0FBQSxDQUFBLGFBQUEsQ0FBQSxDQUFBO0FBQ0EsTUFBQSxjQUFBO0FBQUE7QUFBQSwwQkFBQSxPQUFBLENBQUEsZ0JBQUEsQ0FBQSxDQUFBOzs7O0FBTUEsSUFBYSxhQUFhLEdBQTFCLE1BQWEsYUFBYixDQUEwQjtBQU14QixFQUFBLFdBQUEsQ0FBb0IsV0FBcEIsRUFBNEM7QUFBQTtBQUFBO0FBQUE7QUFBeEIsU0FBQSxXQUFBLEdBQUEsV0FBQTs7QUFBd0I7QUFBQTtBQUo1QyxTQUFBLE1BQUEsR0FBUyxFQUFUOztBQUk0QztBQUFBO0FBSDVDLFNBQUEsU0FBQSxHQUFZLE1BQVo7O0FBRzRDO0FBQUE7QUFGNUMsU0FBQSxPQUFBLEdBQVUsS0FBVjtBQUVnRDs7QUFFaEQsRUFBQSxRQUFRLEdBQUE7QUFBQTtBQUFBO0FBQUE7QUFDTixTQUFLLHFCQUFMO0FBQ0Q7O0FBRUQsRUFBQSxXQUFXLENBQUMsSUFBRCxFQUFlLEtBQWYsRUFBMkI7QUFBQTtBQUFBO0FBQUE7QUFDcEMsU0FBSyxXQUFMLENBQWlCLFdBQWpCLENBQTZCLElBQTdCLEVBQW1DLEtBQW5DLEVBQTBDLFNBQTFDLENBQW9ELE1BQU07QUFBQTtBQUFBO0FBQUE7QUFBQSxrQkFBSyxxQkFBTDtBQUE0QixLQUF0RjtBQUNEOztBQUVPLEVBQUEscUJBQXFCLEdBQUE7QUFBQTtBQUFBO0FBQUE7QUFDM0IsU0FBSyxXQUFMLENBQ0csT0FESCxHQUVHLFNBRkgsQ0FHSyxRQUFELElBQ0c7QUFBQTtBQUFBO0FBQUE7QUFBQSxrQkFBSyxPQUFMLEdBQWUsTUFBTSxDQUFDLE9BQVAsQ0FBZSxRQUFRLENBQUMsT0FBeEIsRUFBaUMsR0FBakMsQ0FBc0MsTUFBRCxJQUE4QjtBQUFBO0FBQUE7QUFBQTtBQUFBLG1CQUFJLFdBQUEsQ0FBQSxHQUFKLENBQVEsTUFBTSxDQUFDLENBQUQsQ0FBZCxFQUFtQixNQUFNLENBQUMsQ0FBRCxDQUFOLENBQVUsY0FBN0I7QUFBNEMsT0FBL0csQ0FBZjtBQUErSCxLQUp0STtBQU1EOztBQXZCdUIsQ0FBMUI7Ozs7QUFBYSxhQUFhLEdBQUEsT0FBQSxDQUFBLFVBQUEsQ0FBQSxDQUp6QixNQUFBLENBQUEsU0FBQSxDQUFVO0FBQ1QsRUFBQSxRQUFRLEVBQUUsVUFERDtBQUVULEVBQUEsUUFBQSxFQUFBLE9BQUEsQ0FBYSx1QkFBYjtBQUZTLENBQVYsQ0FJeUIsRSx5Q0FNUyxjQUFBLENBQUEsVyxFQU5ULENBQUEsRUFBYixhQUFhLENBQWI7Ozs7QUFBQSxPQUFBLENBQUEsYUFBQSxHQUFBLGFBQUEiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIE9uSW5pdCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG5pbXBvcnQgeyBMb2csIExvZ2dlcnNSZXNwb25zZSwgTG9nZ2VyLCBMZXZlbCB9IGZyb20gJy4vbG9nLm1vZGVsJztcbmltcG9ydCB7IExvZ3NTZXJ2aWNlIH0gZnJvbSAnLi9sb2dzLnNlcnZpY2UnO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdqaGktbG9ncycsXG4gIHRlbXBsYXRlVXJsOiAnLi9sb2dzLmNvbXBvbmVudC5odG1sJyxcbn0pXG5leHBvcnQgY2xhc3MgTG9nc0NvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCB7XG4gIGxvZ2dlcnM/OiBMb2dbXTtcbiAgZmlsdGVyID0gJyc7XG4gIG9yZGVyUHJvcCA9ICduYW1lJztcbiAgcmV2ZXJzZSA9IGZhbHNlO1xuXG4gIGNvbnN0cnVjdG9yKHByaXZhdGUgbG9nc1NlcnZpY2U6IExvZ3NTZXJ2aWNlKSB7fVxuXG4gIG5nT25Jbml0KCk6IHZvaWQge1xuICAgIHRoaXMuZmluZEFuZEV4dHJhY3RMb2dnZXJzKCk7XG4gIH1cblxuICBjaGFuZ2VMZXZlbChuYW1lOiBzdHJpbmcsIGxldmVsOiBMZXZlbCk6IHZvaWQge1xuICAgIHRoaXMubG9nc1NlcnZpY2UuY2hhbmdlTGV2ZWwobmFtZSwgbGV2ZWwpLnN1YnNjcmliZSgoKSA9PiB0aGlzLmZpbmRBbmRFeHRyYWN0TG9nZ2VycygpKTtcbiAgfVxuXG4gIHByaXZhdGUgZmluZEFuZEV4dHJhY3RMb2dnZXJzKCk6IHZvaWQge1xuICAgIHRoaXMubG9nc1NlcnZpY2VcbiAgICAgIC5maW5kQWxsKClcbiAgICAgIC5zdWJzY3JpYmUoXG4gICAgICAgIChyZXNwb25zZTogTG9nZ2Vyc1Jlc3BvbnNlKSA9PlxuICAgICAgICAgICh0aGlzLmxvZ2dlcnMgPSBPYmplY3QuZW50cmllcyhyZXNwb25zZS5sb2dnZXJzKS5tYXAoKGxvZ2dlcjogW3N0cmluZywgTG9nZ2VyXSkgPT4gbmV3IExvZyhsb2dnZXJbMF0sIGxvZ2dlclsxXS5lZmZlY3RpdmVMZXZlbCkpKVxuICAgICAgKTtcbiAgfVxufVxuIl19