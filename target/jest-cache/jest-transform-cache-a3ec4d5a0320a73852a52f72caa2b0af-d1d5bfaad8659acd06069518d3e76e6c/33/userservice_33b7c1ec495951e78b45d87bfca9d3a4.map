{"version":3,"sources":["/Users/sarujanrajaratnam/Desktop/Ynov/Ynov_TEST_Projet/src/main/webapp/app/core/user/user.service.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgBG;;;;;;;;;;;;;;;;;;;;AAhBH,MAAA,MAAA;AAAA;AAAA,0BAAA,OAAA,CAAA,eAAA,CAAA,CAAA;AACA,MAAA,MAAA;AAAA;AAAA,0BAAA,OAAA,CAAA,sBAAA,CAAA,CAAA;AAGA,MAAA,eAAA;AAAA;AAAA,0BAAA,OAAA,CAAA,mBAAA,CAAA,CAAA;AACA,MAAA,cAAA;AAAA;AAAA,0BAAA,OAAA,CAAA,8BAAA,CAAA,CAAA;;;;AAIA,IAAa,WAAW,GAAxB,MAAa,WAAb,CAAwB;AAGtB,EAAA,WAAA,CAAoB,IAApB,EAAoC;AAAA;AAAA;AAAA;AAAhB,SAAA,IAAA,GAAA,IAAA;;AAAgB;AAAA;AAF7B,SAAA,WAAA,GAAc,eAAA,CAAA,cAAA,GAAiB,WAA/B;AAEiC;;AAExC,EAAA,MAAM,CAAC,IAAD,EAAY;AAAA;AAAA;AAAA;AAChB,WAAO,KAAK,IAAL,CAAU,IAAV,CAAsB,KAAK,WAA3B,EAAwC,IAAxC,CAAP;AACD;;AAED,EAAA,MAAM,CAAC,IAAD,EAAY;AAAA;AAAA;AAAA;AAChB,WAAO,KAAK,IAAL,CAAU,GAAV,CAAqB,KAAK,WAA1B,EAAuC,IAAvC,CAAP;AACD;;AAED,EAAA,IAAI,CAAC,KAAD,EAAc;AAAA;AAAA;AAAA;AAChB,WAAO,KAAK,IAAL,CAAU,GAAV,CAAqB,GAAG,KAAK,WAAW,IAAI,KAAK,EAAjD,CAAP;AACD;;AAED,EAAA,KAAK,CAAC,GAAD,EAAiB;AAAA;AAAA;AACpB,UAAM,OAAO;AAAA;AAAA,+BAAG,cAAA,CAAA,mBAAA,CAAoB,GAApB,CAAH,CAAb;;AADoB;AAAA;AAEpB,WAAO,KAAK,IAAL,CAAU,GAAV,CAAuB,KAAK,WAA5B,EAAyC;AAAE,MAAA,MAAM,EAAE,OAAV;AAAmB,MAAA,OAAO,EAAE;AAA5B,KAAzC,CAAP;AACD;;AAED,EAAA,MAAM,CAAC,KAAD,EAAc;AAAA;AAAA;AAAA;AAClB,WAAO,KAAK,IAAL,CAAU,MAAV,CAAiB,GAAG,KAAK,WAAW,IAAI,KAAK,EAA7C,CAAP;AACD;;AAED,EAAA,WAAW,GAAA;AAAA;AAAA;AAAA;AACT,WAAO,KAAK,IAAL,CAAU,GAAV,CAAwB,eAAA,CAAA,cAAA,GAAiB,uBAAzC,CAAP;AACD;;AA5BqB,CAAxB;;;;AAAa,WAAW,GAAA,OAAA,CAAA,UAAA,CAAA,CADvB,MAAA,CAAA,UAAA,CAAW;AAAE,EAAA,UAAU,EAAE;AAAd,CAAX,CACuB,E,yCAGI,MAAA,CAAA,U,EAHJ,CAAA,EAAX,WAAW,CAAX;;;;AAAA,OAAA,CAAA,WAAA,GAAA,WAAA","sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient, HttpResponse } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\nimport { SERVER_API_URL } from 'app/app.constants';\nimport { createRequestOption, Pagination } from 'app/shared/util/request-util';\nimport { IUser } from './user.model';\n\n@Injectable({ providedIn: 'root' })\nexport class UserService {\n  public resourceUrl = SERVER_API_URL + 'api/users';\n\n  constructor(private http: HttpClient) {}\n\n  create(user: IUser): Observable<IUser> {\n    return this.http.post<IUser>(this.resourceUrl, user);\n  }\n\n  update(user: IUser): Observable<IUser> {\n    return this.http.put<IUser>(this.resourceUrl, user);\n  }\n\n  find(login: string): Observable<IUser> {\n    return this.http.get<IUser>(`${this.resourceUrl}/${login}`);\n  }\n\n  query(req?: Pagination): Observable<HttpResponse<IUser[]>> {\n    const options = createRequestOption(req);\n    return this.http.get<IUser[]>(this.resourceUrl, { params: options, observe: 'response' });\n  }\n\n  delete(login: string): Observable<{}> {\n    return this.http.delete(`${this.resourceUrl}/${login}`);\n  }\n\n  authorities(): Observable<string[]> {\n    return this.http.get<string[]>(SERVER_API_URL + 'api/users/authorities');\n  }\n}\n"]}