{"version":3,"sources":["/Users/sarujanrajaratnam/Desktop/Ynov/Ynov_TEST_Projet/src/main/webapp/app/entities/location/location-update.component.ts"],"names":[],"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","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { HttpResponse } from '@angular/common/http';\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { ActivatedRoute } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { ILocation, Location } from 'app/shared/model/location.model';\nimport { LocationService } from './location.service';\nimport { ICountry } from 'app/shared/model/country.model';\nimport { CountryService } from 'app/entities/country/country.service';\n\n@Component({\n  selector: 'jhi-location-update',\n  templateUrl: './location-update.component.html',\n})\nexport class LocationUpdateComponent implements OnInit {\n  isSaving = false;\n  countries: ICountry[] = [];\n\n  editForm = this.fb.group({\n    id: [],\n    streetAddress: [],\n    postalCode: [],\n    city: [],\n    stateProvince: [],\n    country: [],\n  });\n\n  constructor(\n    protected locationService: LocationService,\n    protected countryService: CountryService,\n    protected activatedRoute: ActivatedRoute,\n    private fb: FormBuilder\n  ) {}\n\n  ngOnInit(): void {\n    this.activatedRoute.data.subscribe(({ location }) => {\n      this.updateForm(location);\n\n      this.countryService\n        .query({ filter: 'location-is-null' })\n        .pipe(\n          map((res: HttpResponse<ICountry[]>) => {\n            return res.body || [];\n          })\n        )\n        .subscribe((resBody: ICountry[]) => {\n          if (!location.country || !location.country.id) {\n            this.countries = resBody;\n          } else {\n            this.countryService\n              .find(location.country.id)\n              .pipe(\n                map((subRes: HttpResponse<ICountry>) => {\n                  return subRes.body ? [subRes.body].concat(resBody) : resBody;\n                })\n              )\n              .subscribe((concatRes: ICountry[]) => (this.countries = concatRes));\n          }\n        });\n    });\n  }\n\n  updateForm(location: ILocation): void {\n    this.editForm.patchValue({\n      id: location.id,\n      streetAddress: location.streetAddress,\n      postalCode: location.postalCode,\n      city: location.city,\n      stateProvince: location.stateProvince,\n      country: location.country,\n    });\n  }\n\n  previousState(): void {\n    window.history.back();\n  }\n\n  save(): void {\n    this.isSaving = true;\n    const location = this.createFromForm();\n    if (location.id !== undefined) {\n      this.subscribeToSaveResponse(this.locationService.update(location));\n    } else {\n      this.subscribeToSaveResponse(this.locationService.create(location));\n    }\n  }\n\n  private createFromForm(): ILocation {\n    return {\n      ...new Location(),\n      id: this.editForm.get(['id'])!.value,\n      streetAddress: this.editForm.get(['streetAddress'])!.value,\n      postalCode: this.editForm.get(['postalCode'])!.value,\n      city: this.editForm.get(['city'])!.value,\n      stateProvince: this.editForm.get(['stateProvince'])!.value,\n      country: this.editForm.get(['country'])!.value,\n    };\n  }\n\n  protected subscribeToSaveResponse(result: Observable<HttpResponse<ILocation>>): void {\n    result.subscribe(\n      () => this.onSaveSuccess(),\n      () => this.onSaveError()\n    );\n  }\n\n  protected onSaveSuccess(): void {\n    this.isSaving = false;\n    this.previousState();\n  }\n\n  protected onSaveError(): void {\n    this.isSaving = false;\n  }\n\n  trackById(index: number, item: ICountry): any {\n    return item.id;\n  }\n}\n"]}