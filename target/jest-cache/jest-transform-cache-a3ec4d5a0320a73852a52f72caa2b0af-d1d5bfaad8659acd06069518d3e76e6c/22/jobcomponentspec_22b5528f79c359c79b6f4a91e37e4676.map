{"file":"/Users/sarujanrajaratnam/Desktop/Ynov/Ynov_TEST_Projet/src/test/javascript/spec/app/entities/job/job.component.spec.ts","mappings":"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","names":[],"sources":["/Users/sarujanrajaratnam/Desktop/Ynov/Ynov_TEST_Projet/src/test/javascript/spec/app/entities/job/job.component.spec.ts"],"sourcesContent":["import { ComponentFixture, TestBed } from '@angular/core/testing';\nimport { of } from 'rxjs';\nimport { HttpHeaders, HttpResponse } from '@angular/common/http';\nimport { ActivatedRoute, convertToParamMap } from '@angular/router';\n\nimport { ProBiblioTestModule } from '../../../test.module';\nimport { JobComponent } from 'app/entities/job/job.component';\nimport { JobService } from 'app/entities/job/job.service';\nimport { Job } from 'app/shared/model/job.model';\n\ndescribe('Component Tests', () => {\n  describe('Job Management Component', () => {\n    let comp: JobComponent;\n    let fixture: ComponentFixture<JobComponent>;\n    let service: JobService;\n\n    beforeEach(() => {\n      TestBed.configureTestingModule({\n        imports: [ProBiblioTestModule],\n        declarations: [JobComponent],\n        providers: [\n          {\n            provide: ActivatedRoute,\n            useValue: {\n              data: of({\n                defaultSort: 'id,asc',\n              }),\n              queryParamMap: of(\n                convertToParamMap({\n                  page: '1',\n                  size: '1',\n                  sort: 'id,desc',\n                })\n              ),\n            },\n          },\n        ],\n      })\n        .overrideTemplate(JobComponent, '')\n        .compileComponents();\n\n      fixture = TestBed.createComponent(JobComponent);\n      comp = fixture.componentInstance;\n      service = fixture.debugElement.injector.get(JobService);\n    });\n\n    it('Should call load all on init', () => {\n      // GIVEN\n      const headers = new HttpHeaders().append('link', 'link;link');\n      spyOn(service, 'query').and.returnValue(\n        of(\n          new HttpResponse({\n            body: [new Job(123)],\n            headers,\n          })\n        )\n      );\n\n      // WHEN\n      comp.ngOnInit();\n\n      // THEN\n      expect(service.query).toHaveBeenCalled();\n      expect(comp.jobs && comp.jobs[0]).toEqual(jasmine.objectContaining({ id: 123 }));\n    });\n\n    it('should load a page', () => {\n      // GIVEN\n      const headers = new HttpHeaders().append('link', 'link;link');\n      spyOn(service, 'query').and.returnValue(\n        of(\n          new HttpResponse({\n            body: [new Job(123)],\n            headers,\n          })\n        )\n      );\n\n      // WHEN\n      comp.loadPage(1);\n\n      // THEN\n      expect(service.query).toHaveBeenCalled();\n      expect(comp.jobs && comp.jobs[0]).toEqual(jasmine.objectContaining({ id: 123 }));\n    });\n\n    it('should calculate the sort attribute for an id', () => {\n      // WHEN\n      comp.ngOnInit();\n      const result = comp.sort();\n\n      // THEN\n      expect(result).toEqual(['id,desc']);\n    });\n\n    it('should calculate the sort attribute for a non-id attribute', () => {\n      // INIT\n      comp.ngOnInit();\n\n      // GIVEN\n      comp.predicate = 'name';\n\n      // WHEN\n      const result = comp.sort();\n\n      // THEN\n      expect(result).toEqual(['name,desc', 'id']);\n    });\n  });\n});\n"],"version":3}