{"version":3,"sources":["/Users/sarujanrajaratnam/Desktop/Ynov/Ynov_TEST_Projet/src/main/webapp/app/entities/job-history/job-history.service.ts"],"names":[],"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","sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient, HttpResponse } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport * as moment from 'moment';\n\nimport { SERVER_API_URL } from 'app/app.constants';\nimport { createRequestOption } from 'app/shared/util/request-util';\nimport { IJobHistory } from 'app/shared/model/job-history.model';\n\ntype EntityResponseType = HttpResponse<IJobHistory>;\ntype EntityArrayResponseType = HttpResponse<IJobHistory[]>;\n\n@Injectable({ providedIn: 'root' })\nexport class JobHistoryService {\n  public resourceUrl = SERVER_API_URL + 'api/job-histories';\n\n  constructor(protected http: HttpClient) {}\n\n  create(jobHistory: IJobHistory): Observable<EntityResponseType> {\n    const copy = this.convertDateFromClient(jobHistory);\n    return this.http\n      .post<IJobHistory>(this.resourceUrl, copy, { observe: 'response' })\n      .pipe(map((res: EntityResponseType) => this.convertDateFromServer(res)));\n  }\n\n  update(jobHistory: IJobHistory): Observable<EntityResponseType> {\n    const copy = this.convertDateFromClient(jobHistory);\n    return this.http\n      .put<IJobHistory>(this.resourceUrl, copy, { observe: 'response' })\n      .pipe(map((res: EntityResponseType) => this.convertDateFromServer(res)));\n  }\n\n  find(id: number): Observable<EntityResponseType> {\n    return this.http\n      .get<IJobHistory>(`${this.resourceUrl}/${id}`, { observe: 'response' })\n      .pipe(map((res: EntityResponseType) => this.convertDateFromServer(res)));\n  }\n\n  query(req?: any): Observable<EntityArrayResponseType> {\n    const options = createRequestOption(req);\n    return this.http\n      .get<IJobHistory[]>(this.resourceUrl, { params: options, observe: 'response' })\n      .pipe(map((res: EntityArrayResponseType) => this.convertDateArrayFromServer(res)));\n  }\n\n  delete(id: number): Observable<HttpResponse<{}>> {\n    return this.http.delete(`${this.resourceUrl}/${id}`, { observe: 'response' });\n  }\n\n  protected convertDateFromClient(jobHistory: IJobHistory): IJobHistory {\n    const copy: IJobHistory = Object.assign({}, jobHistory, {\n      startDate: jobHistory.startDate && jobHistory.startDate.isValid() ? jobHistory.startDate.toJSON() : undefined,\n      endDate: jobHistory.endDate && jobHistory.endDate.isValid() ? jobHistory.endDate.toJSON() : undefined,\n    });\n    return copy;\n  }\n\n  protected convertDateFromServer(res: EntityResponseType): EntityResponseType {\n    if (res.body) {\n      res.body.startDate = res.body.startDate ? moment(res.body.startDate) : undefined;\n      res.body.endDate = res.body.endDate ? moment(res.body.endDate) : undefined;\n    }\n    return res;\n  }\n\n  protected convertDateArrayFromServer(res: EntityArrayResponseType): EntityArrayResponseType {\n    if (res.body) {\n      res.body.forEach((jobHistory: IJobHistory) => {\n        jobHistory.startDate = jobHistory.startDate ? moment(jobHistory.startDate) : undefined;\n        jobHistory.endDate = jobHistory.endDate ? moment(jobHistory.endDate) : undefined;\n      });\n    }\n    return res;\n  }\n}\n"]}