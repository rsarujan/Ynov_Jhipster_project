4e284af7d7022b60f252020451056350
"use strict";

/* istanbul ignore next */
function cov_pl7ierq1z() {
  var path = "/Users/sarujanrajaratnam/Desktop/Ynov/Ynov_TEST_Projet/src/main/webapp/app/entities/job-history/job-history.service.ts";
  var hash = "722370fa55ab3056d7febfc997f6bc2de0f50d87";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/sarujanrajaratnam/Desktop/Ynov/Ynov_TEST_Projet/src/main/webapp/app/entities/job-history/job-history.service.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 2,
          column: 62
        }
      },
      "1": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 3,
          column: 35
        }
      },
      "2": {
        start: {
          line: 4,
          column: 16
        },
        end: {
          line: 4,
          column: 32
        }
      },
      "3": {
        start: {
          line: 5,
          column: 15
        },
        end: {
          line: 5,
          column: 39
        }
      },
      "4": {
        start: {
          line: 6,
          column: 15
        },
        end: {
          line: 6,
          column: 46
        }
      },
      "5": {
        start: {
          line: 7,
          column: 20
        },
        end: {
          line: 7,
          column: 45
        }
      },
      "6": {
        start: {
          line: 8,
          column: 15
        },
        end: {
          line: 8,
          column: 32
        }
      },
      "7": {
        start: {
          line: 9,
          column: 24
        },
        end: {
          line: 9,
          column: 52
        }
      },
      "8": {
        start: {
          line: 10,
          column: 23
        },
        end: {
          line: 10,
          column: 62
        }
      },
      "9": {
        start: {
          line: 11,
          column: 24
        },
        end: {
          line: 65,
          column: 1
        }
      },
      "10": {
        start: {
          line: 13,
          column: 8
        },
        end: {
          line: 13,
          column: 25
        }
      },
      "11": {
        start: {
          line: 14,
          column: 8
        },
        end: {
          line: 14,
          column: 80
        }
      },
      "12": {
        start: {
          line: 17,
          column: 21
        },
        end: {
          line: 17,
          column: 59
        }
      },
      "13": {
        start: {
          line: 18,
          column: 8
        },
        end: {
          line: 20,
          column: 77
        }
      },
      "14": {
        start: {
          line: 20,
          column: 43
        },
        end: {
          line: 20,
          column: 74
        }
      },
      "15": {
        start: {
          line: 23,
          column: 21
        },
        end: {
          line: 23,
          column: 59
        }
      },
      "16": {
        start: {
          line: 24,
          column: 8
        },
        end: {
          line: 26,
          column: 77
        }
      },
      "17": {
        start: {
          line: 26,
          column: 43
        },
        end: {
          line: 26,
          column: 74
        }
      },
      "18": {
        start: {
          line: 29,
          column: 8
        },
        end: {
          line: 31,
          column: 77
        }
      },
      "19": {
        start: {
          line: 31,
          column: 43
        },
        end: {
          line: 31,
          column: 74
        }
      },
      "20": {
        start: {
          line: 34,
          column: 24
        },
        end: {
          line: 34,
          column: 63
        }
      },
      "21": {
        start: {
          line: 35,
          column: 8
        },
        end: {
          line: 37,
          column: 82
        }
      },
      "22": {
        start: {
          line: 37,
          column: 43
        },
        end: {
          line: 37,
          column: 79
        }
      },
      "23": {
        start: {
          line: 40,
          column: 8
        },
        end: {
          line: 40,
          column: 86
        }
      },
      "24": {
        start: {
          line: 43,
          column: 21
        },
        end: {
          line: 46,
          column: 10
        }
      },
      "25": {
        start: {
          line: 47,
          column: 8
        },
        end: {
          line: 47,
          column: 20
        }
      },
      "26": {
        start: {
          line: 50,
          column: 8
        },
        end: {
          line: 53,
          column: 9
        }
      },
      "27": {
        start: {
          line: 51,
          column: 12
        },
        end: {
          line: 51,
          column: 93
        }
      },
      "28": {
        start: {
          line: 52,
          column: 12
        },
        end: {
          line: 52,
          column: 87
        }
      },
      "29": {
        start: {
          line: 54,
          column: 8
        },
        end: {
          line: 54,
          column: 19
        }
      },
      "30": {
        start: {
          line: 57,
          column: 8
        },
        end: {
          line: 62,
          column: 9
        }
      },
      "31": {
        start: {
          line: 58,
          column: 12
        },
        end: {
          line: 61,
          column: 15
        }
      },
      "32": {
        start: {
          line: 59,
          column: 16
        },
        end: {
          line: 59,
          column: 103
        }
      },
      "33": {
        start: {
          line: 60,
          column: 16
        },
        end: {
          line: 60,
          column: 97
        }
      },
      "34": {
        start: {
          line: 63,
          column: 8
        },
        end: {
          line: 63,
          column: 19
        }
      },
      "35": {
        start: {
          line: 66,
          column: 0
        },
        end: {
          line: 69,
          column: 22
        }
      },
      "36": {
        start: {
          line: 70,
          column: 0
        },
        end: {
          line: 70,
          column: 46
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 12,
            column: 4
          },
          end: {
            line: 12,
            column: 5
          }
        },
        loc: {
          start: {
            line: 12,
            column: 22
          },
          end: {
            line: 15,
            column: 5
          }
        },
        line: 12
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 16,
            column: 4
          },
          end: {
            line: 16,
            column: 5
          }
        },
        loc: {
          start: {
            line: 16,
            column: 23
          },
          end: {
            line: 21,
            column: 5
          }
        },
        line: 16
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 20,
            column: 34
          },
          end: {
            line: 20,
            column: 35
          }
        },
        loc: {
          start: {
            line: 20,
            column: 43
          },
          end: {
            line: 20,
            column: 74
          }
        },
        line: 20
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 22,
            column: 4
          },
          end: {
            line: 22,
            column: 5
          }
        },
        loc: {
          start: {
            line: 22,
            column: 23
          },
          end: {
            line: 27,
            column: 5
          }
        },
        line: 22
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 26,
            column: 34
          },
          end: {
            line: 26,
            column: 35
          }
        },
        loc: {
          start: {
            line: 26,
            column: 43
          },
          end: {
            line: 26,
            column: 74
          }
        },
        line: 26
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 28,
            column: 4
          },
          end: {
            line: 28,
            column: 5
          }
        },
        loc: {
          start: {
            line: 28,
            column: 13
          },
          end: {
            line: 32,
            column: 5
          }
        },
        line: 28
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 31,
            column: 34
          },
          end: {
            line: 31,
            column: 35
          }
        },
        loc: {
          start: {
            line: 31,
            column: 43
          },
          end: {
            line: 31,
            column: 74
          }
        },
        line: 31
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 33,
            column: 4
          },
          end: {
            line: 33,
            column: 5
          }
        },
        loc: {
          start: {
            line: 33,
            column: 15
          },
          end: {
            line: 38,
            column: 5
          }
        },
        line: 33
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 37,
            column: 34
          },
          end: {
            line: 37,
            column: 35
          }
        },
        loc: {
          start: {
            line: 37,
            column: 43
          },
          end: {
            line: 37,
            column: 79
          }
        },
        line: 37
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 39,
            column: 4
          },
          end: {
            line: 39,
            column: 5
          }
        },
        loc: {
          start: {
            line: 39,
            column: 15
          },
          end: {
            line: 41,
            column: 5
          }
        },
        line: 39
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 42,
            column: 4
          },
          end: {
            line: 42,
            column: 5
          }
        },
        loc: {
          start: {
            line: 42,
            column: 38
          },
          end: {
            line: 48,
            column: 5
          }
        },
        line: 42
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 49,
            column: 4
          },
          end: {
            line: 49,
            column: 5
          }
        },
        loc: {
          start: {
            line: 49,
            column: 31
          },
          end: {
            line: 55,
            column: 5
          }
        },
        line: 49
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 56,
            column: 4
          },
          end: {
            line: 56,
            column: 5
          }
        },
        loc: {
          start: {
            line: 56,
            column: 36
          },
          end: {
            line: 64,
            column: 5
          }
        },
        line: 56
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 58,
            column: 29
          },
          end: {
            line: 58,
            column: 30
          }
        },
        loc: {
          start: {
            line: 58,
            column: 45
          },
          end: {
            line: 61,
            column: 13
          }
        },
        line: 58
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 44,
            column: 23
          },
          end: {
            line: 44,
            column: 121
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 44,
            column: 80
          },
          end: {
            line: 44,
            column: 109
          }
        }, {
          start: {
            line: 44,
            column: 112
          },
          end: {
            line: 44,
            column: 121
          }
        }],
        line: 44
      },
      "1": {
        loc: {
          start: {
            line: 44,
            column: 23
          },
          end: {
            line: 44,
            column: 77
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 44,
            column: 23
          },
          end: {
            line: 44,
            column: 43
          }
        }, {
          start: {
            line: 44,
            column: 47
          },
          end: {
            line: 44,
            column: 77
          }
        }],
        line: 44
      },
      "2": {
        loc: {
          start: {
            line: 45,
            column: 21
          },
          end: {
            line: 45,
            column: 113
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 45,
            column: 74
          },
          end: {
            line: 45,
            column: 101
          }
        }, {
          start: {
            line: 45,
            column: 104
          },
          end: {
            line: 45,
            column: 113
          }
        }],
        line: 45
      },
      "3": {
        loc: {
          start: {
            line: 45,
            column: 21
          },
          end: {
            line: 45,
            column: 71
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 45,
            column: 21
          },
          end: {
            line: 45,
            column: 39
          }
        }, {
          start: {
            line: 45,
            column: 43
          },
          end: {
            line: 45,
            column: 71
          }
        }],
        line: 45
      },
      "4": {
        loc: {
          start: {
            line: 50,
            column: 8
          },
          end: {
            line: 53,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 50,
            column: 8
          },
          end: {
            line: 53,
            column: 9
          }
        }, {
          start: {
            line: 50,
            column: 8
          },
          end: {
            line: 53,
            column: 9
          }
        }],
        line: 50
      },
      "5": {
        loc: {
          start: {
            line: 51,
            column: 33
          },
          end: {
            line: 51,
            column: 92
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 51,
            column: 54
          },
          end: {
            line: 51,
            column: 80
          }
        }, {
          start: {
            line: 51,
            column: 83
          },
          end: {
            line: 51,
            column: 92
          }
        }],
        line: 51
      },
      "6": {
        loc: {
          start: {
            line: 52,
            column: 31
          },
          end: {
            line: 52,
            column: 86
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 52,
            column: 50
          },
          end: {
            line: 52,
            column: 74
          }
        }, {
          start: {
            line: 52,
            column: 77
          },
          end: {
            line: 52,
            column: 86
          }
        }],
        line: 52
      },
      "7": {
        loc: {
          start: {
            line: 57,
            column: 8
          },
          end: {
            line: 62,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 57,
            column: 8
          },
          end: {
            line: 62,
            column: 9
          }
        }, {
          start: {
            line: 57,
            column: 8
          },
          end: {
            line: 62,
            column: 9
          }
        }],
        line: 57
      },
      "8": {
        loc: {
          start: {
            line: 59,
            column: 39
          },
          end: {
            line: 59,
            column: 102
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 59,
            column: 62
          },
          end: {
            line: 59,
            column: 90
          }
        }, {
          start: {
            line: 59,
            column: 93
          },
          end: {
            line: 59,
            column: 102
          }
        }],
        line: 59
      },
      "9": {
        loc: {
          start: {
            line: 60,
            column: 37
          },
          end: {
            line: 60,
            column: 96
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 60,
            column: 58
          },
          end: {
            line: 60,
            column: 84
          }
        }, {
          start: {
            line: 60,
            column: 87
          },
          end: {
            line: 60,
            column: 96
          }
        }],
        line: 60
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0]
    },
    inputSourceMap: {
      file: "/Users/sarujanrajaratnam/Desktop/Ynov/Ynov_TEST_Projet/src/main/webapp/app/entities/job-history/job-history.service.ts",
      mappings: "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",
      names: [],
      sources: ["/Users/sarujanrajaratnam/Desktop/Ynov/Ynov_TEST_Projet/src/main/webapp/app/entities/job-history/job-history.service.ts"],
      sourcesContent: ["import { Injectable } from '@angular/core';\nimport { HttpClient, HttpResponse } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport * as moment from 'moment';\n\nimport { SERVER_API_URL } from 'app/app.constants';\nimport { createRequestOption } from 'app/shared/util/request-util';\nimport { IJobHistory } from 'app/shared/model/job-history.model';\n\ntype EntityResponseType = HttpResponse<IJobHistory>;\ntype EntityArrayResponseType = HttpResponse<IJobHistory[]>;\n\n@Injectable({ providedIn: 'root' })\nexport class JobHistoryService {\n  public resourceUrl = SERVER_API_URL + 'api/job-histories';\n\n  constructor(protected http: HttpClient) {}\n\n  create(jobHistory: IJobHistory): Observable<EntityResponseType> {\n    const copy = this.convertDateFromClient(jobHistory);\n    return this.http\n      .post<IJobHistory>(this.resourceUrl, copy, { observe: 'response' })\n      .pipe(map((res: EntityResponseType) => this.convertDateFromServer(res)));\n  }\n\n  update(jobHistory: IJobHistory): Observable<EntityResponseType> {\n    const copy = this.convertDateFromClient(jobHistory);\n    return this.http\n      .put<IJobHistory>(this.resourceUrl, copy, { observe: 'response' })\n      .pipe(map((res: EntityResponseType) => this.convertDateFromServer(res)));\n  }\n\n  find(id: number): Observable<EntityResponseType> {\n    return this.http\n      .get<IJobHistory>(`${this.resourceUrl}/${id}`, { observe: 'response' })\n      .pipe(map((res: EntityResponseType) => this.convertDateFromServer(res)));\n  }\n\n  query(req?: any): Observable<EntityArrayResponseType> {\n    const options = createRequestOption(req);\n    return this.http\n      .get<IJobHistory[]>(this.resourceUrl, { params: options, observe: 'response' })\n      .pipe(map((res: EntityArrayResponseType) => this.convertDateArrayFromServer(res)));\n  }\n\n  delete(id: number): Observable<HttpResponse<{}>> {\n    return this.http.delete(`${this.resourceUrl}/${id}`, { observe: 'response' });\n  }\n\n  protected convertDateFromClient(jobHistory: IJobHistory): IJobHistory {\n    const copy: IJobHistory = Object.assign({}, jobHistory, {\n      startDate: jobHistory.startDate && jobHistory.startDate.isValid() ? jobHistory.startDate.toJSON() : undefined,\n      endDate: jobHistory.endDate && jobHistory.endDate.isValid() ? jobHistory.endDate.toJSON() : undefined,\n    });\n    return copy;\n  }\n\n  protected convertDateFromServer(res: EntityResponseType): EntityResponseType {\n    if (res.body) {\n      res.body.startDate = res.body.startDate ? moment(res.body.startDate) : undefined;\n      res.body.endDate = res.body.endDate ? moment(res.body.endDate) : undefined;\n    }\n    return res;\n  }\n\n  protected convertDateArrayFromServer(res: EntityArrayResponseType): EntityArrayResponseType {\n    if (res.body) {\n      res.body.forEach((jobHistory: IJobHistory) => {\n        jobHistory.startDate = jobHistory.startDate ? moment(jobHistory.startDate) : undefined;\n        jobHistory.endDate = jobHistory.endDate ? moment(jobHistory.endDate) : undefined;\n      });\n    }\n    return res;\n  }\n}\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "722370fa55ab3056d7febfc997f6bc2de0f50d87"
  };
  var coverage = global[gcv] || (global[gcv] = {});

  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }

  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_pl7ierq1z = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}

cov_pl7ierq1z();
cov_pl7ierq1z().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});

/* istanbul ignore next */
cov_pl7ierq1z().s[1]++;
exports.JobHistoryService = void 0;
const tslib_1 =
/* istanbul ignore next */
(cov_pl7ierq1z().s[2]++, require("tslib"));
const core_1 =
/* istanbul ignore next */
(cov_pl7ierq1z().s[3]++, require("@angular/core"));
const http_1 =
/* istanbul ignore next */
(cov_pl7ierq1z().s[4]++, require("@angular/common/http"));
const operators_1 =
/* istanbul ignore next */
(cov_pl7ierq1z().s[5]++, require("rxjs/operators"));
const moment =
/* istanbul ignore next */
(cov_pl7ierq1z().s[6]++, require("moment"));
const app_constants_1 =
/* istanbul ignore next */
(cov_pl7ierq1z().s[7]++, require("app/app.constants"));
const request_util_1 =
/* istanbul ignore next */
(cov_pl7ierq1z().s[8]++, require("app/shared/util/request-util"));

/* istanbul ignore next */
cov_pl7ierq1z().s[9]++;
let JobHistoryService = class JobHistoryService {
  constructor(http) {
    /* istanbul ignore next */
    cov_pl7ierq1z().f[0]++;
    cov_pl7ierq1z().s[10]++;
    this.http = http;

    /* istanbul ignore next */
    cov_pl7ierq1z().s[11]++;
    this.resourceUrl = app_constants_1.SERVER_API_URL + 'api/job-histories';
  }

  create(jobHistory) {
    /* istanbul ignore next */
    cov_pl7ierq1z().f[1]++;
    const copy =
    /* istanbul ignore next */
    (cov_pl7ierq1z().s[12]++, this.convertDateFromClient(jobHistory));

    /* istanbul ignore next */
    cov_pl7ierq1z().s[13]++;
    return this.http.post(this.resourceUrl, copy, {
      observe: 'response'
    }).pipe(operators_1.map(res => {
      /* istanbul ignore next */
      cov_pl7ierq1z().f[2]++;
      cov_pl7ierq1z().s[14]++;
      return this.convertDateFromServer(res);
    }));
  }

  update(jobHistory) {
    /* istanbul ignore next */
    cov_pl7ierq1z().f[3]++;
    const copy =
    /* istanbul ignore next */
    (cov_pl7ierq1z().s[15]++, this.convertDateFromClient(jobHistory));

    /* istanbul ignore next */
    cov_pl7ierq1z().s[16]++;
    return this.http.put(this.resourceUrl, copy, {
      observe: 'response'
    }).pipe(operators_1.map(res => {
      /* istanbul ignore next */
      cov_pl7ierq1z().f[4]++;
      cov_pl7ierq1z().s[17]++;
      return this.convertDateFromServer(res);
    }));
  }

  find(id) {
    /* istanbul ignore next */
    cov_pl7ierq1z().f[5]++;
    cov_pl7ierq1z().s[18]++;
    return this.http.get(`${this.resourceUrl}/${id}`, {
      observe: 'response'
    }).pipe(operators_1.map(res => {
      /* istanbul ignore next */
      cov_pl7ierq1z().f[6]++;
      cov_pl7ierq1z().s[19]++;
      return this.convertDateFromServer(res);
    }));
  }

  query(req) {
    /* istanbul ignore next */
    cov_pl7ierq1z().f[7]++;
    const options =
    /* istanbul ignore next */
    (cov_pl7ierq1z().s[20]++, request_util_1.createRequestOption(req));

    /* istanbul ignore next */
    cov_pl7ierq1z().s[21]++;
    return this.http.get(this.resourceUrl, {
      params: options,
      observe: 'response'
    }).pipe(operators_1.map(res => {
      /* istanbul ignore next */
      cov_pl7ierq1z().f[8]++;
      cov_pl7ierq1z().s[22]++;
      return this.convertDateArrayFromServer(res);
    }));
  }

  delete(id) {
    /* istanbul ignore next */
    cov_pl7ierq1z().f[9]++;
    cov_pl7ierq1z().s[23]++;
    return this.http.delete(`${this.resourceUrl}/${id}`, {
      observe: 'response'
    });
  }

  convertDateFromClient(jobHistory) {
    /* istanbul ignore next */
    cov_pl7ierq1z().f[10]++;
    const copy =
    /* istanbul ignore next */
    (cov_pl7ierq1z().s[24]++, Object.assign({}, jobHistory, {
      startDate:
      /* istanbul ignore next */
      (cov_pl7ierq1z().b[1][0]++, jobHistory.startDate) &&
      /* istanbul ignore next */
      (cov_pl7ierq1z().b[1][1]++, jobHistory.startDate.isValid()) ?
      /* istanbul ignore next */
      (cov_pl7ierq1z().b[0][0]++, jobHistory.startDate.toJSON()) :
      /* istanbul ignore next */
      (cov_pl7ierq1z().b[0][1]++, undefined),
      endDate:
      /* istanbul ignore next */
      (cov_pl7ierq1z().b[3][0]++, jobHistory.endDate) &&
      /* istanbul ignore next */
      (cov_pl7ierq1z().b[3][1]++, jobHistory.endDate.isValid()) ?
      /* istanbul ignore next */
      (cov_pl7ierq1z().b[2][0]++, jobHistory.endDate.toJSON()) :
      /* istanbul ignore next */
      (cov_pl7ierq1z().b[2][1]++, undefined)
    }));

    /* istanbul ignore next */
    cov_pl7ierq1z().s[25]++;
    return copy;
  }

  convertDateFromServer(res) {
    /* istanbul ignore next */
    cov_pl7ierq1z().f[11]++;
    cov_pl7ierq1z().s[26]++;

    if (res.body) {
      /* istanbul ignore next */
      cov_pl7ierq1z().b[4][0]++;
      cov_pl7ierq1z().s[27]++;
      res.body.startDate = res.body.startDate ?
      /* istanbul ignore next */
      (cov_pl7ierq1z().b[5][0]++, moment(res.body.startDate)) :
      /* istanbul ignore next */
      (cov_pl7ierq1z().b[5][1]++, undefined);

      /* istanbul ignore next */
      cov_pl7ierq1z().s[28]++;
      res.body.endDate = res.body.endDate ?
      /* istanbul ignore next */
      (cov_pl7ierq1z().b[6][0]++, moment(res.body.endDate)) :
      /* istanbul ignore next */
      (cov_pl7ierq1z().b[6][1]++, undefined);
    } else
    /* istanbul ignore next */
    {
      cov_pl7ierq1z().b[4][1]++;
    }

    cov_pl7ierq1z().s[29]++;
    return res;
  }

  convertDateArrayFromServer(res) {
    /* istanbul ignore next */
    cov_pl7ierq1z().f[12]++;
    cov_pl7ierq1z().s[30]++;

    if (res.body) {
      /* istanbul ignore next */
      cov_pl7ierq1z().b[7][0]++;
      cov_pl7ierq1z().s[31]++;
      res.body.forEach(jobHistory => {
        /* istanbul ignore next */
        cov_pl7ierq1z().f[13]++;
        cov_pl7ierq1z().s[32]++;
        jobHistory.startDate = jobHistory.startDate ?
        /* istanbul ignore next */
        (cov_pl7ierq1z().b[8][0]++, moment(jobHistory.startDate)) :
        /* istanbul ignore next */
        (cov_pl7ierq1z().b[8][1]++, undefined);

        /* istanbul ignore next */
        cov_pl7ierq1z().s[33]++;
        jobHistory.endDate = jobHistory.endDate ?
        /* istanbul ignore next */
        (cov_pl7ierq1z().b[9][0]++, moment(jobHistory.endDate)) :
        /* istanbul ignore next */
        (cov_pl7ierq1z().b[9][1]++, undefined);
      });
    } else
    /* istanbul ignore next */
    {
      cov_pl7ierq1z().b[7][1]++;
    }

    cov_pl7ierq1z().s[34]++;
    return res;
  }

};

/* istanbul ignore next */
cov_pl7ierq1z().s[35]++;
JobHistoryService = tslib_1.__decorate([core_1.Injectable({
  providedIn: 'root'
}), tslib_1.__metadata("design:paramtypes", [http_1.HttpClient])], JobHistoryService);

/* istanbul ignore next */
cov_pl7ierq1z().s[36]++;
exports.JobHistoryService = JobHistoryService;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,