0ff5cf13d2669cb2f4f54e1b731d7d39
"use strict";

/* istanbul ignore next */
function cov_uhlkuj9g() {
  var path = "/Users/sarujanrajaratnam/Desktop/Ynov/Ynov_TEST_Projet/src/main/webapp/app/entities/task/task.service.ts";
  var hash = "1bc8a51cbf6c98e5665d0cfbfcd226af0df5dea9";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/sarujanrajaratnam/Desktop/Ynov/Ynov_TEST_Projet/src/main/webapp/app/entities/task/task.service.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 2,
          column: 62
        }
      },
      "1": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 3,
          column: 29
        }
      },
      "2": {
        start: {
          line: 4,
          column: 16
        },
        end: {
          line: 4,
          column: 32
        }
      },
      "3": {
        start: {
          line: 5,
          column: 15
        },
        end: {
          line: 5,
          column: 39
        }
      },
      "4": {
        start: {
          line: 6,
          column: 15
        },
        end: {
          line: 6,
          column: 46
        }
      },
      "5": {
        start: {
          line: 7,
          column: 24
        },
        end: {
          line: 7,
          column: 52
        }
      },
      "6": {
        start: {
          line: 8,
          column: 23
        },
        end: {
          line: 8,
          column: 62
        }
      },
      "7": {
        start: {
          line: 9,
          column: 18
        },
        end: {
          line: 30,
          column: 1
        }
      },
      "8": {
        start: {
          line: 11,
          column: 8
        },
        end: {
          line: 11,
          column: 25
        }
      },
      "9": {
        start: {
          line: 12,
          column: 8
        },
        end: {
          line: 12,
          column: 72
        }
      },
      "10": {
        start: {
          line: 15,
          column: 8
        },
        end: {
          line: 15,
          column: 79
        }
      },
      "11": {
        start: {
          line: 18,
          column: 8
        },
        end: {
          line: 18,
          column: 78
        }
      },
      "12": {
        start: {
          line: 21,
          column: 8
        },
        end: {
          line: 21,
          column: 83
        }
      },
      "13": {
        start: {
          line: 24,
          column: 24
        },
        end: {
          line: 24,
          column: 63
        }
      },
      "14": {
        start: {
          line: 25,
          column: 8
        },
        end: {
          line: 25,
          column: 89
        }
      },
      "15": {
        start: {
          line: 28,
          column: 8
        },
        end: {
          line: 28,
          column: 86
        }
      },
      "16": {
        start: {
          line: 31,
          column: 0
        },
        end: {
          line: 34,
          column: 16
        }
      },
      "17": {
        start: {
          line: 35,
          column: 0
        },
        end: {
          line: 35,
          column: 34
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 10,
            column: 4
          },
          end: {
            line: 10,
            column: 5
          }
        },
        loc: {
          start: {
            line: 10,
            column: 22
          },
          end: {
            line: 13,
            column: 5
          }
        },
        line: 10
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 14,
            column: 4
          },
          end: {
            line: 14,
            column: 5
          }
        },
        loc: {
          start: {
            line: 14,
            column: 17
          },
          end: {
            line: 16,
            column: 5
          }
        },
        line: 14
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 17,
            column: 4
          },
          end: {
            line: 17,
            column: 5
          }
        },
        loc: {
          start: {
            line: 17,
            column: 17
          },
          end: {
            line: 19,
            column: 5
          }
        },
        line: 17
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 20,
            column: 4
          },
          end: {
            line: 20,
            column: 5
          }
        },
        loc: {
          start: {
            line: 20,
            column: 13
          },
          end: {
            line: 22,
            column: 5
          }
        },
        line: 20
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 23,
            column: 4
          },
          end: {
            line: 23,
            column: 5
          }
        },
        loc: {
          start: {
            line: 23,
            column: 15
          },
          end: {
            line: 26,
            column: 5
          }
        },
        line: 23
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 27,
            column: 4
          },
          end: {
            line: 27,
            column: 5
          }
        },
        loc: {
          start: {
            line: 27,
            column: 15
          },
          end: {
            line: 29,
            column: 5
          }
        },
        line: 27
      }
    },
    branchMap: {},
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0
    },
    b: {},
    inputSourceMap: {
      file: "/Users/sarujanrajaratnam/Desktop/Ynov/Ynov_TEST_Projet/src/main/webapp/app/entities/task/task.service.ts",
      mappings: ";;;;AAAA,wCAA2C;AAC3C,+CAAgE;AAGhE,qDAAmD;AACnD,+DAAmE;AAOnE,IAAa,WAAW,GAAxB,MAAa,WAAW;IAGtB,YAAsB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAF/B,gBAAW,GAAG,8BAAc,GAAG,WAAW,CAAC;IAET,CAAC;IAE1C,MAAM,CAAC,IAAW;QAChB,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAQ,IAAI,CAAC,WAAW,EAAE,IAAI,EAAE,EAAE,OAAO,EAAE,UAAU,EAAE,CAAC,CAAC;IAChF,CAAC;IAED,MAAM,CAAC,IAAW;QAChB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAQ,IAAI,CAAC,WAAW,EAAE,IAAI,EAAE,EAAE,OAAO,EAAE,UAAU,EAAE,CAAC,CAAC;IAC/E,CAAC;IAED,IAAI,CAAC,EAAU;QACb,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAQ,GAAG,IAAI,CAAC,WAAW,IAAI,EAAE,EAAE,EAAE,EAAE,OAAO,EAAE,UAAU,EAAE,CAAC,CAAC;IACpF,CAAC;IAED,KAAK,CAAC,GAAS;QACb,MAAM,OAAO,GAAG,kCAAmB,CAAC,GAAG,CAAC,CAAC;QACzC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAU,IAAI,CAAC,WAAW,EAAE,EAAE,MAAM,EAAE,OAAO,EAAE,OAAO,EAAE,UAAU,EAAE,CAAC,CAAC;IAC5F,CAAC;IAED,MAAM,CAAC,EAAU;QACf,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC,WAAW,IAAI,EAAE,EAAE,EAAE,EAAE,OAAO,EAAE,UAAU,EAAE,CAAC,CAAC;IAChF,CAAC;CACF,CAAA;AAzBY,WAAW;IADvB,iBAAU,CAAC,EAAE,UAAU,EAAE,MAAM,EAAE,CAAC;6CAIL,iBAAU;GAH3B,WAAW,CAyBvB;AAzBY,kCAAW",
      names: [],
      sources: ["/Users/sarujanrajaratnam/Desktop/Ynov/Ynov_TEST_Projet/src/main/webapp/app/entities/task/task.service.ts"],
      sourcesContent: ["import { Injectable } from '@angular/core';\nimport { HttpClient, HttpResponse } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\nimport { SERVER_API_URL } from 'app/app.constants';\nimport { createRequestOption } from 'app/shared/util/request-util';\nimport { ITask } from 'app/shared/model/task.model';\n\ntype EntityResponseType = HttpResponse<ITask>;\ntype EntityArrayResponseType = HttpResponse<ITask[]>;\n\n@Injectable({ providedIn: 'root' })\nexport class TaskService {\n  public resourceUrl = SERVER_API_URL + 'api/tasks';\n\n  constructor(protected http: HttpClient) {}\n\n  create(task: ITask): Observable<EntityResponseType> {\n    return this.http.post<ITask>(this.resourceUrl, task, { observe: 'response' });\n  }\n\n  update(task: ITask): Observable<EntityResponseType> {\n    return this.http.put<ITask>(this.resourceUrl, task, { observe: 'response' });\n  }\n\n  find(id: number): Observable<EntityResponseType> {\n    return this.http.get<ITask>(`${this.resourceUrl}/${id}`, { observe: 'response' });\n  }\n\n  query(req?: any): Observable<EntityArrayResponseType> {\n    const options = createRequestOption(req);\n    return this.http.get<ITask[]>(this.resourceUrl, { params: options, observe: 'response' });\n  }\n\n  delete(id: number): Observable<HttpResponse<{}>> {\n    return this.http.delete(`${this.resourceUrl}/${id}`, { observe: 'response' });\n  }\n}\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "1bc8a51cbf6c98e5665d0cfbfcd226af0df5dea9"
  };
  var coverage = global[gcv] || (global[gcv] = {});

  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }

  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_uhlkuj9g = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}

cov_uhlkuj9g();
cov_uhlkuj9g().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});

/* istanbul ignore next */
cov_uhlkuj9g().s[1]++;
exports.TaskService = void 0;
const tslib_1 =
/* istanbul ignore next */
(cov_uhlkuj9g().s[2]++, require("tslib"));
const core_1 =
/* istanbul ignore next */
(cov_uhlkuj9g().s[3]++, require("@angular/core"));
const http_1 =
/* istanbul ignore next */
(cov_uhlkuj9g().s[4]++, require("@angular/common/http"));
const app_constants_1 =
/* istanbul ignore next */
(cov_uhlkuj9g().s[5]++, require("app/app.constants"));
const request_util_1 =
/* istanbul ignore next */
(cov_uhlkuj9g().s[6]++, require("app/shared/util/request-util"));

/* istanbul ignore next */
cov_uhlkuj9g().s[7]++;
let TaskService = class TaskService {
  constructor(http) {
    /* istanbul ignore next */
    cov_uhlkuj9g().f[0]++;
    cov_uhlkuj9g().s[8]++;
    this.http = http;

    /* istanbul ignore next */
    cov_uhlkuj9g().s[9]++;
    this.resourceUrl = app_constants_1.SERVER_API_URL + 'api/tasks';
  }

  create(task) {
    /* istanbul ignore next */
    cov_uhlkuj9g().f[1]++;
    cov_uhlkuj9g().s[10]++;
    return this.http.post(this.resourceUrl, task, {
      observe: 'response'
    });
  }

  update(task) {
    /* istanbul ignore next */
    cov_uhlkuj9g().f[2]++;
    cov_uhlkuj9g().s[11]++;
    return this.http.put(this.resourceUrl, task, {
      observe: 'response'
    });
  }

  find(id) {
    /* istanbul ignore next */
    cov_uhlkuj9g().f[3]++;
    cov_uhlkuj9g().s[12]++;
    return this.http.get(`${this.resourceUrl}/${id}`, {
      observe: 'response'
    });
  }

  query(req) {
    /* istanbul ignore next */
    cov_uhlkuj9g().f[4]++;
    const options =
    /* istanbul ignore next */
    (cov_uhlkuj9g().s[13]++, request_util_1.createRequestOption(req));

    /* istanbul ignore next */
    cov_uhlkuj9g().s[14]++;
    return this.http.get(this.resourceUrl, {
      params: options,
      observe: 'response'
    });
  }

  delete(id) {
    /* istanbul ignore next */
    cov_uhlkuj9g().f[5]++;
    cov_uhlkuj9g().s[15]++;
    return this.http.delete(`${this.resourceUrl}/${id}`, {
      observe: 'response'
    });
  }

};

/* istanbul ignore next */
cov_uhlkuj9g().s[16]++;
TaskService = tslib_1.__decorate([core_1.Injectable({
  providedIn: 'root'
}), tslib_1.__metadata("design:paramtypes", [http_1.HttpClient])], TaskService);

/* istanbul ignore next */
cov_uhlkuj9g().s[17]++;
exports.TaskService = TaskService;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9zYXJ1amFucmFqYXJhdG5hbS9EZXNrdG9wL1lub3YvWW5vdl9URVNUX1Byb2pldC9zcmMvbWFpbi93ZWJhcHAvYXBwL2VudGl0aWVzL3Rhc2svdGFzay5zZXJ2aWNlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQW1CRzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFuQkgsTUFBQSxNQUFBO0FBQUE7QUFBQSx3QkFBQSxPQUFBLENBQUEsZUFBQSxDQUFBLENBQUE7QUFDQSxNQUFBLE1BQUE7QUFBQTtBQUFBLHdCQUFBLE9BQUEsQ0FBQSxzQkFBQSxDQUFBLENBQUE7QUFHQSxNQUFBLGVBQUE7QUFBQTtBQUFBLHdCQUFBLE9BQUEsQ0FBQSxtQkFBQSxDQUFBLENBQUE7QUFDQSxNQUFBLGNBQUE7QUFBQTtBQUFBLHdCQUFBLE9BQUEsQ0FBQSw4QkFBQSxDQUFBLENBQUE7Ozs7QUFPQSxJQUFhLFdBQVcsR0FBeEIsTUFBYSxXQUFiLENBQXdCO0FBR3RCLEVBQUEsV0FBQSxDQUFzQixJQUF0QixFQUFzQztBQUFBO0FBQUE7QUFBQTtBQUFoQixTQUFBLElBQUEsR0FBQSxJQUFBOztBQUFnQjtBQUFBO0FBRi9CLFNBQUEsV0FBQSxHQUFjLGVBQUEsQ0FBQSxjQUFBLEdBQWlCLFdBQS9CO0FBRW1DOztBQUUxQyxFQUFBLE1BQU0sQ0FBQyxJQUFELEVBQVk7QUFBQTtBQUFBO0FBQUE7QUFDaEIsV0FBTyxLQUFLLElBQUwsQ0FBVSxJQUFWLENBQXNCLEtBQUssV0FBM0IsRUFBd0MsSUFBeEMsRUFBOEM7QUFBRSxNQUFBLE9BQU8sRUFBRTtBQUFYLEtBQTlDLENBQVA7QUFDRDs7QUFFRCxFQUFBLE1BQU0sQ0FBQyxJQUFELEVBQVk7QUFBQTtBQUFBO0FBQUE7QUFDaEIsV0FBTyxLQUFLLElBQUwsQ0FBVSxHQUFWLENBQXFCLEtBQUssV0FBMUIsRUFBdUMsSUFBdkMsRUFBNkM7QUFBRSxNQUFBLE9BQU8sRUFBRTtBQUFYLEtBQTdDLENBQVA7QUFDRDs7QUFFRCxFQUFBLElBQUksQ0FBQyxFQUFELEVBQVc7QUFBQTtBQUFBO0FBQUE7QUFDYixXQUFPLEtBQUssSUFBTCxDQUFVLEdBQVYsQ0FBcUIsR0FBRyxLQUFLLFdBQVcsSUFBSSxFQUFFLEVBQTlDLEVBQWtEO0FBQUUsTUFBQSxPQUFPLEVBQUU7QUFBWCxLQUFsRCxDQUFQO0FBQ0Q7O0FBRUQsRUFBQSxLQUFLLENBQUMsR0FBRCxFQUFVO0FBQUE7QUFBQTtBQUNiLFVBQU0sT0FBTztBQUFBO0FBQUEsNkJBQUcsY0FBQSxDQUFBLG1CQUFBLENBQW9CLEdBQXBCLENBQUgsQ0FBYjs7QUFEYTtBQUFBO0FBRWIsV0FBTyxLQUFLLElBQUwsQ0FBVSxHQUFWLENBQXVCLEtBQUssV0FBNUIsRUFBeUM7QUFBRSxNQUFBLE1BQU0sRUFBRSxPQUFWO0FBQW1CLE1BQUEsT0FBTyxFQUFFO0FBQTVCLEtBQXpDLENBQVA7QUFDRDs7QUFFRCxFQUFBLE1BQU0sQ0FBQyxFQUFELEVBQVc7QUFBQTtBQUFBO0FBQUE7QUFDZixXQUFPLEtBQUssSUFBTCxDQUFVLE1BQVYsQ0FBaUIsR0FBRyxLQUFLLFdBQVcsSUFBSSxFQUFFLEVBQTFDLEVBQThDO0FBQUUsTUFBQSxPQUFPLEVBQUU7QUFBWCxLQUE5QyxDQUFQO0FBQ0Q7O0FBeEJxQixDQUF4Qjs7OztBQUFhLFdBQVcsR0FBQSxPQUFBLENBQUEsVUFBQSxDQUFBLENBRHZCLE1BQUEsQ0FBQSxVQUFBLENBQVc7QUFBRSxFQUFBLFVBQVUsRUFBRTtBQUFkLENBQVgsQ0FDdUIsRSx5Q0FHTSxNQUFBLENBQUEsVSxFQUhOLENBQUEsRUFBWCxXQUFXLENBQVg7Ozs7QUFBQSxPQUFBLENBQUEsV0FBQSxHQUFBLFdBQUEiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJbmplY3RhYmxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBIdHRwQ2xpZW50LCBIdHRwUmVzcG9uc2UgfSBmcm9tICdAYW5ndWxhci9jb21tb24vaHR0cCc7XG5pbXBvcnQgeyBPYnNlcnZhYmxlIH0gZnJvbSAncnhqcyc7XG5cbmltcG9ydCB7IFNFUlZFUl9BUElfVVJMIH0gZnJvbSAnYXBwL2FwcC5jb25zdGFudHMnO1xuaW1wb3J0IHsgY3JlYXRlUmVxdWVzdE9wdGlvbiB9IGZyb20gJ2FwcC9zaGFyZWQvdXRpbC9yZXF1ZXN0LXV0aWwnO1xuaW1wb3J0IHsgSVRhc2sgfSBmcm9tICdhcHAvc2hhcmVkL21vZGVsL3Rhc2subW9kZWwnO1xuXG50eXBlIEVudGl0eVJlc3BvbnNlVHlwZSA9IEh0dHBSZXNwb25zZTxJVGFzaz47XG50eXBlIEVudGl0eUFycmF5UmVzcG9uc2VUeXBlID0gSHR0cFJlc3BvbnNlPElUYXNrW10+O1xuXG5ASW5qZWN0YWJsZSh7IHByb3ZpZGVkSW46ICdyb290JyB9KVxuZXhwb3J0IGNsYXNzIFRhc2tTZXJ2aWNlIHtcbiAgcHVibGljIHJlc291cmNlVXJsID0gU0VSVkVSX0FQSV9VUkwgKyAnYXBpL3Rhc2tzJztcblxuICBjb25zdHJ1Y3Rvcihwcm90ZWN0ZWQgaHR0cDogSHR0cENsaWVudCkge31cblxuICBjcmVhdGUodGFzazogSVRhc2spOiBPYnNlcnZhYmxlPEVudGl0eVJlc3BvbnNlVHlwZT4ge1xuICAgIHJldHVybiB0aGlzLmh0dHAucG9zdDxJVGFzaz4odGhpcy5yZXNvdXJjZVVybCwgdGFzaywgeyBvYnNlcnZlOiAncmVzcG9uc2UnIH0pO1xuICB9XG5cbiAgdXBkYXRlKHRhc2s6IElUYXNrKTogT2JzZXJ2YWJsZTxFbnRpdHlSZXNwb25zZVR5cGU+IHtcbiAgICByZXR1cm4gdGhpcy5odHRwLnB1dDxJVGFzaz4odGhpcy5yZXNvdXJjZVVybCwgdGFzaywgeyBvYnNlcnZlOiAncmVzcG9uc2UnIH0pO1xuICB9XG5cbiAgZmluZChpZDogbnVtYmVyKTogT2JzZXJ2YWJsZTxFbnRpdHlSZXNwb25zZVR5cGU+IHtcbiAgICByZXR1cm4gdGhpcy5odHRwLmdldDxJVGFzaz4oYCR7dGhpcy5yZXNvdXJjZVVybH0vJHtpZH1gLCB7IG9ic2VydmU6ICdyZXNwb25zZScgfSk7XG4gIH1cblxuICBxdWVyeShyZXE/OiBhbnkpOiBPYnNlcnZhYmxlPEVudGl0eUFycmF5UmVzcG9uc2VUeXBlPiB7XG4gICAgY29uc3Qgb3B0aW9ucyA9IGNyZWF0ZVJlcXVlc3RPcHRpb24ocmVxKTtcbiAgICByZXR1cm4gdGhpcy5odHRwLmdldDxJVGFza1tdPih0aGlzLnJlc291cmNlVXJsLCB7IHBhcmFtczogb3B0aW9ucywgb2JzZXJ2ZTogJ3Jlc3BvbnNlJyB9KTtcbiAgfVxuXG4gIGRlbGV0ZShpZDogbnVtYmVyKTogT2JzZXJ2YWJsZTxIdHRwUmVzcG9uc2U8e30+PiB7XG4gICAgcmV0dXJuIHRoaXMuaHR0cC5kZWxldGUoYCR7dGhpcy5yZXNvdXJjZVVybH0vJHtpZH1gLCB7IG9ic2VydmU6ICdyZXNwb25zZScgfSk7XG4gIH1cbn1cbiJdfQ==