{"version":3,"sources":["/Users/sarujanrajaratnam/Desktop/Ynov/Ynov_TEST_Projet/src/main/webapp/app/entities/country/country.service.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmBG;;;;;;;;;;;;;;;;;;;;AAnBH,MAAA,MAAA;AAAA;AAAA,yBAAA,OAAA,CAAA,eAAA,CAAA,CAAA;AACA,MAAA,MAAA;AAAA;AAAA,yBAAA,OAAA,CAAA,sBAAA,CAAA,CAAA;AAGA,MAAA,eAAA;AAAA;AAAA,yBAAA,OAAA,CAAA,mBAAA,CAAA,CAAA;AACA,MAAA,cAAA;AAAA;AAAA,yBAAA,OAAA,CAAA,8BAAA,CAAA,CAAA;;;;AAOA,IAAa,cAAc,GAA3B,MAAa,cAAb,CAA2B;AAGzB,EAAA,WAAA,CAAsB,IAAtB,EAAsC;AAAA;AAAA;AAAA;AAAhB,SAAA,IAAA,GAAA,IAAA;;AAAgB;AAAA;AAF/B,SAAA,WAAA,GAAc,eAAA,CAAA,cAAA,GAAiB,eAA/B;AAEmC;;AAE1C,EAAA,MAAM,CAAC,OAAD,EAAkB;AAAA;AAAA;AAAA;AACtB,WAAO,KAAK,IAAL,CAAU,IAAV,CAAyB,KAAK,WAA9B,EAA2C,OAA3C,EAAoD;AAAE,MAAA,OAAO,EAAE;AAAX,KAApD,CAAP;AACD;;AAED,EAAA,MAAM,CAAC,OAAD,EAAkB;AAAA;AAAA;AAAA;AACtB,WAAO,KAAK,IAAL,CAAU,GAAV,CAAwB,KAAK,WAA7B,EAA0C,OAA1C,EAAmD;AAAE,MAAA,OAAO,EAAE;AAAX,KAAnD,CAAP;AACD;;AAED,EAAA,IAAI,CAAC,EAAD,EAAW;AAAA;AAAA;AAAA;AACb,WAAO,KAAK,IAAL,CAAU,GAAV,CAAwB,GAAG,KAAK,WAAW,IAAI,EAAE,EAAjD,EAAqD;AAAE,MAAA,OAAO,EAAE;AAAX,KAArD,CAAP;AACD;;AAED,EAAA,KAAK,CAAC,GAAD,EAAU;AAAA;AAAA;AACb,UAAM,OAAO;AAAA;AAAA,8BAAG,cAAA,CAAA,mBAAA,CAAoB,GAApB,CAAH,CAAb;;AADa;AAAA;AAEb,WAAO,KAAK,IAAL,CAAU,GAAV,CAA0B,KAAK,WAA/B,EAA4C;AAAE,MAAA,MAAM,EAAE,OAAV;AAAmB,MAAA,OAAO,EAAE;AAA5B,KAA5C,CAAP;AACD;;AAED,EAAA,MAAM,CAAC,EAAD,EAAW;AAAA;AAAA;AAAA;AACf,WAAO,KAAK,IAAL,CAAU,MAAV,CAAiB,GAAG,KAAK,WAAW,IAAI,EAAE,EAA1C,EAA8C;AAAE,MAAA,OAAO,EAAE;AAAX,KAA9C,CAAP;AACD;;AAxBwB,CAA3B;;;;AAAa,cAAc,GAAA,OAAA,CAAA,UAAA,CAAA,CAD1B,MAAA,CAAA,UAAA,CAAW;AAAE,EAAA,UAAU,EAAE;AAAd,CAAX,CAC0B,E,yCAGG,MAAA,CAAA,U,EAHH,CAAA,EAAd,cAAc,CAAd;;;;AAAA,OAAA,CAAA,cAAA,GAAA,cAAA","sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient, HttpResponse } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\nimport { SERVER_API_URL } from 'app/app.constants';\nimport { createRequestOption } from 'app/shared/util/request-util';\nimport { ICountry } from 'app/shared/model/country.model';\n\ntype EntityResponseType = HttpResponse<ICountry>;\ntype EntityArrayResponseType = HttpResponse<ICountry[]>;\n\n@Injectable({ providedIn: 'root' })\nexport class CountryService {\n  public resourceUrl = SERVER_API_URL + 'api/countries';\n\n  constructor(protected http: HttpClient) {}\n\n  create(country: ICountry): Observable<EntityResponseType> {\n    return this.http.post<ICountry>(this.resourceUrl, country, { observe: 'response' });\n  }\n\n  update(country: ICountry): Observable<EntityResponseType> {\n    return this.http.put<ICountry>(this.resourceUrl, country, { observe: 'response' });\n  }\n\n  find(id: number): Observable<EntityResponseType> {\n    return this.http.get<ICountry>(`${this.resourceUrl}/${id}`, { observe: 'response' });\n  }\n\n  query(req?: any): Observable<EntityArrayResponseType> {\n    const options = createRequestOption(req);\n    return this.http.get<ICountry[]>(this.resourceUrl, { params: options, observe: 'response' });\n  }\n\n  delete(id: number): Observable<HttpResponse<{}>> {\n    return this.http.delete(`${this.resourceUrl}/${id}`, { observe: 'response' });\n  }\n}\n"]}