{"version":3,"sources":["/Users/sarujanrajaratnam/Desktop/Ynov/Ynov_TEST_Projet/src/main/webapp/app/entities/job-history/job-history-update.component.ts"],"names":[],"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","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { HttpResponse } from '@angular/common/http';\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { ActivatedRoute } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport * as moment from 'moment';\nimport { DATE_TIME_FORMAT } from 'app/shared/constants/input.constants';\n\nimport { IJobHistory, JobHistory } from 'app/shared/model/job-history.model';\nimport { JobHistoryService } from './job-history.service';\nimport { IJob } from 'app/shared/model/job.model';\nimport { JobService } from 'app/entities/job/job.service';\nimport { IDepartment } from 'app/shared/model/department.model';\nimport { DepartmentService } from 'app/entities/department/department.service';\nimport { IEmployee } from 'app/shared/model/employee.model';\nimport { EmployeeService } from 'app/entities/employee/employee.service';\n\ntype SelectableEntity = IJob | IDepartment | IEmployee;\n\n@Component({\n  selector: 'jhi-job-history-update',\n  templateUrl: './job-history-update.component.html',\n})\nexport class JobHistoryUpdateComponent implements OnInit {\n  isSaving = false;\n  jobs: IJob[] = [];\n  departments: IDepartment[] = [];\n  employees: IEmployee[] = [];\n\n  editForm = this.fb.group({\n    id: [],\n    startDate: [],\n    endDate: [],\n    language: [],\n    job: [],\n    department: [],\n    employee: [],\n  });\n\n  constructor(\n    protected jobHistoryService: JobHistoryService,\n    protected jobService: JobService,\n    protected departmentService: DepartmentService,\n    protected employeeService: EmployeeService,\n    protected activatedRoute: ActivatedRoute,\n    private fb: FormBuilder\n  ) {}\n\n  ngOnInit(): void {\n    this.activatedRoute.data.subscribe(({ jobHistory }) => {\n      if (!jobHistory.id) {\n        const today = moment().startOf('day');\n        jobHistory.startDate = today;\n        jobHistory.endDate = today;\n      }\n\n      this.updateForm(jobHistory);\n\n      this.jobService\n        .query({ filter: 'jobhistory-is-null' })\n        .pipe(\n          map((res: HttpResponse<IJob[]>) => {\n            return res.body || [];\n          })\n        )\n        .subscribe((resBody: IJob[]) => {\n          if (!jobHistory.job || !jobHistory.job.id) {\n            this.jobs = resBody;\n          } else {\n            this.jobService\n              .find(jobHistory.job.id)\n              .pipe(\n                map((subRes: HttpResponse<IJob>) => {\n                  return subRes.body ? [subRes.body].concat(resBody) : resBody;\n                })\n              )\n              .subscribe((concatRes: IJob[]) => (this.jobs = concatRes));\n          }\n        });\n\n      this.departmentService\n        .query({ filter: 'jobhistory-is-null' })\n        .pipe(\n          map((res: HttpResponse<IDepartment[]>) => {\n            return res.body || [];\n          })\n        )\n        .subscribe((resBody: IDepartment[]) => {\n          if (!jobHistory.department || !jobHistory.department.id) {\n            this.departments = resBody;\n          } else {\n            this.departmentService\n              .find(jobHistory.department.id)\n              .pipe(\n                map((subRes: HttpResponse<IDepartment>) => {\n                  return subRes.body ? [subRes.body].concat(resBody) : resBody;\n                })\n              )\n              .subscribe((concatRes: IDepartment[]) => (this.departments = concatRes));\n          }\n        });\n\n      this.employeeService\n        .query({ filter: 'jobhistory-is-null' })\n        .pipe(\n          map((res: HttpResponse<IEmployee[]>) => {\n            return res.body || [];\n          })\n        )\n        .subscribe((resBody: IEmployee[]) => {\n          if (!jobHistory.employee || !jobHistory.employee.id) {\n            this.employees = resBody;\n          } else {\n            this.employeeService\n              .find(jobHistory.employee.id)\n              .pipe(\n                map((subRes: HttpResponse<IEmployee>) => {\n                  return subRes.body ? [subRes.body].concat(resBody) : resBody;\n                })\n              )\n              .subscribe((concatRes: IEmployee[]) => (this.employees = concatRes));\n          }\n        });\n    });\n  }\n\n  updateForm(jobHistory: IJobHistory): void {\n    this.editForm.patchValue({\n      id: jobHistory.id,\n      startDate: jobHistory.startDate ? jobHistory.startDate.format(DATE_TIME_FORMAT) : null,\n      endDate: jobHistory.endDate ? jobHistory.endDate.format(DATE_TIME_FORMAT) : null,\n      language: jobHistory.language,\n      job: jobHistory.job,\n      department: jobHistory.department,\n      employee: jobHistory.employee,\n    });\n  }\n\n  previousState(): void {\n    window.history.back();\n  }\n\n  save(): void {\n    this.isSaving = true;\n    const jobHistory = this.createFromForm();\n    if (jobHistory.id !== undefined) {\n      this.subscribeToSaveResponse(this.jobHistoryService.update(jobHistory));\n    } else {\n      this.subscribeToSaveResponse(this.jobHistoryService.create(jobHistory));\n    }\n  }\n\n  private createFromForm(): IJobHistory {\n    return {\n      ...new JobHistory(),\n      id: this.editForm.get(['id'])!.value,\n      startDate: this.editForm.get(['startDate'])!.value ? moment(this.editForm.get(['startDate'])!.value, DATE_TIME_FORMAT) : undefined,\n      endDate: this.editForm.get(['endDate'])!.value ? moment(this.editForm.get(['endDate'])!.value, DATE_TIME_FORMAT) : undefined,\n      language: this.editForm.get(['language'])!.value,\n      job: this.editForm.get(['job'])!.value,\n      department: this.editForm.get(['department'])!.value,\n      employee: this.editForm.get(['employee'])!.value,\n    };\n  }\n\n  protected subscribeToSaveResponse(result: Observable<HttpResponse<IJobHistory>>): void {\n    result.subscribe(\n      () => this.onSaveSuccess(),\n      () => this.onSaveError()\n    );\n  }\n\n  protected onSaveSuccess(): void {\n    this.isSaving = false;\n    this.previousState();\n  }\n\n  protected onSaveError(): void {\n    this.isSaving = false;\n  }\n\n  trackById(index: number, item: SelectableEntity): any {\n    return item.id;\n  }\n}\n"]}