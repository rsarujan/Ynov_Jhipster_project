{"version":3,"sources":["/Users/sarujanrajaratnam/Desktop/Ynov/Ynov_TEST_Projet/src/main/webapp/app/admin/metrics/metrics.service.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoBI;;;;;;;;;;;;;;;;;;;;AApBJ,MAAA,MAAA;AAAA;AAAA,yBAAA,OAAA,CAAA,eAAA,CAAA,CAAA;AACA,MAAA,MAAA;AAAA;AAAA,yBAAA,OAAA,CAAA,sBAAA,CAAA,CAAA;AAGA,MAAA,eAAA;AAAA;AAAA,yBAAA,OAAA,CAAA,mBAAA,CAAA,CAAA;;;;AAQA,IAAa,cAAc,GAA3B,MAAa,cAAb,CAA2B;AACzB,EAAA,WAAA,CAAoB,IAApB,EAAoC;AAAA;AAAA;AAAA;AAAhB,SAAA,IAAA,GAAA,IAAA;AAAoB;;AAExC,EAAA,UAAU,GAAA;AAAA;AAAA;AAAA;AACR,WAAO,KAAK,IAAL,CAAU,GAAV,CAAuB,eAAA,CAAA,cAAA,GAAiB,uBAAxC,CAAP;AACD;;AAED,EAAA,UAAU,GAAA;AAAA;AAAA;AAAA;AACR,WAAO,KAAK,IAAL,CAAU,GAAV,CAA0B,eAAA,CAAA,cAAA,GAAiB,uBAA3C,CAAP;AACD;;AATwB,CAA3B;;;;AAAa,cAAc,GAAA,OAAA,CAAA,UAAA,CAAA,CAD1B,MAAA,CAAA,UAAA,CAAW;AAAE,EAAA,UAAU,EAAE;AAAd,CAAX,CAC0B,E,yCACC,MAAA,CAAA,U,EADD,CAAA,EAAd,cAAc,CAAd;;;;AAAA,OAAA,CAAA,cAAA,GAAA,cAAA","sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\nimport { SERVER_API_URL } from 'app/app.constants';\n\nexport type MetricsKey = 'jvm' | 'http.server.requests' | 'cache' | 'services' | 'databases' | 'garbageCollector' | 'processMetrics';\nexport type Metrics = { [key in MetricsKey]: any };\nexport type Thread = any;\nexport type ThreadDump = { threads: Thread[] };\n\n@Injectable({ providedIn: 'root' })\nexport class MetricsService {\n  constructor(private http: HttpClient) {}\n\n  getMetrics(): Observable<Metrics> {\n    return this.http.get<Metrics>(SERVER_API_URL + 'management/jhimetrics');\n  }\n\n  threadDump(): Observable<ThreadDump> {\n    return this.http.get<ThreadDump>(SERVER_API_URL + 'management/threaddump');\n  }\n}\n"]}