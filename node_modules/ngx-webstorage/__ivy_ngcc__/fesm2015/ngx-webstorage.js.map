{"version":3,"file":"ngx-webstorage.js","sources":["ng:/ngx-webstorage/lib/constants/strategy.ts","ng:/ngx-webstorage/lib/helpers/compat.ts","ng:/ngx-webstorage/lib/helpers/noop.ts","ng:/ngx-webstorage/lib/constants/config.ts","ng:/ngx-webstorage/lib/helpers/storageKeyManager.ts","ng:/ngx-webstorage/lib/core/templates/syncStorage.ts","ng:/ngx-webstorage/lib/core/templates/asyncStorage.ts","ng:/ngx-webstorage/lib/core/strategyCache.ts","ng:/ngx-webstorage/lib/core/nativeStorage.ts","ng:/ngx-webstorage/lib/strategies/baseSyncStorage.ts","ng:/ngx-webstorage/lib/strategies/localStorage.ts","ng:/ngx-webstorage/lib/strategies/sessionStorage.ts","ng:/ngx-webstorage/lib/strategies/inMemory.ts","ng:/ngx-webstorage/lib/strategies/index.ts","ng:/ngx-webstorage/stubs/storageStrategy.stub.ts","ng:/ngx-webstorage/stubs/storage.stub.ts","ng:/ngx-webstorage/lib/services/strategyIndex.ts","ng:/ngx-webstorage/lib/services/localStorage.ts","ng:/ngx-webstorage/lib/services/sessionStorage.ts","ng:/ngx-webstorage/lib/helpers/decoratorBuilder.ts","ng:/ngx-webstorage/lib/decorators.ts","ng:/ngx-webstorage/lib/services/index.ts","ng:/ngx-webstorage/lib/module.ts","ng:/ngx-webstorage/public_api.ts","ng:/ngx-webstorage/ngx-webstorage.ts"],"names":["buildService"],"mappings":"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","sourcesContent":["export enum StorageStrategies {\n\tLocal = 'local_strategy',\n\tSession = 'session_strategy',\n\tInMemory = 'in_memory_strategy'\n}\n","import {WebStorage} from '../core/interfaces/webStorage';\n\nexport class CompatHelper {\n\n\tstatic isStorageAvailable(storage: WebStorage): boolean {\n\t\tlet available = true;\n\t\ttry {\n\t\t\tif (typeof storage === 'object') {\n\t\t\t\tstorage.setItem('test-storage', 'foobar');\n\t\t\t\tstorage.removeItem('test-storage');\n\t\t\t}\n\t\t\telse available = false;\n\t\t} catch(e) {\n\t\t\tavailable = false;\n\t\t}\n\t\treturn available;\n\t}\n\n}\n","export function noop() {}\n","export const DefaultPrefix = 'ngx-webstorage';\nexport const DefaultSeparator = '|';\nexport const DefaultIsCaseSensitive = false;\n","import {DefaultIsCaseSensitive, DefaultPrefix, DefaultSeparator} from '../constants/config';\nimport {NgxWebstorageConfiguration} from '../config';\n\nexport class StorageKeyManager {\n\t\n\tstatic prefix = DefaultPrefix;\n\tstatic separator = DefaultSeparator;\n\tstatic isCaseSensitive = DefaultIsCaseSensitive;\n\t\n\tstatic normalize(raw: string) {\n\t\traw = StorageKeyManager.isCaseSensitive ? raw : raw.toLowerCase();\n\t\treturn `${StorageKeyManager.prefix}${StorageKeyManager.separator}${raw}`;\n\t}\n\t\n\tstatic isNormalizedKey(key: string) {\n\t\treturn key.indexOf(StorageKeyManager.prefix + StorageKeyManager.separator) === 0;\n\t}\n\t\n\tstatic setPrefix(prefix: string) {\n\t\tStorageKeyManager.prefix = prefix;\n\t}\n\t\n\tstatic setSeparator(separator: string) {\n\t\tStorageKeyManager.separator = separator;\n\t}\n\t\n\tstatic setCaseSensitive(enable: boolean) {\n\t\tStorageKeyManager.isCaseSensitive = enable;\n\t}\n\t\n\tstatic consumeConfiguration(config: NgxWebstorageConfiguration) {\n\t\tif ('prefix' in config) this.setPrefix(config.prefix);\n\t\tif ('separator' in config) this.setSeparator(config.separator);\n\t\tif ('caseSensitive' in config) this.setCaseSensitive(config.caseSensitive);\n\t}\n}\n","import {StorageStrategy} from '../interfaces/storageStrategy';\nimport {noop} from '../../helpers/noop';\nimport {StorageService} from '../interfaces/storageService';\nimport {StorageKeyManager} from '../../helpers/storageKeyManager';\nimport {Observable} from 'rxjs';\nimport {distinctUntilChanged, filter, shareReplay, switchMap} from 'rxjs/operators';\n\nexport class SyncStorage implements StorageService {\n\tconstructor(protected strategy: StorageStrategy<any>) {\n\t}\n\n\tretrieve(key: string): any {\n\t\tlet value: any;\n\t\tthis.strategy.get(StorageKeyManager.normalize(key)).subscribe((result) => value = typeof result === 'undefined' ? null : result);\n\t\treturn value;\n\t}\n\n\tstore(key: string, value: any): any {\n\t\tthis.strategy.set(StorageKeyManager.normalize(key), value).subscribe(noop);\n\t\treturn value;\n\t}\n\n\tclear(key?: string): void {\n\t\tif (key !== undefined)\n\t\t\tthis.strategy.del(StorageKeyManager.normalize(key)).subscribe(noop);\n\t\telse this.strategy.clear().subscribe(noop);\n\t}\n\n\tgetStrategyName(): string {return this.strategy.name; }\n\n\tobserve(key: string): Observable<any> {\n\t\tkey = StorageKeyManager.normalize(key);\n\t\treturn this.strategy.keyChanges.pipe(\n\t\t\tfilter((changed: string) => changed === null || changed === key),\n\t\t\tswitchMap(() => this.strategy.get(key)),\n\t\t\tdistinctUntilChanged(),\n\t\t\tshareReplay()\n\t\t);\n\t}\n\n}\n","import {StorageStrategy} from '../interfaces/storageStrategy';\nimport {Observable} from 'rxjs';\nimport {StorageService} from '../interfaces/storageService';\nimport {StorageKeyManager} from '../../helpers/storageKeyManager';\nimport {distinctUntilChanged, filter, map, shareReplay, switchMap} from 'rxjs/operators';\n\nexport class AsyncStorage implements StorageService {\n\n\tconstructor(protected strategy: StorageStrategy<any>) {\n\t}\n\n\tretrieve(key: string): Observable<any> {\n\t\treturn this.strategy.get(StorageKeyManager.normalize(key)).pipe(\n\t\t\tmap((value: any) => typeof value === 'undefined' ? null : value)\n\t\t);\n\t}\n\n\tstore(key: string, value: any): Observable<any> {\n\t\treturn this.strategy.set(StorageKeyManager.normalize(key), value);\n\t}\n\n\tclear(key?: string): Observable<void> {\n\t\treturn key !== undefined ? this.strategy.del(StorageKeyManager.normalize(key)) : this.strategy.clear();\n\t}\n\n\tgetStrategyName(): string { return this.strategy.name; }\n\n\tobserve(key: string): Observable<any> {\n\t\tkey = StorageKeyManager.normalize(key);\n\t\treturn this.strategy.keyChanges.pipe(\n\t\t\tfilter((changed: string) => changed === null || changed === key),\n\t\t\tswitchMap(() => this.strategy.get(key)),\n\t\t\tdistinctUntilChanged(),\n\t\t\tshareReplay()\n\t\t);\n\t}\n}\n","import {Injectable} from '@angular/core';\n\nexport interface StrategyCache {\n\t[key: string]: any;\n}\n\n@Injectable({providedIn: 'root'})\nexport class StrategyCacheService {\n\n\tprotected caches: { [name: string]: StrategyCache } = {};\n\n\tget(strategyName: string, key: string) {\n\t\treturn this.getCacheStore(strategyName)[key];\n\t}\n\n\tset(strategyName: string, key: string, value: any) {\n\t\tthis.getCacheStore(strategyName)[key] = value;\n\t}\n\n\tdel(strategyName: string, key: string) {\n\t\tdelete this.getCacheStore(strategyName)[key];\n\t}\n\n\tclear(strategyName: string) {\n\t\tthis.caches[strategyName] = {} as StrategyCache;\n\t}\n\n\tprotected getCacheStore(strategyName: string): StrategyCache {\n\t\tif (strategyName in this.caches) return this.caches[strategyName];\n\t\treturn this.caches[strategyName] = {} as StrategyCache;\n\t}\n}\n","import {FactoryProvider, InjectionToken} from '@angular/core';\nimport {WebStorage} from './interfaces/webStorage';\n\nexport const LOCAL_STORAGE: InjectionToken<WebStorage> = new InjectionToken<WebStorage>('window_local_storage');\n\nexport function getLocalStorage() {\n\treturn (typeof window !== 'undefined') ? window.localStorage : null;\n}\n\nexport const LocalStorageProvider: FactoryProvider = {provide: LOCAL_STORAGE, useFactory: getLocalStorage};\n\nexport const SESSION_STORAGE: InjectionToken<WebStorage> = new InjectionToken<WebStorage>('window_session_storage');\n\nexport function getSessionStorage() {\n\treturn (typeof window !== 'undefined') ? window.sessionStorage : null;\n}\n\nexport const SessionStorageProvider: FactoryProvider = {provide: SESSION_STORAGE, useFactory: getSessionStorage};\n","import {StorageStrategy} from '../core/interfaces/storageStrategy';\nimport {Observable, of, Subject} from 'rxjs';\nimport {StrategyCacheService} from '../core/strategyCache';\nimport {CompatHelper} from '../helpers/compat';\nimport {WebStorage} from '../core/interfaces/webStorage';\n\nexport abstract class BaseSyncStorageStrategy implements StorageStrategy<any> {\n\treadonly keyChanges: Subject<string> = new Subject();\n\tabstract readonly name: string;\n\n\tconstructor(protected storage: WebStorage, protected cache: StrategyCacheService) {}\n\n\tprotected _isAvailable: boolean;\n\n\tget isAvailable(): boolean {\n\t\tif (this._isAvailable === undefined) this._isAvailable = CompatHelper.isStorageAvailable(this.storage);\n\t\treturn this._isAvailable;\n\t}\n\t\n\tget(key: string): Observable<any> {\n\t\tlet data: any = this.cache.get(this.name, key);\n\t\tif (data !== undefined) return of(data);\n\n\t\ttry {\n\t\t\tconst item: any = this.storage.getItem(key);\n\t\t\tif (item !== null) {\n\t\t\t\tdata = JSON.parse(item);\n\t\t\t\tthis.cache.set(this.name, key, data);\n\t\t\t}\n\t\t} catch(err) {\n\t\t\tconsole.warn(err);\n\t\t}\n\n\t\treturn of(data);\n\t}\n\n\tset(key: string, value: any): Observable<any> {\n\t\tconst data: string = JSON.stringify(value);\n\t\tthis.storage.setItem(key, data);\n\t\tthis.cache.set(this.name, key, value);\n\t\tthis.keyChanges.next(key);\n\t\treturn of(value);\n\t}\n\n\tdel(key: string): Observable<void> {\n\t\tthis.storage.removeItem(key);\n\t\tthis.cache.del(this.name, key);\n\t\tthis.keyChanges.next(key);\n\t\treturn of(null);\n\t}\n\n\tclear(): Observable<void> {\n\t\tthis.storage.clear();\n\t\tthis.cache.clear(this.name);\n\t\tthis.keyChanges.next(null);\n\t\treturn of(null);\n\t}\n\n}\n","import {StrategyCacheService} from '../core/strategyCache';\nimport {BaseSyncStorageStrategy} from './baseSyncStorage';\nimport {Inject, Injectable, NgZone, PLATFORM_ID} from '@angular/core';\nimport {LOCAL_STORAGE} from '../core/nativeStorage';\nimport {StorageStrategies} from '../constants/strategy';\nimport {isPlatformBrowser} from '@angular/common';\nimport {WebStorage} from '../core/interfaces/webStorage';\n\n@Injectable()\nexport class LocalStorageStrategy extends BaseSyncStorageStrategy {\n\tstatic readonly strategyName: string = StorageStrategies.Local;\n\treadonly name: string = LocalStorageStrategy.strategyName;\n\n\tconstructor(@Inject(LOCAL_STORAGE) protected storage: WebStorage,\n\t            protected cache: StrategyCacheService,\n\t            @Inject(PLATFORM_ID) protected platformId: any,\n\t            protected zone: NgZone) {\n\t\tsuper(storage, cache);\n\t\tif (isPlatformBrowser(this.platformId)) this.listenExternalChanges();\n\t}\n\n\tprotected listenExternalChanges() {\n\t\twindow.addEventListener('storage', (event: StorageEvent) => this.zone.run(() => {\n\t\t\tif (event.storageArea !== this.storage) return;\n\t\t\tconst key: string = event.key;\n\t\t\tif (key !== null) this.cache.del(this.name, event.key);\n\t\t\telse this.cache.clear(this.name);\n\t\t\tthis.keyChanges.next(key);\n\t\t}));\n\t}\n\n}\n","import {StrategyCacheService} from '../core/strategyCache';\nimport {BaseSyncStorageStrategy} from './baseSyncStorage';\nimport {Inject, Injectable, NgZone, PLATFORM_ID} from '@angular/core';\nimport {SESSION_STORAGE} from '../core/nativeStorage';\nimport {StorageStrategies} from '../constants/strategy';\nimport {isPlatformBrowser} from '@angular/common';\nimport {WebStorage} from '../core/interfaces/webStorage';\n\n@Injectable()\nexport class SessionStorageStrategy extends BaseSyncStorageStrategy {\n\tstatic readonly strategyName: string = StorageStrategies.Session;\n\treadonly name: string = SessionStorageStrategy.strategyName;\n\n\tconstructor(@Inject(SESSION_STORAGE) protected storage: WebStorage,\n\t            protected cache: StrategyCacheService,\n\t            @Inject(PLATFORM_ID) protected platformId: any,\n\t            protected zone: NgZone) {\n\t\tsuper(storage, cache);\n\t\tif (isPlatformBrowser(this.platformId)) this.listenExternalChanges();\n\t}\n\n\tprotected listenExternalChanges() {\n\t\twindow.addEventListener('storage', (event: StorageEvent) => this.zone.run(() => {\n\t\t\tif (event.storageArea !== this.storage) return;\n\t\t\tconst key: string = event.key;\n\t\t\tif (event.key !== null) this.cache.del(this.name, event.key);\n\t\t\telse this.cache.clear(this.name);\n\t\t\tthis.keyChanges.next(key);\n\t\t}));\n\t}\n\n}\n","import {StorageStrategy} from '../core/interfaces/storageStrategy';\nimport {Observable, of, Subject} from 'rxjs';\nimport {StrategyCacheService} from '../core/strategyCache';\nimport {StorageStrategies} from '../constants/strategy';\nimport {Inject, Injectable} from '@angular/core';\n\n@Injectable()\nexport class InMemoryStorageStrategy implements StorageStrategy<any> {\n\tstatic readonly strategyName: string = StorageStrategies.InMemory;\n\treadonly keyChanges: Subject<string> = new Subject();\n\tisAvailable: boolean = true;\n\treadonly name: string = InMemoryStorageStrategy.strategyName;\n\n\tconstructor(@Inject(StrategyCacheService) protected cache: StrategyCacheService) {}\n\n\tget(key: string): Observable<any> {\n\t\treturn of(this.cache.get(this.name, key));\n\t}\n\n\tset(key: string, value: any): Observable<any> {\n\t\tthis.cache.set(this.name, key, value);\n\t\tthis.keyChanges.next(key);\n\t\treturn of(value);\n\t}\n\n\tdel(key: string): Observable<void> {\n\t\tthis.cache.del(this.name, key);\n\t\tthis.keyChanges.next(key);\n\t\treturn of(null);\n\t}\n\n\tclear(): Observable<void> {\n\t\tthis.cache.clear(this.name);\n\t\tthis.keyChanges.next(null);\n\t\treturn of(null);\n\t}\n\n}\n","import {InjectionToken, Provider} from '@angular/core';\nimport {StorageStrategy} from '../core/interfaces/storageStrategy';\nimport {LocalStorageStrategy} from './localStorage';\nimport {SessionStorageStrategy} from './sessionStorage';\nimport {InMemoryStorageStrategy} from './inMemory';\n\nexport const STORAGE_STRATEGIES: InjectionToken<StorageStrategy<any>> = new InjectionToken<StorageStrategy<any>>('STORAGE_STRATEGIES');\n\nexport const Strategies: Provider[] = [\n\t{provide: STORAGE_STRATEGIES, useClass: InMemoryStorageStrategy, multi: true},\n\t{provide: STORAGE_STRATEGIES, useClass: LocalStorageStrategy, multi: true},\n\t{provide: STORAGE_STRATEGIES, useClass: SessionStorageStrategy, multi: true},\n];\n","import {Observable, of, Subject} from 'rxjs';\nimport {StorageStrategy} from '../lib/core/interfaces/storageStrategy';\n\nexport const StorageStrategyStubName: string = 'stub_strategy';\n\nexport class StorageStrategyStub implements StorageStrategy<any> {\n\n\treadonly keyChanges: Subject<string> = new Subject();\n\tpublic store: any = {};\n\tpublic _available: boolean = true;\n\treadonly name: string;\n\n\tconstructor(name?: string) {\n\t\tthis.name = name || StorageStrategyStubName;\n\t}\n\n\tget isAvailable(): boolean {\n\t\treturn this._available;\n\t}\n\n\tget(key: string): Observable<any> {\n\t\treturn of(this.store[key]);\n\t}\n\n\tset(key: string, value: any): Observable<any> {\n\t\tthis.store[key] = value;\n\t\tthis.keyChanges.next(key);\n\t\treturn of(value);\n\t}\n\n\tdel(key: string): Observable<void> {\n\t\tdelete this.store[key];\n\t\tthis.keyChanges.next(key);\n\t\treturn of(null);\n\t}\n\n\tclear(): Observable<void> {\n\t\tthis.store = {};\n\t\tthis.keyChanges.next(null);\n\t\treturn of(null);\n\t}\n\n}\n","import {WebStorage} from '../lib/core/interfaces/webStorage';\n\nexport class StorageStub implements WebStorage {\n\t[name: string]: any;\n\n\tpublic store: { [prop: string]: any } = {};\n\n\tget length(): number {\n\t\treturn Object.keys(this.store).length;\n\t}\n\n\tclear(): void {\n\t\tthis.store = {};\n\t}\n\n\tgetItem(key: string): string | null {\n\t\treturn this.store[key] || null;\n\t}\n\n\tkey(index: number): string | null {\n\t\treturn Object.keys(this.store)[index];\n\t}\n\n\tremoveItem(key: string): void {\n\t\tdelete this.store[key];\n\t}\n\n\tsetItem(key: string, value: string): void {\n\t\tthis.store[key] = value;\n\t}\n\n}\n","import {StorageStrategy} from '../core/interfaces/storageStrategy';\nimport {Subject} from 'rxjs';\nimport {Inject, Injectable, Optional} from '@angular/core';\nimport {STORAGE_STRATEGIES} from '../strategies';\nimport {StorageStrategies} from '../constants/strategy';\n\nexport const InvalidStrategyError = 'invalid_strategy';\n\n@Injectable({providedIn: 'root'})\nexport class StrategyIndex {\n\n\tstatic index: { [name: string]: StorageStrategy<any> } = {};\n\treadonly registration$: Subject<string> = new Subject();\n\n\tconstructor(@Optional() @Inject(STORAGE_STRATEGIES) protected strategies: StorageStrategy<any>[]) {\n\t\tif (!strategies) strategies = [];\n\t\tthis.strategies = strategies.reverse()\n\t\t\t.map((strategy: StorageStrategy<any>, index, arr) => strategy.name)\n\t\t\t.map((name: string, index, arr) => arr.indexOf(name) === index ? index : null)\n\t\t\t.filter((index: number) => index !== null)\n\t\t\t.map((index: number) => strategies[index]);\n\t}\n\n\tstatic get(name: string): StorageStrategy<any> {\n\t\tif (!this.isStrategyRegistered(name)) throw Error(InvalidStrategyError);\n\t\tlet strategy: StorageStrategy<any> = this.index[name];\n\t\tif (!strategy.isAvailable) {\n\t\t\tstrategy = this.index[StorageStrategies.InMemory];\n\t\t}\n\t\treturn strategy;\n\t}\n\n\tstatic set(name: string, strategy): void {\n\t\tthis.index[name] = strategy;\n\t}\n\n\tstatic clear(name?: string): void {\n\t\tif (name !== undefined) delete this.index[name];\n\t\telse this.index = {};\n\t}\n\n\tstatic isStrategyRegistered(name: string): boolean {\n\t\treturn name in this.index;\n\t}\n\n\tstatic hasRegistredStrategies(): boolean {\n\t\treturn Object.keys(this.index).length > 0;\n\t}\n\n\tpublic getStrategy(name: string): StorageStrategy<any> {\n\t\treturn StrategyIndex.get(name);\n\t}\n\n\tpublic indexStrategies() {\n\t\tthis.strategies.forEach((strategy: StorageStrategy<any>) => this.register(strategy.name, strategy));\n\t}\n\n\tpublic indexStrategy(name: string, overrideIfExists: boolean = false): StorageStrategy<any> {\n\t\tif (StrategyIndex.isStrategyRegistered(name) && !overrideIfExists) return StrategyIndex.get(name);\n\t\tconst strategy: StorageStrategy<any> = this.strategies.find((strategy: StorageStrategy<any>) => strategy.name === name);\n\t\tif (!strategy) throw new Error(InvalidStrategyError);\n\t\tthis.register(name, strategy, overrideIfExists);\n\t\treturn strategy;\n\t}\n\n\tpublic register(name: string, strategy: StorageStrategy<any>, overrideIfExists: boolean = false) {\n\t\tif (!StrategyIndex.isStrategyRegistered(name) || overrideIfExists) {\n\t\t\tStrategyIndex.set(name, strategy);\n\t\t\tthis.registration$.next(name);\n\t\t}\n\t}\n\n}\n","import {FactoryProvider} from '@angular/core';\nimport {SyncStorage} from '../core/templates/syncStorage';\nimport {StrategyIndex} from './strategyIndex';\nimport {StorageStrategy} from '../core/interfaces/storageStrategy';\nimport {StorageStrategies} from '../constants/strategy';\n\nexport class LocalStorageService extends SyncStorage {}\n\nexport function buildService(index: StrategyIndex) {\n\tconst strategy: StorageStrategy<any> = index.indexStrategy(StorageStrategies.Local);\n\treturn new SyncStorage(strategy);\n}\n\nexport const LocalStorageServiceProvider: FactoryProvider = {\n\tprovide: LocalStorageService,\n\tuseFactory: buildService,\n\tdeps: [StrategyIndex]\n};\n","import {FactoryProvider} from '@angular/core';\nimport {SyncStorage} from '../core/templates/syncStorage';\nimport {StrategyIndex} from './strategyIndex';\nimport {StorageStrategy} from '../core/interfaces/storageStrategy';\nimport {StorageStrategies} from '../constants/strategy';\n\nexport class SessionStorageService extends SyncStorage {}\n\nexport function buildService(index: StrategyIndex) {\n\tconst strategy: StorageStrategy<any> = index.indexStrategy(StorageStrategies.Session);\n\treturn new SyncStorage(strategy);\n}\n\nexport const SessionStorageServiceProvider: FactoryProvider = {\n\tprovide: SessionStorageService,\n\tuseFactory: buildService,\n\tdeps: [StrategyIndex]\n};\n","import {StrategyIndex} from '../services/strategyIndex';\nimport {StorageStrategies} from '../constants/strategy';\nimport {StorageKeyManager} from './storageKeyManager';\nimport {noop} from './noop';\n\nexport class DecoratorBuilder {\n\t\n\tstatic buildSyncStrategyDecorator(strategyName: string | StorageStrategies, prototype, propName: string, key?: string, defaultValue: any = null) {\n\t\tconst rawKey: string = key || propName;\n\t\tlet storageKey: string;\n\t\t\n\t\tObject.defineProperty(prototype, propName, {\n\t\t\tget: function() {\n\t\t\t\tlet value: any;\n\t\t\t\tStrategyIndex.get(strategyName).get(getKey()).subscribe((result) => value = result);\n\t\t\t\treturn value === undefined ? defaultValue : value;\n\t\t\t},\n\t\t\tset: function(value) {\n\t\t\t\tStrategyIndex.get(strategyName).set(getKey(), value).subscribe(noop);\n\t\t\t}\n\t\t});\n\t\t\n\t\tfunction getKey() {\n\t\t\tif (storageKey !== undefined) return storageKey;\n\t\t\treturn storageKey = StorageKeyManager.normalize(rawKey);\n\t\t}\n\t}\n}\n","import {StorageStrategies} from './constants/strategy';\nimport {DecoratorBuilder} from './helpers/decoratorBuilder';\n\nexport function LocalStorage(key?: string, defaultValue?: any) {\n\treturn function(prototype, propName) {\n\t\tDecoratorBuilder.buildSyncStrategyDecorator(StorageStrategies.Local, prototype, propName, key, defaultValue);\n\t};\n}\n\nexport function SessionStorage(key?: string, defaultValue?: any) {\n\treturn function(prototype, propName) {\n\t\tDecoratorBuilder.buildSyncStrategyDecorator(StorageStrategies.Session, prototype, propName, key, defaultValue);\n\t};\n}\n","import {LocalStorageServiceProvider} from './localStorage';\nimport {Provider} from '@angular/core';\nimport {SessionStorageServiceProvider} from './sessionStorage';\n\nexport const Services: Provider[] = [\n\tLocalStorageServiceProvider,\n\tSessionStorageServiceProvider\n];\n","import {APP_INITIALIZER, Inject, InjectionToken, ModuleWithProviders, NgModule, Optional} from '@angular/core';\nimport {LocalStorageProvider, SessionStorageProvider} from './core/nativeStorage';\nimport {Services} from './services/index';\nimport {Strategies} from './strategies/index';\nimport {StrategyIndex} from './services/strategyIndex';\nimport {NgxWebstorageConfiguration} from './config';\nimport {StorageKeyManager} from './helpers/storageKeyManager';\n\nexport const LIB_CONFIG: InjectionToken<NgxWebstorageConfiguration> = new InjectionToken<NgxWebstorageConfiguration>('ngx_webstorage_config');\n\nexport function appInit(index: StrategyIndex) {\n\tindex.indexStrategies();\n\treturn () => StrategyIndex.index;\n}\n\n@NgModule({})\nexport class NgxWebstorageModule {\n\n\tconstructor(index: StrategyIndex, @Optional() @Inject(LIB_CONFIG) config: NgxWebstorageConfiguration) {\n\t\tif (config) StorageKeyManager.consumeConfiguration(config);\n\t\telse console.error('NgxWebstorage : Possible misconfiguration (The forRoot method usage is mandatory since the 3.0.0)');\n\t}\n\n\tstatic forRoot(config: NgxWebstorageConfiguration = {}): ModuleWithProviders<NgxWebstorageModule> {\n\t\treturn {\n\t\t\tngModule: NgxWebstorageModule,\n\t\t\tproviders: [\n\t\t\t\t{\n\t\t\t\t\tprovide: LIB_CONFIG,\n\t\t\t\t\tuseValue: config,\n\t\t\t\t},\n\t\t\t\tLocalStorageProvider,\n\t\t\t\tSessionStorageProvider,\n\t\t\t\t...Services,\n\t\t\t\t...Strategies,\n\t\t\t\t{\n\t\t\t\t\tprovide: APP_INITIALIZER,\n\t\t\t\t\tuseFactory: appInit,\n\t\t\t\t\tdeps: [StrategyIndex],\n\t\t\t\t\tmulti: true\n\t\t\t\t}\n\t\t\t]\n\t\t};\n\t}\n\n}\n","/*\n * Public API Surface of ngx-webstorage\n */\n\nexport * from './lib/constants/strategy';\n\nexport * from './lib/helpers/compat';\n\nexport * from './lib/core/templates/syncStorage';\nexport * from './lib/core/templates/asyncStorage';\nexport * from './lib/core/strategyCache';\nexport {LOCAL_STORAGE, SESSION_STORAGE} from './lib/core/nativeStorage';\n\nexport {STORAGE_STRATEGIES} from './lib/strategies/index';\nexport * from './lib/strategies/localStorage';\nexport * from './lib/strategies/sessionStorage';\nexport * from './lib/strategies/inMemory';\nexport * from './stubs/storageStrategy.stub';\nexport * from './stubs/storage.stub';\n\nexport * from './lib/services/strategyIndex';\nexport {LocalStorageService} from './lib/services/localStorage';\nexport {SessionStorageService} from './lib/services/sessionStorage';\n\nexport * from './lib/core/interfaces/storageStrategy';\nexport * from './lib/decorators';\nexport * from './lib/module';\n\n\n\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n\nexport {NgxWebstorageConfiguration as Éµm} from './lib/config';\nexport {WebStorage as Éµk} from './lib/core/interfaces/webStorage';\nexport {LocalStorageProvider as Éµb,SessionStorageProvider as Éµd,getLocalStorage as Éµa,getSessionStorage as Éµc} from './lib/core/nativeStorage';\nexport {Services as Éµn} from './lib/services/index';\nexport {LocalStorageServiceProvider as Éµg,buildService as Éµf} from './lib/services/localStorage';\nexport {SessionStorageServiceProvider as Éµi,buildService as Éµh} from './lib/services/sessionStorage';\nexport {STORAGE_STRATEGIES as Éµl} from './lib/strategies';\nexport {BaseSyncStorageStrategy as Éµj} from './lib/strategies/baseSyncStorage';\nexport {Strategies as Éµe} from './lib/strategies/index';"]}