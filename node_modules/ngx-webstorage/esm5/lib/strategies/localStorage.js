import { __decorate, __extends, __metadata, __param } from "tslib";
import { StrategyCacheService } from '../core/strategyCache';
import { BaseSyncStorageStrategy } from './baseSyncStorage';
import { Inject, Injectable, NgZone, PLATFORM_ID } from '@angular/core';
import { LOCAL_STORAGE } from '../core/nativeStorage';
import { StorageStrategies } from '../constants/strategy';
import { isPlatformBrowser } from '@angular/common';
var LocalStorageStrategy = /** @class */ (function (_super) {
    __extends(LocalStorageStrategy, _super);
    function LocalStorageStrategy(storage, cache, platformId, zone) {
        var _this = _super.call(this, storage, cache) || this;
        _this.storage = storage;
        _this.cache = cache;
        _this.platformId = platformId;
        _this.zone = zone;
        _this.name = LocalStorageStrategy_1.strategyName;
        if (isPlatformBrowser(_this.platformId))
            _this.listenExternalChanges();
        return _this;
    }
    LocalStorageStrategy_1 = LocalStorageStrategy;
    LocalStorageStrategy.prototype.listenExternalChanges = function () {
        var _this = this;
        window.addEventListener('storage', function (event) { return _this.zone.run(function () {
            if (event.storageArea !== _this.storage)
                return;
            var key = event.key;
            if (key !== null)
                _this.cache.del(_this.name, event.key);
            else
                _this.cache.clear(_this.name);
            _this.keyChanges.next(key);
        }); });
    };
    var LocalStorageStrategy_1;
    LocalStorageStrategy.strategyName = StorageStrategies.Local;
    LocalStorageStrategy.ctorParameters = function () { return [
        { type: undefined, decorators: [{ type: Inject, args: [LOCAL_STORAGE,] }] },
        { type: StrategyCacheService },
        { type: undefined, decorators: [{ type: Inject, args: [PLATFORM_ID,] }] },
        { type: NgZone }
    ]; };
    LocalStorageStrategy = LocalStorageStrategy_1 = __decorate([
        Injectable(),
        __param(0, Inject(LOCAL_STORAGE)),
        __param(2, Inject(PLATFORM_ID)),
        __metadata("design:paramtypes", [Object, StrategyCacheService, Object, NgZone])
    ], LocalStorageStrategy);
    return LocalStorageStrategy;
}(BaseSyncStorageStrategy));
export { LocalStorageStrategy };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibG9jYWxTdG9yYWdlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vbmd4LXdlYnN0b3JhZ2UvIiwic291cmNlcyI6WyJsaWIvc3RyYXRlZ2llcy9sb2NhbFN0b3JhZ2UudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU8sRUFBQyxvQkFBb0IsRUFBQyxNQUFNLHVCQUF1QixDQUFDO0FBQzNELE9BQU8sRUFBQyx1QkFBdUIsRUFBQyxNQUFNLG1CQUFtQixDQUFDO0FBQzFELE9BQU8sRUFBQyxNQUFNLEVBQUUsVUFBVSxFQUFFLE1BQU0sRUFBRSxXQUFXLEVBQUMsTUFBTSxlQUFlLENBQUM7QUFDdEUsT0FBTyxFQUFDLGFBQWEsRUFBQyxNQUFNLHVCQUF1QixDQUFDO0FBQ3BELE9BQU8sRUFBQyxpQkFBaUIsRUFBQyxNQUFNLHVCQUF1QixDQUFDO0FBQ3hELE9BQU8sRUFBQyxpQkFBaUIsRUFBQyxNQUFNLGlCQUFpQixDQUFDO0FBSWxEO0lBQTBDLHdDQUF1QjtJQUloRSw4QkFBNkMsT0FBbUIsRUFDMUMsS0FBMkIsRUFDTixVQUFlLEVBQ3BDLElBQVk7UUFIbEMsWUFJQyxrQkFBTSxPQUFPLEVBQUUsS0FBSyxDQUFDLFNBRXJCO1FBTjRDLGFBQU8sR0FBUCxPQUFPLENBQVk7UUFDMUMsV0FBSyxHQUFMLEtBQUssQ0FBc0I7UUFDTixnQkFBVSxHQUFWLFVBQVUsQ0FBSztRQUNwQyxVQUFJLEdBQUosSUFBSSxDQUFRO1FBTHpCLFVBQUksR0FBVyxzQkFBb0IsQ0FBQyxZQUFZLENBQUM7UUFPekQsSUFBSSxpQkFBaUIsQ0FBQyxLQUFJLENBQUMsVUFBVSxDQUFDO1lBQUUsS0FBSSxDQUFDLHFCQUFxQixFQUFFLENBQUM7O0lBQ3RFLENBQUM7NkJBVlcsb0JBQW9CO0lBWXRCLG9EQUFxQixHQUEvQjtRQUFBLGlCQVFDO1FBUEEsTUFBTSxDQUFDLGdCQUFnQixDQUFDLFNBQVMsRUFBRSxVQUFDLEtBQW1CLElBQUssT0FBQSxLQUFJLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQztZQUN6RSxJQUFJLEtBQUssQ0FBQyxXQUFXLEtBQUssS0FBSSxDQUFDLE9BQU87Z0JBQUUsT0FBTztZQUMvQyxJQUFNLEdBQUcsR0FBVyxLQUFLLENBQUMsR0FBRyxDQUFDO1lBQzlCLElBQUksR0FBRyxLQUFLLElBQUk7Z0JBQUUsS0FBSSxDQUFDLEtBQUssQ0FBQyxHQUFHLENBQUMsS0FBSSxDQUFDLElBQUksRUFBRSxLQUFLLENBQUMsR0FBRyxDQUFDLENBQUM7O2dCQUNsRCxLQUFJLENBQUMsS0FBSyxDQUFDLEtBQUssQ0FBQyxLQUFJLENBQUMsSUFBSSxDQUFDLENBQUM7WUFDakMsS0FBSSxDQUFDLFVBQVUsQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLENBQUM7UUFDM0IsQ0FBQyxDQUFDLEVBTjBELENBTTFELENBQUMsQ0FBQztJQUNMLENBQUM7O0lBbkJlLGlDQUFZLEdBQVcsaUJBQWlCLENBQUMsS0FBSyxDQUFDOztnREFHbEQsTUFBTSxTQUFDLGFBQWE7Z0JBQ0osb0JBQW9CO2dEQUNwQyxNQUFNLFNBQUMsV0FBVztnQkFDSCxNQUFNOztJQVB0QixvQkFBb0I7UUFEaEMsVUFBVSxFQUFFO1FBS0MsV0FBQSxNQUFNLENBQUMsYUFBYSxDQUFDLENBQUE7UUFFckIsV0FBQSxNQUFNLENBQUMsV0FBVyxDQUFDLENBQUE7aURBREgsb0JBQW9CLFVBRXJCLE1BQU07T0FQdEIsb0JBQW9CLENBc0JoQztJQUFELDJCQUFDO0NBQUEsQUF0QkQsQ0FBMEMsdUJBQXVCLEdBc0JoRTtTQXRCWSxvQkFBb0IiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1N0cmF0ZWd5Q2FjaGVTZXJ2aWNlfSBmcm9tICcuLi9jb3JlL3N0cmF0ZWd5Q2FjaGUnO1xuaW1wb3J0IHtCYXNlU3luY1N0b3JhZ2VTdHJhdGVneX0gZnJvbSAnLi9iYXNlU3luY1N0b3JhZ2UnO1xuaW1wb3J0IHtJbmplY3QsIEluamVjdGFibGUsIE5nWm9uZSwgUExBVEZPUk1fSUR9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHtMT0NBTF9TVE9SQUdFfSBmcm9tICcuLi9jb3JlL25hdGl2ZVN0b3JhZ2UnO1xuaW1wb3J0IHtTdG9yYWdlU3RyYXRlZ2llc30gZnJvbSAnLi4vY29uc3RhbnRzL3N0cmF0ZWd5JztcbmltcG9ydCB7aXNQbGF0Zm9ybUJyb3dzZXJ9IGZyb20gJ0Bhbmd1bGFyL2NvbW1vbic7XG5pbXBvcnQge1dlYlN0b3JhZ2V9IGZyb20gJy4uL2NvcmUvaW50ZXJmYWNlcy93ZWJTdG9yYWdlJztcblxuQEluamVjdGFibGUoKVxuZXhwb3J0IGNsYXNzIExvY2FsU3RvcmFnZVN0cmF0ZWd5IGV4dGVuZHMgQmFzZVN5bmNTdG9yYWdlU3RyYXRlZ3kge1xuXHRzdGF0aWMgcmVhZG9ubHkgc3RyYXRlZ3lOYW1lOiBzdHJpbmcgPSBTdG9yYWdlU3RyYXRlZ2llcy5Mb2NhbDtcblx0cmVhZG9ubHkgbmFtZTogc3RyaW5nID0gTG9jYWxTdG9yYWdlU3RyYXRlZ3kuc3RyYXRlZ3lOYW1lO1xuXG5cdGNvbnN0cnVjdG9yKEBJbmplY3QoTE9DQUxfU1RPUkFHRSkgcHJvdGVjdGVkIHN0b3JhZ2U6IFdlYlN0b3JhZ2UsXG5cdCAgICAgICAgICAgIHByb3RlY3RlZCBjYWNoZTogU3RyYXRlZ3lDYWNoZVNlcnZpY2UsXG5cdCAgICAgICAgICAgIEBJbmplY3QoUExBVEZPUk1fSUQpIHByb3RlY3RlZCBwbGF0Zm9ybUlkOiBhbnksXG5cdCAgICAgICAgICAgIHByb3RlY3RlZCB6b25lOiBOZ1pvbmUpIHtcblx0XHRzdXBlcihzdG9yYWdlLCBjYWNoZSk7XG5cdFx0aWYgKGlzUGxhdGZvcm1Ccm93c2VyKHRoaXMucGxhdGZvcm1JZCkpIHRoaXMubGlzdGVuRXh0ZXJuYWxDaGFuZ2VzKCk7XG5cdH1cblxuXHRwcm90ZWN0ZWQgbGlzdGVuRXh0ZXJuYWxDaGFuZ2VzKCkge1xuXHRcdHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKCdzdG9yYWdlJywgKGV2ZW50OiBTdG9yYWdlRXZlbnQpID0+IHRoaXMuem9uZS5ydW4oKCkgPT4ge1xuXHRcdFx0aWYgKGV2ZW50LnN0b3JhZ2VBcmVhICE9PSB0aGlzLnN0b3JhZ2UpIHJldHVybjtcblx0XHRcdGNvbnN0IGtleTogc3RyaW5nID0gZXZlbnQua2V5O1xuXHRcdFx0aWYgKGtleSAhPT0gbnVsbCkgdGhpcy5jYWNoZS5kZWwodGhpcy5uYW1lLCBldmVudC5rZXkpO1xuXHRcdFx0ZWxzZSB0aGlzLmNhY2hlLmNsZWFyKHRoaXMubmFtZSk7XG5cdFx0XHR0aGlzLmtleUNoYW5nZXMubmV4dChrZXkpO1xuXHRcdH0pKTtcblx0fVxuXG59XG4iXX0=