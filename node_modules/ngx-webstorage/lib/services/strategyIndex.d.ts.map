{"version":3,"file":"strategyIndex.d.ts","sources":["strategyIndex.d.ts"],"names":[],"mappings":"AAAA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA","sourcesContent":["import { StorageStrategy } from '../core/interfaces/storageStrategy';\nimport { Subject } from 'rxjs';\nexport declare const InvalidStrategyError = \"invalid_strategy\";\nexport declare class StrategyIndex {\n    protected strategies: StorageStrategy<any>[];\n    static index: {\n        [name: string]: StorageStrategy<any>;\n    };\n    readonly registration$: Subject<string>;\n    constructor(strategies: StorageStrategy<any>[]);\n    static get(name: string): StorageStrategy<any>;\n    static set(name: string, strategy: any): void;\n    static clear(name?: string): void;\n    static isStrategyRegistered(name: string): boolean;\n    static hasRegistredStrategies(): boolean;\n    getStrategy(name: string): StorageStrategy<any>;\n    indexStrategies(): void;\n    indexStrategy(name: string, overrideIfExists?: boolean): StorageStrategy<any>;\n    register(name: string, strategy: StorageStrategy<any>, overrideIfExists?: boolean): void;\n}\n"]}