{"version":3,"file":"inMemory.d.ts","sources":["inMemory.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { StorageStrategy } from '../core/interfaces/storageStrategy';\nimport { Observable, Subject } from 'rxjs';\nimport { StrategyCacheService } from '../core/strategyCache';\nexport declare class InMemoryStorageStrategy implements StorageStrategy<any> {\n    protected cache: StrategyCacheService;\n    static readonly strategyName: string;\n    readonly keyChanges: Subject<string>;\n    isAvailable: boolean;\n    readonly name: string;\n    constructor(cache: StrategyCacheService);\n    get(key: string): Observable<any>;\n    set(key: string, value: any): Observable<any>;\n    del(key: string): Observable<void>;\n    clear(): Observable<void>;\n}\n"]}