{"version":3,"file":"alert.service.d.ts","sources":["alert.service.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA","sourcesContent":["import { NgZone } from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { TranslateService } from '@ngx-translate/core';\nimport { JhiConfigService } from '../config.service';\nexport declare type JhiAlertType = 'success' | 'danger' | 'warning' | 'info';\nexport interface JhiAlert {\n    id?: number;\n    type: JhiAlertType;\n    msg: string;\n    params?: any;\n    timeout?: number;\n    toast?: boolean;\n    position?: string;\n    scoped?: boolean;\n    close?: (alerts: JhiAlert[]) => void;\n}\nexport declare class JhiAlertService {\n    private sanitizer;\n    private configService;\n    private ngZone;\n    private translateService;\n    private alertId;\n    private alerts;\n    private timeout;\n    private toast;\n    private i18nEnabled;\n    constructor(sanitizer: DomSanitizer, configService: JhiConfigService, ngZone: NgZone, translateService: TranslateService);\n    clear(): void;\n    get(): JhiAlert[];\n    success(msg: string, params?: any, position?: string): JhiAlert;\n    error(msg: string, params?: any, position?: string): JhiAlert;\n    warning(msg: string, params?: any, position?: string): JhiAlert;\n    info(msg: string, params?: any, position?: string): JhiAlert;\n    addAlert(alertOptions: JhiAlert, extAlerts: JhiAlert[]): JhiAlert;\n    closeAlert(id: number, extAlerts?: JhiAlert[]): JhiAlert[];\n    closeAlertByIndex(index: number, thisAlerts: JhiAlert[]): JhiAlert[];\n    isToast(): boolean;\n    private factory;\n}\n"]}