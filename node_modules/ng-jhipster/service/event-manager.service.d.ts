import { Observable, Observer, Subscription } from 'rxjs';
import { JhiEventWithContent } from './event-with-content.model';
/**
 * An utility class to manage RX events
 */
import * as ɵngcc0 from '@angular/core';
export declare class JhiEventManager {
    observable: Observable<JhiEventWithContent<any> | string>;
    observer: Observer<JhiEventWithContent<any> | string>;
    constructor();
    /**
     * Method to broadcast the event to observer
     */
    broadcast(event: JhiEventWithContent<any> | string): void;
    /**
     * Method to subscribe to an event with callback
     */
    subscribe(eventName: string, callback: any): Subscription;
    /**
     * Method to unsubscribe the subscription
     */
    destroy(subscriber: Subscription): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<JhiEventManager, never>;
}

//# sourceMappingURL=event-manager.service.d.ts.map