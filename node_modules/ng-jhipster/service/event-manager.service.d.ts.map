{"version":3,"file":"event-manager.service.d.ts","sources":["event-manager.service.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA","sourcesContent":["import { Observable, Observer, Subscription } from 'rxjs';\nimport { JhiEventWithContent } from './event-with-content.model';\n/**\n * An utility class to manage RX events\n */\nexport declare class JhiEventManager {\n    observable: Observable<JhiEventWithContent<any> | string>;\n    observer: Observer<JhiEventWithContent<any> | string>;\n    constructor();\n    /**\n     * Method to broadcast the event to observer\n     */\n    broadcast(event: JhiEventWithContent<any> | string): void;\n    /**\n     * Method to subscribe to an event with callback\n     */\n    subscribe(eventName: string, callback: any): Subscription;\n    /**\n     * Method to unsubscribe the subscription\n     */\n    destroy(subscriber: Subscription): void;\n}\n"]}